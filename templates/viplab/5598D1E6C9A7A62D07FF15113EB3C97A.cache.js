viplab.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.viplab;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.1\";\nvar $strongName = '5598D1E6C9A7A62D07FF15113EB3C97A';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, P0_longLit = {l:0, m:0, h:0}, P3e8_longLit = {l:1000, m:0, h:0}, seedTable = {}, Q$Object = 0, Q$String = 1, Q$AnimationScheduler$AnimationHandle = 2, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 3, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 4, Q$AriaAttributeType = 5, Q$PressedValue = 6, Q$Context2d$TextBaseline = 7, Q$JavaScriptException = 8, Q$Style$Cursor = 9, Q$Style$Display = 10, Q$Style$HasCssName = 11, Q$Style$Overflow = 12, Q$Style$Position = 13, Q$Style$TextAlign = 14, Q$Style$Unit = 15, Q$Style$Visibility = 16, Q$ChangeHandler = 17, Q$ClickHandler = 18, Q$DomEvent$Type = 19, Q$KeyPressHandler = 20, Q$MouseDownHandler = 21, Q$MouseMoveHandler = 22, Q$MouseOutHandler = 23, Q$MouseOverHandler = 24, Q$MouseUpHandler = 25, Q$MouseWheelHandler = 26, Q$TouchCancelHandler = 27, Q$TouchEndHandler = 28, Q$TouchMoveHandler = 29, Q$TouchStartHandler = 30, Q$AttachEvent$Handler = 31, Q$CloseHandler = 32, Q$HasAttachHandlers = 33, Q$ResizeHandler = 34, Q$ValueChangeHandler = 35, Q$EventHandler = 36, Q$HandlerRegistration = 37, Q$HasHandlers = 38, Q$Header = 39, Q$RequestException = 40, Q$DateTimeFormat = 41, Q$HasDirection$Direction = 42, Q$DateTimeFormat$PatternPart = 43, Q$JSONArray = 44, Q$JSONNumber = 45, Q$JSONObject = 46, Q$JSONString = 47, Q$LongLibBase$LongEmul = 48, Q$Layout$Layer = 49, Q$SafeHtml = 50, Q$Point = 51, Q$TouchScroller$TemporalPoint = 52, Q$Event$NativePreviewHandler = 53, Q$EventListener = 54, Q$DockLayoutPanel$Direction = 55, Q$FormPanel$SubmitHandler = 56, Q$Grid = 57, Q$HasVisibility = 58, Q$HasWidgets = 59, Q$IsRenderable = 60, Q$IsWidget = 61, Q$RequiresResize = 62, Q$RootPanel = 63, Q$SplitLayoutPanel$Splitter = 64, Q$UIObject = 65, Q$ValueBoxBase$TextAlignment = 66, Q$Widget = 67, Q$SimpleEventBus$Command = 68, Q$UmbrellaException = 69, Q$double_$1 = 70, Q$Serializable = 71, Q$Serializable_$1 = 72, Q$Boolean = 73, Q$CharSequence = 74, Q$CharSequence_$1 = 75, Q$Comparable = 76, Q$Comparable_$1 = 77, Q$Double = 78, Q$Enum = 79, Q$IllegalArgumentException = 80, Q$IllegalStateException = 81, Q$IndexOutOfBoundsException = 82, Q$Integer = 83, Q$Number = 84, Q$NumberFormatException = 85, Q$Object_$1 = 86, Q$StackTraceElement = 87, Q$String_$1 = 88, Q$Throwable = 89, Q$ArrayList = 90, Q$Date = 91, Q$List = 92, Q$Map = 93, Q$Map$Entry = 94, Q$Set = 95, Q$AceEditorMode = 96, Q$AceEditorTheme = 97, Q$ActionListener = 98, Q$ECSListener = 99, Q$DataSet = 100, Q$Color = 101, Q$EditorInterface = 102, Q$ProgressBar = 103, Q$VerticalMultiSplit = 104, Q$VerticalMultiSplitElement = 105, Q$IOException = 106, Q$JSONException = 107, Q$MissingResourceException = 108, Q$Cookie = 109, Q$ErrorElement = 110, Q$ExerciseElement = 111, Q$HTTPHeader = 112, Q$Request = 113, Q$RestException = 114, Q$ResultElement = 115, Q$TranslationUnit = 116, Q$LinePlotFrame = 117, Q$LinePlotGraph = 118, Q$LinePlotLine = 119, Q$LinePlotText = 120, Q$DataSetRange = 121, Q$Label = 122, Q$Triangle = 123, Q$ZBufferEntry = 124, Q$DataSet_0 = 125, Q$WebGLException = 126, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  if (this$static.requestHandle) {\n    $cancel_1(this$static.requestHandle);\n    this$static.requestHandle = null;\n  }\n  this$static.onCancel();\n}\n\nfunction $run(this$static, duration, startTime){\n  $cancel(this$static);\n  this$static.isRunning = true;\n  this$static.isStarted = false;\n  this$static.duration = duration;\n  this$static.startTime = startTime;\n  ++this$static.runId;\n  $execute(this$static.callback, currentTimeMillis());\n}\n\nfunction $update(this$static, curTime){\n  var curRunId, finished, progress;\n  curRunId = this$static.runId;\n  finished = curTime >= this$static.startTime + this$static.duration;\n  if (this$static.isStarted && !finished) {\n    progress = (curTime - this$static.startTime) / this$static.duration;\n    this$static.onUpdate((1 + Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2);\n    return this$static.isRunning && this$static.runId == curRunId;\n  }\n  if (!this$static.isStarted && curTime >= this$static.startTime) {\n    this$static.isStarted = true;\n    this$static.onStart();\n    if (!(this$static.isRunning && this$static.runId == curRunId)) {\n      return false;\n    }\n  }\n  if (finished) {\n    this$static.isRunning = false;\n    this$static.isStarted = false;\n    this$static.onComplete();\n    return false;\n  }\n  return true;\n}\n\nfunction Animation_0(){\n  Animation_1.call(this, ($clinit_AnimationSchedulerImpl() , INSTANCE));\n}\n\nfunction Animation_1(scheduler){\n  this.callback = new Animation$1_0(this);\n  this.scheduler = scheduler;\n}\n\ndefineSeed(3, 1, {});\n_.onCancel = function onCancel(){\n  this.wasStarted && this.onComplete();\n}\n;\n_.onComplete = function onComplete(){\n  this.onUpdate((1 + cos_0(6.283185307179586)) / 2);\n}\n;\n_.onStart = function onStart(){\n  this.onUpdate((1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.duration = -1;\n_.isRunning = false;\n_.isStarted = false;\n_.runId = -1;\n_.startTime = -1;\n_.wasStarted = false;\nfunction $execute(this$static, timestamp){\n  $update(this$static.this$0, timestamp)?(this$static.this$0.requestHandle = $requestAnimationFrame(this$static.this$0.scheduler, this$static.this$0.callback)):(this$static.this$0.requestHandle = null);\n}\n\nfunction Animation$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(4, 1, {}, Animation$1_0);\n_.execute = function execute(timestamp){\n  $execute(this, timestamp);\n}\n;\ndefineSeed(5, 1, {});\ndefineSeed(6, 1, makeCastMap([Q$AnimationScheduler$AnimationHandle]));\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  var impl;\n  impl = new AnimationSchedulerImplTimer_0;\n  INSTANCE = impl;\n}\n\ndefineSeed(7, 5, {});\nvar INSTANCE;\nfunction $cancelAnimationFrame(this$static, requestId){\n  $remove_13(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 0 && $cancel_0(this$static.timer);\n}\n\nfunction $requestAnimationFrame(this$static, callback){\n  var requestId;\n  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$static, callback);\n  $add_5(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 1 && $schedule(this$static.timer, 16);\n  return requestId;\n}\n\nfunction $updateAnimations(this$static){\n  var curAnimations, duration, requestId, requestId$index, requestId$max;\n  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable, Q$Object_$1]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size_0, 0);\n  curAnimations = dynamicCast($toArray(this$static.animationRequests, curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);\n  duration = new Duration_0;\n  for (requestId$index = 0 , requestId$max = curAnimations.length; requestId$index < requestId$max; ++requestId$index) {\n    requestId = curAnimations[requestId$index];\n    $remove_13(this$static.animationRequests, requestId);\n    requestId.callback.execute(duration.start_0);\n  }\n  this$static.animationRequests.size_0 > 0 && $schedule(this$static.timer, max_2(5, 16 - (currentTimeMillis() - duration.start_0)));\n}\n\nfunction AnimationSchedulerImplTimer_0(){\n  this.animationRequests = new ArrayList_0;\n  this.timer = new AnimationSchedulerImplTimer$1_0(this);\n}\n\ndefineSeed(8, 7, {}, AnimationSchedulerImplTimer_0);\nfunction $cancel_0(this$static){\n  if (!this$static.timerId) {\n    return;\n  }\n  ++this$static.cancelCounter;\n  this$static.isRepeating?clearInterval0(this$static.timerId.value_0):clearTimeout0(this$static.timerId.value_0);\n  this$static.timerId = null;\n}\n\nfunction $schedule(this$static, delayMillis){\n  if (delayMillis < 0) {\n    throw new IllegalArgumentException_1('must be non-negative');\n  }\n  !!this$static.timerId && $cancel_0(this$static);\n  this$static.isRepeating = false;\n  this$static.timerId = valueOf(setTimeout0(createCallback(this$static, this$static.cancelCounter), delayMillis, null));\n}\n\nfunction Timer_0(){\n}\n\nfunction createCallback(timer, cancelCounter){\n  return $entry(function(){\n    timer.fire(cancelCounter);\n  }\n  );\n}\n\ndefineSeed(10, 1, {});\n_.fire = function fire(scheduleCancelCounter){\n  if (scheduleCancelCounter != this.cancelCounter) {\n    return;\n  }\n  this.isRepeating || (this.timerId = null);\n  this.run();\n}\n;\n_.cancelCounter = 0;\n_.isRepeating = false;\n_.timerId = null;\nfunction AnimationSchedulerImplTimer$1_0(this$0){\n  this.this$0 = this$0;\n  Timer_0.call(this);\n}\n\ndefineSeed(9, 10, {}, AnimationSchedulerImplTimer$1_0);\n_.run = function run(){\n  $updateAnimations(this.this$0);\n}\n;\nfunction $cancel_1(this$static){\n  $cancelAnimationFrame(this$static.this$0, this$static);\n}\n\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){\n  this.this$0 = this$0;\n  this.callback = callback;\n}\n\ndefineSeed(11, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]), AnimationSchedulerImplTimer$AnimationHandleImpl_0);\nfunction $set(this$static, element){\n  $setAttribute(element, 'role', this$static.roleName);\n}\n\nfunction RoleImpl_0(roleName){\n  this.roleName = roleName;\n}\n\ndefineSeed(13, 1, {});\nfunction AlertRoleImpl_0(){\n  RoleImpl_0.call(this, 'alert');\n}\n\ndefineSeed(12, 13, {}, AlertRoleImpl_0);\nfunction AlertdialogRoleImpl_0(){\n  RoleImpl_0.call(this, 'alertdialog');\n}\n\ndefineSeed(14, 13, {}, AlertdialogRoleImpl_0);\nfunction ApplicationRoleImpl_0(){\n  RoleImpl_0.call(this, 'application');\n}\n\ndefineSeed(15, 13, {}, ApplicationRoleImpl_0);\nfunction $getAriaValue(this$static, value_0){\n  var buf, item_0, item$index, item$max;\n  buf = new StringBuffer_0;\n  for (item$index = 0 , item$max = value_0.length; item$index < item$max; ++item$index) {\n    item_0 = value_0[item$index];\n    $append_3($append_3(buf, this$static.getSingleValue(item_0)), ' ');\n  }\n  return $trim(buf.impl.string);\n}\n\nfunction $set_0(this$static, element, values){\n  $setAttribute(element, this$static.name_0, $getAriaValue(this$static, values));\n}\n\nfunction Attribute_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(17, 1, {});\nfunction AriaValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(16, 17, {}, AriaValueAttribute_0);\n_.getSingleValue = function getSingleValue(value_0){\n  return $getAriaValue_0(dynamicCast(value_0, Q$AriaAttributeType));\n}\n;\nfunction ArticleRoleImpl_0(){\n  RoleImpl_0.call(this, 'article');\n}\n\ndefineSeed(18, 13, {}, ArticleRoleImpl_0);\nfunction BannerRoleImpl_0(){\n  RoleImpl_0.call(this, 'banner');\n}\n\ndefineSeed(19, 13, {}, BannerRoleImpl_0);\nfunction $setAriaPressedState(element, value_0){\n  $set_0(($clinit_State() , PRESSED), element, initValues(_3Lcom_google_gwt_aria_client_PressedValue_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$PressedValue, [value_0]));\n}\n\nfunction ButtonRoleImpl_0(){\n  RoleImpl_0.call(this, 'button');\n}\n\ndefineSeed(20, 13, {}, ButtonRoleImpl_0);\nfunction CheckboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'checkbox');\n}\n\ndefineSeed(21, 13, {}, CheckboxRoleImpl_0);\nfunction ColumnheaderRoleImpl_0(){\n  RoleImpl_0.call(this, 'columnheader');\n}\n\ndefineSeed(22, 13, {}, ColumnheaderRoleImpl_0);\nfunction ComboboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'combobox');\n}\n\ndefineSeed(23, 13, {}, ComboboxRoleImpl_0);\nfunction ComplementaryRoleImpl_0(){\n  RoleImpl_0.call(this, 'complementary');\n}\n\ndefineSeed(24, 13, {}, ComplementaryRoleImpl_0);\nfunction ContentinfoRoleImpl_0(){\n  RoleImpl_0.call(this, 'contentinfo');\n}\n\ndefineSeed(25, 13, {}, ContentinfoRoleImpl_0);\nfunction DefinitionRoleImpl_0(){\n  RoleImpl_0.call(this, 'definition');\n}\n\ndefineSeed(26, 13, {}, DefinitionRoleImpl_0);\nfunction DialogRoleImpl_0(){\n  RoleImpl_0.call(this, 'dialog');\n}\n\ndefineSeed(27, 13, {}, DialogRoleImpl_0);\nfunction DirectoryRoleImpl_0(){\n  RoleImpl_0.call(this, 'directory');\n}\n\ndefineSeed(28, 13, {}, DirectoryRoleImpl_0);\nfunction DocumentRoleImpl_0(){\n  RoleImpl_0.call(this, 'document');\n}\n\ndefineSeed(29, 13, {}, DocumentRoleImpl_0);\nfunction FormRoleImpl_0(){\n  RoleImpl_0.call(this, 'form');\n}\n\ndefineSeed(30, 13, {}, FormRoleImpl_0);\nfunction GridRoleImpl_0(){\n  RoleImpl_0.call(this, 'grid');\n}\n\ndefineSeed(31, 13, {}, GridRoleImpl_0);\nfunction GridcellRoleImpl_0(){\n  RoleImpl_0.call(this, 'gridcell');\n}\n\ndefineSeed(32, 13, {}, GridcellRoleImpl_0);\nfunction GroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'group');\n}\n\ndefineSeed(33, 13, {}, GroupRoleImpl_0);\nfunction HeadingRoleImpl_0(){\n  RoleImpl_0.call(this, 'heading');\n}\n\ndefineSeed(34, 13, {}, HeadingRoleImpl_0);\nfunction ImgRoleImpl_0(){\n  RoleImpl_0.call(this, 'img');\n}\n\ndefineSeed(35, 13, {}, ImgRoleImpl_0);\nfunction LinkRoleImpl_0(){\n  RoleImpl_0.call(this, 'link');\n}\n\ndefineSeed(36, 13, {}, LinkRoleImpl_0);\nfunction ListRoleImpl_0(){\n  RoleImpl_0.call(this, 'list');\n}\n\ndefineSeed(37, 13, {}, ListRoleImpl_0);\nfunction ListboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'listbox');\n}\n\ndefineSeed(38, 13, {}, ListboxRoleImpl_0);\nfunction ListitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'listitem');\n}\n\ndefineSeed(39, 13, {}, ListitemRoleImpl_0);\nfunction LogRoleImpl_0(){\n  RoleImpl_0.call(this, 'log');\n}\n\ndefineSeed(40, 13, {}, LogRoleImpl_0);\nfunction MainRoleImpl_0(){\n  RoleImpl_0.call(this, 'main');\n}\n\ndefineSeed(41, 13, {}, MainRoleImpl_0);\nfunction MarqueeRoleImpl_0(){\n  RoleImpl_0.call(this, 'marquee');\n}\n\ndefineSeed(42, 13, {}, MarqueeRoleImpl_0);\nfunction MathRoleImpl_0(){\n  RoleImpl_0.call(this, 'math');\n}\n\ndefineSeed(43, 13, {}, MathRoleImpl_0);\nfunction MenuRoleImpl_0(){\n  RoleImpl_0.call(this, 'menu');\n}\n\ndefineSeed(44, 13, {}, MenuRoleImpl_0);\nfunction MenubarRoleImpl_0(){\n  RoleImpl_0.call(this, 'menubar');\n}\n\ndefineSeed(45, 13, {}, MenubarRoleImpl_0);\nfunction MenuitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitem');\n}\n\ndefineSeed(46, 13, {}, MenuitemRoleImpl_0);\nfunction MenuitemcheckboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitemcheckbox');\n}\n\ndefineSeed(47, 13, {}, MenuitemcheckboxRoleImpl_0);\nfunction MenuitemradioRoleImpl_0(){\n  RoleImpl_0.call(this, 'menuitemradio');\n}\n\ndefineSeed(48, 13, {}, MenuitemradioRoleImpl_0);\nfunction NavigationRoleImpl_0(){\n  RoleImpl_0.call(this, 'navigation');\n}\n\ndefineSeed(49, 13, {}, NavigationRoleImpl_0);\nfunction NoteRoleImpl_0(){\n  RoleImpl_0.call(this, 'note');\n}\n\ndefineSeed(50, 13, {}, NoteRoleImpl_0);\nfunction OptionRoleImpl_0(){\n  RoleImpl_0.call(this, 'option');\n}\n\ndefineSeed(51, 13, {}, OptionRoleImpl_0);\nfunction PresentationRoleImpl_0(){\n  RoleImpl_0.call(this, 'presentation');\n}\n\ndefineSeed(52, 13, {}, PresentationRoleImpl_0);\nfunction $compareTo(this$static, other){\n  return this$static.ordinal - other.ordinal;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_1 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(54, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.compareTo$ = function compareTo(other){\n  return $compareTo(this, dynamicCast(other, Q$Enum));\n}\n;\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_1(){\n  return this.name_1;\n}\n;\n_.ordinal = 0;\nfunction $clinit_PressedValue(){\n  $clinit_PressedValue = nullMethod;\n  TRUE = new PressedValue_0('TRUE', 0);\n  FALSE = new PressedValue_0('FALSE', 1);\n  MIXED = new PressedValue_0('MIXED', 2);\n  UNDEFINED = new PressedValue_0('UNDEFINED', 3);\n  $VALUES = initValues(_3Lcom_google_gwt_aria_client_PressedValue_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$PressedValue, [TRUE, FALSE, MIXED, UNDEFINED]);\n}\n\nfunction $getAriaValue_0(this$static){\n  switch (this$static.ordinal) {\n    case 0:\n      return 'true';\n    case 1:\n      return 'false';\n    case 2:\n      return 'mixed';\n    case 3:\n      return 'undefined';\n  }\n  return null;\n}\n\nfunction PressedValue_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_PressedValue();\n  return $VALUES;\n}\n\ndefineSeed(53, 54, makeCastMap([Q$AriaAttributeType, Q$PressedValue, Q$Serializable, Q$Comparable, Q$Enum]), PressedValue_0);\nvar $VALUES, FALSE, MIXED, TRUE, UNDEFINED;\nfunction PrimitiveValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(55, 17, {}, PrimitiveValueAttribute_0);\n_.getSingleValue = function getSingleValue_0(value_0){\n  return '' + value_0;\n}\n;\nfunction ProgressbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'progressbar');\n}\n\ndefineSeed(56, 13, {}, ProgressbarRoleImpl_0);\nfunction RadioRoleImpl_0(){\n  RoleImpl_0.call(this, 'radio');\n}\n\ndefineSeed(57, 13, {}, RadioRoleImpl_0);\nfunction RadiogroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'radiogroup');\n}\n\ndefineSeed(58, 13, {}, RadiogroupRoleImpl_0);\nfunction RegionRoleImpl_0(){\n  RoleImpl_0.call(this, 'region');\n}\n\ndefineSeed(59, 13, {}, RegionRoleImpl_0);\nfunction $clinit_Roles(){\n  $clinit_Roles = nullMethod;\n  ALERTDIALOG = new AlertdialogRoleImpl_0;\n  ALERT = new AlertRoleImpl_0;\n  APPLICATION = new ApplicationRoleImpl_0;\n  ARTICLE = new ArticleRoleImpl_0;\n  BANNER = new BannerRoleImpl_0;\n  BUTTON = new ButtonRoleImpl_0;\n  CHECKBOX = new CheckboxRoleImpl_0;\n  COLUMNHEADER = new ColumnheaderRoleImpl_0;\n  COMBOBOX = new ComboboxRoleImpl_0;\n  COMPLEMENTARY = new ComplementaryRoleImpl_0;\n  CONTENTINFO = new ContentinfoRoleImpl_0;\n  DEFINITION = new DefinitionRoleImpl_0;\n  DIALOG = new DialogRoleImpl_0;\n  DIRECTORY = new DirectoryRoleImpl_0;\n  DOCUMENT = new DocumentRoleImpl_0;\n  FORM = new FormRoleImpl_0;\n  GRIDCELL = new GridcellRoleImpl_0;\n  GRID = new GridRoleImpl_0;\n  GROUP = new GroupRoleImpl_0;\n  HEADING = new HeadingRoleImpl_0;\n  IMG = new ImgRoleImpl_0;\n  LINK = new LinkRoleImpl_0;\n  LISTBOX = new ListboxRoleImpl_0;\n  LISTITEM = new ListitemRoleImpl_0;\n  LIST = new ListRoleImpl_0;\n  LOG = new LogRoleImpl_0;\n  MAIN = new MainRoleImpl_0;\n  MARQUEE = new MarqueeRoleImpl_0;\n  MATH = new MathRoleImpl_0;\n  MENUBAR = new MenubarRoleImpl_0;\n  MENUITEMCHECKBOX = new MenuitemcheckboxRoleImpl_0;\n  MENUITEMRADIO = new MenuitemradioRoleImpl_0;\n  MENUITEM = new MenuitemRoleImpl_0;\n  MENU = new MenuRoleImpl_0;\n  NAVIGATION = new NavigationRoleImpl_0;\n  NOTE = new NoteRoleImpl_0;\n  OPTION = new OptionRoleImpl_0;\n  PRESENTATION = new PresentationRoleImpl_0;\n  PROGRESSBAR = new ProgressbarRoleImpl_0;\n  RADIOGROUP = new RadiogroupRoleImpl_0;\n  RADIO = new RadioRoleImpl_0;\n  REGION = new RegionRoleImpl_0;\n  ROWGROUP = new RowgroupRoleImpl_0;\n  ROWHEADER = new RowheaderRoleImpl_0;\n  ROW = new RowRoleImpl_0;\n  SCROLLBAR = new ScrollbarRoleImpl_0;\n  SEARCH = new SearchRoleImpl_0;\n  SEPARATOR = new SeparatorRoleImpl_0;\n  SLIDER = new SliderRoleImpl_0;\n  SPINBUTTON = new SpinbuttonRoleImpl_0;\n  STATUS = new StatusRoleImpl_0;\n  TABLIST = new TablistRoleImpl_0;\n  TABPANEL = new TabpanelRoleImpl_0;\n  TAB = new TabRoleImpl_0;\n  TEXTBOX = new TextboxRoleImpl_0;\n  TIMER = new TimerRoleImpl_0;\n  TOOLBAR = new ToolbarRoleImpl_0;\n  TOOLTIP = new TooltipRoleImpl_0;\n  TREEGRID = new TreegridRoleImpl_0;\n  TREEITEM = new TreeitemRoleImpl_0;\n  TREE = new TreeRoleImpl_0;\n  ROLES_MAP = new HashMap_0;\n  $put_1(ROLES_MAP, 'region', REGION);\n  $put_1(ROLES_MAP, 'alert', ALERT);\n  $put_1(ROLES_MAP, 'dialog', DIALOG);\n  $put_1(ROLES_MAP, 'alertdialog', ALERTDIALOG);\n  $put_1(ROLES_MAP, 'application', APPLICATION);\n  $put_1(ROLES_MAP, 'document', DOCUMENT);\n  $put_1(ROLES_MAP, 'article', ARTICLE);\n  $put_1(ROLES_MAP, 'banner', BANNER);\n  $put_1(ROLES_MAP, 'button', BUTTON);\n  $put_1(ROLES_MAP, 'checkbox', CHECKBOX);\n  $put_1(ROLES_MAP, 'gridcell', GRIDCELL);\n  $put_1(ROLES_MAP, 'columnheader', COLUMNHEADER);\n  $put_1(ROLES_MAP, 'group', GROUP);\n  $put_1(ROLES_MAP, 'combobox', COMBOBOX);\n  $put_1(ROLES_MAP, 'complementary', COMPLEMENTARY);\n  $put_1(ROLES_MAP, 'contentinfo', CONTENTINFO);\n  $put_1(ROLES_MAP, 'definition', DEFINITION);\n  $put_1(ROLES_MAP, 'list', LIST);\n  $put_1(ROLES_MAP, 'directory', DIRECTORY);\n  $put_1(ROLES_MAP, 'form', FORM);\n  $put_1(ROLES_MAP, 'grid', GRID);\n  $put_1(ROLES_MAP, 'heading', HEADING);\n  $put_1(ROLES_MAP, 'img', IMG);\n  $put_1(ROLES_MAP, 'link', LINK);\n  $put_1(ROLES_MAP, 'listbox', LISTBOX);\n  $put_1(ROLES_MAP, 'listitem', LISTITEM);\n  $put_1(ROLES_MAP, 'log', LOG);\n  $put_1(ROLES_MAP, 'main', MAIN);\n  $put_1(ROLES_MAP, 'marquee', MARQUEE);\n  $put_1(ROLES_MAP, 'math', MATH);\n  $put_1(ROLES_MAP, 'menu', MENU);\n  $put_1(ROLES_MAP, 'menubar', MENUBAR);\n  $put_1(ROLES_MAP, 'menuitem', MENUITEM);\n  $put_1(ROLES_MAP, 'menuitemcheckbox', MENUITEMCHECKBOX);\n  $put_1(ROLES_MAP, 'option', OPTION);\n  $put_1(ROLES_MAP, 'radio', RADIO);\n  $put_1(ROLES_MAP, 'menuitemradio', MENUITEMRADIO);\n  $put_1(ROLES_MAP, 'navigation', NAVIGATION);\n  $put_1(ROLES_MAP, 'note', NOTE);\n  $put_1(ROLES_MAP, 'presentation', PRESENTATION);\n  $put_1(ROLES_MAP, 'progressbar', PROGRESSBAR);\n  $put_1(ROLES_MAP, 'radiogroup', RADIOGROUP);\n  $put_1(ROLES_MAP, 'row', ROW);\n  $put_1(ROLES_MAP, 'rowgroup', ROWGROUP);\n  $put_1(ROLES_MAP, 'rowheader', ROWHEADER);\n  $put_1(ROLES_MAP, 'search', SEARCH);\n  $put_1(ROLES_MAP, 'separator', SEPARATOR);\n  $put_1(ROLES_MAP, 'scrollbar', SCROLLBAR);\n  $put_1(ROLES_MAP, 'slider', SLIDER);\n  $put_1(ROLES_MAP, 'spinbutton', SPINBUTTON);\n  $put_1(ROLES_MAP, 'status', STATUS);\n  $put_1(ROLES_MAP, 'tab', TAB);\n  $put_1(ROLES_MAP, 'tablist', TABLIST);\n  $put_1(ROLES_MAP, 'tabpanel', TABPANEL);\n  $put_1(ROLES_MAP, 'textbox', TEXTBOX);\n  $put_1(ROLES_MAP, 'timer', TIMER);\n  $put_1(ROLES_MAP, 'toolbar', TOOLBAR);\n  $put_1(ROLES_MAP, 'tooltip', TOOLTIP);\n  $put_1(ROLES_MAP, 'tree', TREE);\n  $put_1(ROLES_MAP, 'treegrid', TREEGRID);\n  $put_1(ROLES_MAP, 'treeitem', TREEITEM);\n}\n\nvar ALERT, ALERTDIALOG, APPLICATION, ARTICLE, BANNER, BUTTON, CHECKBOX, COLUMNHEADER, COMBOBOX, COMPLEMENTARY, CONTENTINFO, DEFINITION, DIALOG, DIRECTORY, DOCUMENT, FORM, GRID, GRIDCELL, GROUP, HEADING, IMG, LINK, LIST, LISTBOX, LISTITEM, LOG, MAIN, MARQUEE, MATH, MENU, MENUBAR, MENUITEM, MENUITEMCHECKBOX, MENUITEMRADIO, NAVIGATION, NOTE, OPTION, PRESENTATION, PROGRESSBAR, RADIO, RADIOGROUP, REGION, ROLES_MAP, ROW, ROWGROUP, ROWHEADER, SCROLLBAR, SEARCH, SEPARATOR, SLIDER, SPINBUTTON, STATUS, TAB, TABLIST, TABPANEL, TEXTBOX, TIMER, TOOLBAR, TOOLTIP, TREE, TREEGRID, TREEITEM;\nfunction RowRoleImpl_0(){\n  RoleImpl_0.call(this, 'row');\n}\n\ndefineSeed(61, 13, {}, RowRoleImpl_0);\nfunction RowgroupRoleImpl_0(){\n  RoleImpl_0.call(this, 'rowgroup');\n}\n\ndefineSeed(62, 13, {}, RowgroupRoleImpl_0);\nfunction RowheaderRoleImpl_0(){\n  RoleImpl_0.call(this, 'rowheader');\n}\n\ndefineSeed(63, 13, {}, RowheaderRoleImpl_0);\nfunction ScrollbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'scrollbar');\n}\n\ndefineSeed(64, 13, {}, ScrollbarRoleImpl_0);\nfunction SearchRoleImpl_0(){\n  RoleImpl_0.call(this, 'search');\n}\n\ndefineSeed(65, 13, {}, SearchRoleImpl_0);\nfunction SeparatorRoleImpl_0(){\n  RoleImpl_0.call(this, 'separator');\n}\n\ndefineSeed(66, 13, {}, SeparatorRoleImpl_0);\nfunction SliderRoleImpl_0(){\n  RoleImpl_0.call(this, 'slider');\n}\n\ndefineSeed(67, 13, {}, SliderRoleImpl_0);\nfunction SpinbuttonRoleImpl_0(){\n  RoleImpl_0.call(this, 'spinbutton');\n}\n\ndefineSeed(68, 13, {}, SpinbuttonRoleImpl_0);\nfunction $clinit_State(){\n  $clinit_State = nullMethod;\n  new PrimitiveValueAttribute_0('aria-busy');\n  new AriaValueAttribute_0('aria-checked');\n  new PrimitiveValueAttribute_0('aria-disabled');\n  new AriaValueAttribute_0('aria-expanded');\n  new AriaValueAttribute_0('aria-grabbed');\n  HIDDEN = new PrimitiveValueAttribute_0('aria-hidden');\n  new AriaValueAttribute_0('aria-invalid');\n  PRESSED = new AriaValueAttribute_0('aria-pressed');\n  new AriaValueAttribute_0('aria-selected');\n}\n\nvar HIDDEN, PRESSED;\nfunction StatusRoleImpl_0(){\n  RoleImpl_0.call(this, 'status');\n}\n\ndefineSeed(70, 13, {}, StatusRoleImpl_0);\nfunction TabRoleImpl_0(){\n  RoleImpl_0.call(this, 'tab');\n}\n\ndefineSeed(71, 13, {}, TabRoleImpl_0);\nfunction TablistRoleImpl_0(){\n  RoleImpl_0.call(this, 'tablist');\n}\n\ndefineSeed(72, 13, {}, TablistRoleImpl_0);\nfunction TabpanelRoleImpl_0(){\n  RoleImpl_0.call(this, 'tabpanel');\n}\n\ndefineSeed(73, 13, {}, TabpanelRoleImpl_0);\nfunction TextboxRoleImpl_0(){\n  RoleImpl_0.call(this, 'textbox');\n}\n\ndefineSeed(74, 13, {}, TextboxRoleImpl_0);\nfunction TimerRoleImpl_0(){\n  RoleImpl_0.call(this, 'timer');\n}\n\ndefineSeed(75, 13, {}, TimerRoleImpl_0);\nfunction ToolbarRoleImpl_0(){\n  RoleImpl_0.call(this, 'toolbar');\n}\n\ndefineSeed(76, 13, {}, ToolbarRoleImpl_0);\nfunction TooltipRoleImpl_0(){\n  RoleImpl_0.call(this, 'tooltip');\n}\n\ndefineSeed(77, 13, {}, TooltipRoleImpl_0);\nfunction TreeRoleImpl_0(){\n  RoleImpl_0.call(this, 'tree');\n}\n\ndefineSeed(78, 13, {}, TreeRoleImpl_0);\nfunction TreegridRoleImpl_0(){\n  RoleImpl_0.call(this, 'treegrid');\n}\n\ndefineSeed(79, 13, {}, TreegridRoleImpl_0);\nfunction TreeitemRoleImpl_0(){\n  RoleImpl_0.call(this, 'treeitem');\n}\n\ndefineSeed(80, 13, {}, TreeitemRoleImpl_0);\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $beginPath(this$static){\n  this$static.beginPath();\n}\n\nfunction $clip(this$static){\n  this$static.clip();\n}\n\nfunction $closePath(this$static){\n  this$static.closePath();\n}\n\nfunction $fill(this$static){\n  this$static.fill();\n}\n\nfunction $fillRect(this$static, x_0, y_0, w, h_0){\n  this$static.fillRect(x_0, y_0, w, h_0);\n}\n\nfunction $fillText(this$static, text_0, x_0, y_0){\n  this$static.fillText && this$static.fillText(text_0, x_0, y_0);\n}\n\nfunction $lineTo(this$static, x_0, y_0){\n  this$static.lineTo(x_0, y_0);\n}\n\nfunction $measureText(this$static, text_0){\n  return this$static.measureText(text_0);\n}\n\nfunction $moveTo(this$static, x_0, y_0){\n  this$static.moveTo(x_0, y_0);\n}\n\nfunction $rect(this$static, x_0, y_0, w, h_0){\n  this$static.rect(x_0, y_0, w, h_0);\n}\n\nfunction $restore(this$static){\n  this$static.restore();\n}\n\nfunction $save(this$static){\n  this$static.save();\n}\n\nfunction $setFillStyleWeb(this$static, fillStyle){\n  this$static.fillStyle = fillStyle;\n}\n\nfunction $setFont(this$static, f){\n  this$static.font = f;\n}\n\nfunction $setGlobalAlpha(this$static, alpha_0){\n  this$static.globalAlpha = alpha_0;\n}\n\nfunction $setLineCap(this$static, lineCap){\n  this$static.lineCap = lineCap;\n}\n\nfunction $setStrokeStyleWeb(this$static, strokeStyle){\n  this$static.strokeStyle = strokeStyle;\n}\n\nfunction $setTextBaseline(this$static, baseline){\n  this$static.textBaseline = baseline;\n}\n\nfunction $stroke(this$static){\n  this$static.stroke();\n}\n\nfunction $clinit_Context2d$TextBaseline(){\n  $clinit_Context2d$TextBaseline = nullMethod;\n  ALPHABETIC = new Context2d$TextBaseline_0('ALPHABETIC', 0, 'alphabetic');\n  BOTTOM = new Context2d$TextBaseline_0('BOTTOM', 1, 'bottom');\n  HANGING = new Context2d$TextBaseline_0('HANGING', 2, 'hanging');\n  IDEOGRAPHIC = new Context2d$TextBaseline_0('IDEOGRAPHIC', 3, 'ideographic');\n  MIDDLE = new Context2d$TextBaseline_0('MIDDLE', 4, 'middle');\n  TOP = new Context2d$TextBaseline_0('TOP', 5, 'top');\n  $VALUES_0 = initValues(_3Lcom_google_gwt_canvas_dom_client_Context2d$TextBaseline_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Context2d$TextBaseline, [ALPHABETIC, BOTTOM, HANGING, IDEOGRAPHIC, MIDDLE, TOP]);\n}\n\nfunction Context2d$TextBaseline_0(enum$name, enum$ordinal, value_0){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.value_0 = value_0;\n}\n\nfunction values_1(){\n  $clinit_Context2d$TextBaseline();\n  return $VALUES_0;\n}\n\ndefineSeed(83, 54, makeCastMap([Q$Context2d$TextBaseline, Q$Serializable, Q$Comparable, Q$Enum]), Context2d$TextBaseline_0);\nvar $VALUES_0, ALPHABETIC, BOTTOM, HANGING, IDEOGRAPHIC, MIDDLE, TOP;\nfunction $elapsedMillis(this$static){\n  return currentTimeMillis() - this$static.start_0;\n}\n\nfunction Duration_0(){\n  this.start_0 = currentTimeMillis();\n}\n\nfunction currentTimeMillis(){\n  return (new Date).getTime();\n}\n\ndefineSeed(87, 1, {}, Duration_0);\n_.start_0 = 0;\nfunction isScript(){\n  return true;\n}\n\nfunction $initCause(this$static, cause){\n  if (this$static.cause) {\n    throw new IllegalStateException_1(\"Can't overwrite cause\");\n  }\n  if (cause == this$static) {\n    throw new IllegalArgumentException_1('Self-causation not permitted');\n  }\n  this$static.cause = cause;\n  return this$static;\n}\n\nfunction $setStackTrace(stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n}\n\nfunction $toString(this$static){\n  var className, msg;\n  className = this$static.___clazz$.typeName;\n  msg = this$static.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n\ndefineSeed(92, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getLocalizedMessage = function getLocalizedMessage(){\n  return this.getMessage();\n}\n;\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_2(){\n  return $toString(this);\n}\n;\nfunction Exception_0(){\n  $fillInStackTrace();\n}\n\nfunction Exception_1(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\ndefineSeed(91, 92, makeCastMap([Q$Serializable, Q$Throwable]));\nfunction RuntimeException_0(){\n  Exception_0.call(this);\n}\n\nfunction RuntimeException_1(message){\n  Exception_1.call(this, message);\n}\n\nfunction RuntimeException_2(message, cause){\n  this.cause = cause;\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\ndefineSeed(90, 91, makeCastMap([Q$Serializable, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace();\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(89, 90, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  return $ensureInit(this) , this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction $push(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction create(milliseconds){\n  return new Date(milliseconds);\n}\n\nfunction $clinit_JsonUtils(){\n  $clinit_JsonUtils = nullMethod;\n  escapeTable = initEscapeTable();\n  hasJsonParse = typeof JSON == 'object' && typeof JSON.parse == 'function';\n}\n\nfunction escapeChar(c){\n  var lookedUp = escapeTable[c.charCodeAt(0)];\n  return lookedUp == null?c:lookedUp;\n}\n\nfunction escapeJsonForEval(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return s;\n}\n\nfunction escapeValue(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return '\"' + s + '\"';\n}\n\nfunction initEscapeTable(){\n  var out = ['\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004', '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t', '\\\\n', '\\\\u000B', '\\\\f', '\\\\r', '\\\\u000E', '\\\\u000F', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013', '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018', '\\\\u0019', '\\\\u001A', '\\\\u001B', '\\\\u001C', '\\\\u001D', '\\\\u001E', '\\\\u001F'];\n  out[34] = '\\\\\"';\n  out[92] = '\\\\\\\\';\n  out[173] = '\\\\u00ad';\n  out[1536] = '\\\\u0600';\n  out[1537] = '\\\\u0601';\n  out[1538] = '\\\\u0602';\n  out[1539] = '\\\\u0603';\n  out[1757] = '\\\\u06dd';\n  out[1807] = '\\\\u070f';\n  out[6068] = '\\\\u17b4';\n  out[6069] = '\\\\u17b5';\n  out[8203] = '\\\\u200b';\n  out[8204] = '\\\\u200c';\n  out[8205] = '\\\\u200d';\n  out[8206] = '\\\\u200e';\n  out[8207] = '\\\\u200f';\n  out[8232] = '\\\\u2028';\n  out[8233] = '\\\\u2029';\n  out[8234] = '\\\\u202a';\n  out[8235] = '\\\\u202b';\n  out[8236] = '\\\\u202c';\n  out[8237] = '\\\\u202d';\n  out[8238] = '\\\\u202e';\n  out[8288] = '\\\\u2060';\n  out[8289] = '\\\\u2061';\n  out[8290] = '\\\\u2062';\n  out[8291] = '\\\\u2063';\n  out[8292] = '\\\\u2064';\n  out[8298] = '\\\\u206a';\n  out[8299] = '\\\\u206b';\n  out[8300] = '\\\\u206c';\n  out[8301] = '\\\\u206d';\n  out[8302] = '\\\\u206e';\n  out[8303] = '\\\\u206f';\n  out[65279] = '\\\\ufeff';\n  out[65529] = '\\\\ufff9';\n  out[65530] = '\\\\ufffa';\n  out[65531] = '\\\\ufffb';\n  return out;\n}\n\nvar escapeTable, hasJsonParse = false;\ndefineSeed(98, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem() , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = currentTimeMillis();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      if (isScript()) {\n        return entry0(jsFunction, this, arguments);\n      }\n       else {\n        var __0 = entry0(jsFunction, this, arguments);\n        __0 != null && (__0 = __0.val);\n        return __0;\n      }\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction getModuleBaseURL(){\n  var key = '__gwtDevModeHook:' + $moduleName + ':moduleBase';\n  var global = $wnd || self;\n  return global[key] || $moduleBase;\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  clearTimeout0(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE_0 = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $flushPostEventPumpCommands(this$static){\n  var oldDeferred;\n  if (this$static.deferredCommands) {\n    oldDeferred = this$static.deferredCommands;\n    this$static.deferredCommands = null;\n    !this$static.incrementalCommands && (this$static.incrementalCommands = []);\n    runScheduledTasks(oldDeferred, this$static.incrementalCommands);\n  }\n  !!this$static.incrementalCommands && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));\n}\n\nfunction $isWorkQueued(this$static){\n  return !!this$static.deferredCommands || !!this$static.incrementalCommands;\n}\n\nfunction $maybeSchedulePostEventPumpCommands(this$static){\n  if (!this$static.shouldBeRunning) {\n    this$static.shouldBeRunning = true;\n    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));\n    scheduleFixedDelayImpl(this$static.flusher, 1);\n    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));\n    scheduleFixedDelayImpl(this$static.rescue, 50);\n  }\n}\n\nfunction $runRepeatingTasks(tasks){\n  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;\n  length_0 = tasks.length;\n  if (length_0 == 0) {\n    return null;\n  }\n  canceledSomeTasks = false;\n  duration = new Duration_0;\n  while (currentTimeMillis() - duration.start_0 < 100) {\n    executedSomeTask = false;\n    for (i = 0; i < length_0; i++) {\n      t = tasks[i];\n      if (!t) {\n        continue;\n      }\n      executedSomeTask = true;\n      if (!t[0].execute_0()) {\n        tasks[i] = null;\n        canceledSomeTasks = true;\n      }\n    }\n    if (!executedSomeTask) {\n      break;\n    }\n  }\n  if (canceledSomeTasks) {\n    newTasks = [];\n    for (i = 0; i < length_0; i++) {\n      !!tasks[i] && $push(newTasks, tasks[i]);\n    }\n    return newTasks.length == 0?null:newTasks;\n  }\n   else {\n    return tasks;\n  }\n}\n\nfunction $scheduleDeferred(this$static, cmd){\n  this$static.deferredCommands = push_0(this$static.deferredCommands, [cmd, false]);\n  $maybeSchedulePostEventPumpCommands(this$static);\n}\n\nfunction $scheduleFinally(this$static, cmd){\n  this$static.finallyCommands = push_0(this$static.finallyCommands, [cmd, false]);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction execute_0(cmd){\n  return cmd.execute_0();\n}\n\nfunction push_0(queue, task){\n  $clinit_SchedulerImpl();\n  !queue && (queue = []);\n  $push(queue, task);\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].execute_0() && (rescheduled = push_0(rescheduled, t)):t[0].execute_1();\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  return rescheduled;\n}\n\nfunction scheduleFixedDelayImpl(cmd, delayMs){\n  $clinit_SchedulerImpl();\n  setTimeout_0(function(){\n    var ret = $entry(execute_0)(cmd);\n    !isScript() && (ret = ret == true);\n    ret && setTimeout_0(arguments.callee, delayMs);\n  }\n  , delayMs);\n}\n\ndefineSeed(100, 98, {}, SchedulerImpl_0);\n_.flushRunning = false;\n_.shouldBeRunning = false;\nvar INSTANCE_0;\nfunction SchedulerImpl$Flusher_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(101, 1, {}, SchedulerImpl$Flusher_0);\n_.execute_0 = function execute_1(){\n  this.this$0.flushRunning = true;\n  $flushPostEventPumpCommands(this.this$0);\n  this.this$0.flushRunning = false;\n  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);\n}\n;\nfunction SchedulerImpl$Rescuer_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(102, 1, {}, SchedulerImpl$Rescuer_0);\n_.execute_0 = function execute_2(){\n  this.this$0.flushRunning && scheduleFixedDelayImpl(this.this$0.flusher, 1);\n  return this.this$0.shouldBeRunning;\n}\n;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_1(fnToString, fromCodePoint(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction $collect(this$static){\n  var seen = {};\n  var toReturn = [];\n  var callee = arguments.callee.caller.caller;\n  while (callee) {\n    var name_0 = this$static.extractName(callee.toString());\n    toReturn.push(name_0);\n    var keyName = ':' + name_0;\n    var withThisName = seen[keyName];\n    if (withThisName) {\n      var i, j;\n      for (i = 0 , j = withThisName.length; i < j; i++) {\n        if (withThisName[i] === callee) {\n          return toReturn;\n        }\n      }\n    }\n    (withThisName || (seen[keyName] = [])).push(callee);\n    callee = callee.caller;\n  }\n  return toReturn;\n}\n\nfunction $createStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = [];\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $fillInStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $collect(new StackTraceCreator$Collector_0);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction StackTraceCreator$Collector_0(){\n}\n\ndefineSeed(105, 1, {}, StackTraceCreator$Collector_0);\n_.extractName = function extractName(fnToString){\n  return extractNameFromToString(fnToString);\n}\n;\ndefineSeed(106, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $append_0(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $append_1(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $appendNonNull(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $replace(this$static, start_0, end, toInsert){\n  this$static.string = $substring_0(this$static.string, 0, start_0) + toInsert + $substring(this$static.string, end);\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(107, 106, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction clearInterval0(timerId){\n  $wnd.clearInterval(timerId);\n}\n\nfunction clearTimeout0(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $removeFromParent(this$static){\n  var parent_0;\n  parent_0 = $getParentElement(this$static);\n  !!parent_0 && parent_0.removeChild(this$static);\n}\n\nfunction is_0(o){\n  try {\n    return !!o && !!o.nodeType;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $addClassName(this$static, className){\n  var idx, oldClassName;\n  className = trimClassName(className);\n  oldClassName = this$static.className;\n  idx = indexOfName(oldClassName, className);\n  if (idx == -1) {\n    oldClassName.length > 0?$setClassName(this$static, oldClassName + ' ' + className):$setClassName(this$static, className);\n    return true;\n  }\n  return false;\n}\n\nfunction $getPropertyInt(this$static, name_0){\n  return parseInt(this$static[name_0]) | 0;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $getSubPixelOffsetWidth(this$static){\n  return this$static.offsetWidth || 0;\n}\n\nfunction $getSubPixelScrollWidth(this$static){\n  return this$static.scrollWidth || 0;\n}\n\nfunction $removeAttribute(this$static, name_0){\n  this$static.removeAttribute(name_0);\n}\n\nfunction $removeClassName(this$static, className){\n  var begin, end, idx, newClassName, oldStyle;\n  className = trimClassName(className);\n  oldStyle = this$static.className;\n  idx = indexOfName(oldStyle, className);\n  if (idx != -1) {\n    begin = $trim($substring_0(oldStyle, 0, idx));\n    end = $trim($substring(oldStyle, idx + className.length));\n    begin.length == 0?(newClassName = end):end.length == 0?(newClassName = begin):(newClassName = begin + ' ' + end);\n    $setClassName(this$static, newClassName);\n    return true;\n  }\n  return false;\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setId(this$static, id_0){\n  this$static.id = id_0;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyInt(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setScrollTop(this$static, scrollTop){\n  this$static.scrollTop = scrollTop;\n}\n\nfunction $setTabIndex(this$static, tabIndex){\n  this$static.tabIndex = tabIndex;\n}\n\nfunction indexOfName(nameList, name_0){\n  var idx, last, lastPos;\n  idx = nameList.indexOf(name_0);\n  while (idx != -1) {\n    if (idx == 0 || nameList.charCodeAt(idx - 1) == 32) {\n      last = idx + name_0.length;\n      lastPos = nameList.length;\n      if (last == lastPos || last < lastPos && nameList.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = nameList.indexOf(name_0, idx + 1);\n  }\n  return idx;\n}\n\nfunction is_1(o){\n  if (is_0(o)) {\n    return !!o && o.nodeType == 1;\n  }\n  return false;\n}\n\nfunction trimClassName(className){\n  className = $trim(className);\n  return className;\n}\n\nfunction $setHeight(this$static, height){\n  this$static.height = height;\n}\n\nfunction $setWidth(this$static, width_0){\n  this$static.width = width_0;\n}\n\nfunction $createInputElement(doc, type_0){\n  var e = doc.createElement('INPUT');\n  e.type = type_0;\n  return e;\n}\n\nfunction $eventGetAltKey(evt){\n  return !!evt.altKey;\n}\n\nfunction $eventGetCtrlKey(evt){\n  return !!evt.ctrlKey;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $eventGetMetaKey(evt){\n  return !!evt.metaKey;\n}\n\nfunction $eventGetShiftKey(evt){\n  return !!evt.shiftKey;\n}\n\nfunction $eventGetSubPixelClientX(evt){\n  return evt.clientX || 0;\n}\n\nfunction $eventGetSubPixelClientY(evt){\n  return evt.clientY || 0;\n}\n\nfunction $eventStopPropagation(evt){\n  evt.stopPropagation();\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $selectAdd(select, option, before){\n  select.add(option, before);\n}\n\nfunction $touchGetSubPixelPageX(touch){\n  return touch.pageX || 0;\n}\n\nfunction $touchGetSubPixelPageY(touch){\n  return touch.pageY || 0;\n}\n\nfunction $createMouseEvent(doc, type_0, canBubble, cancelable, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget){\n  button == 1?(button = 0):button == 4?(button = 1):(button = 2);\n  var evt = doc.createEvent('MouseEvents');\n  evt.initMouseEvent(type_0, canBubble, cancelable, null, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget);\n  return evt;\n}\n\nfunction $dispatchEvent(target, evt){\n  target.dispatchEvent(evt);\n}\n\nfunction $eventGetButton(evt){\n  var button = evt.button;\n  if (button == 1) {\n    return 4;\n  }\n   else if (button == 2) {\n    return 2;\n  }\n  return 1;\n}\n\nfunction $eventPreventDefault(evt){\n  evt.preventDefault();\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $createScriptElement(doc, source){\n  var elem;\n  elem = doc.createElement('script');\n  $setInnerText(elem, source);\n  return elem;\n}\n\nfunction $eventGetCurrentTarget(event_0){\n  return event_0.currentTarget || $wnd;\n}\n\nfunction $isRTL(elem){\n  return elem.ownerDocument.defaultView.getComputedStyle(elem, '').direction == 'rtl';\n}\n\nfunction $getAbsoluteLeft(elem){\n  var left;\n  left = $getBoundingClientRectLeft(elem) + $wnd.pageXOffset;\n  $isRTL(elem) && (left += $getParentOffsetDelta(elem));\n  return left | 0;\n}\n\nfunction $getBoundingClientRectLeft(elem){\n  try {\n    return elem.getBoundingClientRect().left;\n  }\n   catch (e) {\n    return 0;\n  }\n}\n\nfunction $getBoundingClientRectTop(elem){\n  try {\n    return elem.getBoundingClientRect().top;\n  }\n   catch (e) {\n    return 0;\n  }\n}\n\nfunction $getParentOffsetDelta(elem){\n  var offsetParent = elem.offsetParent;\n  if (offsetParent) {\n    return offsetParent.offsetWidth - offsetParent.clientWidth;\n  }\n  return 0;\n}\n\nfunction $getScrollLeft(elem){\n  var left;\n  left = (elem.scrollLeft || 0) | 0;\n  $isRTL(elem) && (left = -left);\n  return left;\n}\n\nfunction $getTabIndex(elem){\n  return elem.tabIndex < 65535?elem.tabIndex:-(elem.tabIndex % 65535) - 1;\n}\n\nfunction $setScrollLeft(elem, left){\n  $isRTL(elem) && (left = -left);\n  elem.scrollLeft = left;\n}\n\nfunction isOrHasChildImpl(parent_0, child){\n  if (parent_0.nodeType != 1 && parent_0.nodeType != 9) {\n    return parent_0 == child;\n  }\n  if (child.nodeType != 1) {\n    child = child.parentNode;\n    if (!child) {\n      return false;\n    }\n  }\n  if (parent_0.nodeType == 9) {\n    return parent_0 === child || parent_0.body && parent_0.body.contains(child);\n  }\n   else {\n    return parent_0 === child || parent_0.contains(child);\n  }\n}\n\nfunction $getClientHeight(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientHeight | 0;\n}\n\nfunction $getClientWidth(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientWidth | 0;\n}\n\nfunction $getElementById(this$static, elementId){\n  return this$static.getElementById(elementId);\n}\n\nfunction $getScrollHeight(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollHeight || 0) | 0;\n}\n\nfunction $getScrollWidth(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollWidth || 0) | 0;\n}\n\nfunction $setTarget(this$static, target){\n  this$static.target = target;\n}\n\nfunction $setMaxLength(this$static, maxLength){\n  this$static.maxLength = maxLength;\n}\n\nfunction $setText(this$static, text_0){\n  this$static.text = text_0;\n}\n\nfunction $setSelectedIndex(this$static, index_0){\n  this$static.selectedIndex = index_0;\n}\n\nfunction $setSize(this$static, size_0){\n  this$static.size = size_0;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $clinit_Style$Cursor(){\n  $clinit_Style$Cursor = nullMethod;\n  DEFAULT = new Style$Cursor$1_0;\n  AUTO = new Style$Cursor$2_0;\n  CROSSHAIR = new Style$Cursor$3_0;\n  POINTER = new Style$Cursor$4_0;\n  MOVE = new Style$Cursor$5_0;\n  E_RESIZE = new Style$Cursor$6_0;\n  NE_RESIZE = new Style$Cursor$7_0;\n  NW_RESIZE = new Style$Cursor$8_0;\n  N_RESIZE = new Style$Cursor$9_0;\n  SE_RESIZE = new Style$Cursor$10_0;\n  SW_RESIZE = new Style$Cursor$11_0;\n  S_RESIZE = new Style$Cursor$12_0;\n  W_RESIZE = new Style$Cursor$13_0;\n  TEXT = new Style$Cursor$14_0;\n  WAIT = new Style$Cursor$15_0;\n  HELP = new Style$Cursor$16_0;\n  COL_RESIZE = new Style$Cursor$17_0;\n  ROW_RESIZE = new Style$Cursor$18_0;\n  $VALUES_1 = initValues(_3Lcom_google_gwt_dom_client_Style$Cursor_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Cursor, [DEFAULT, AUTO, CROSSHAIR, POINTER, MOVE, E_RESIZE, NE_RESIZE, NW_RESIZE, N_RESIZE, SE_RESIZE, SW_RESIZE, S_RESIZE, W_RESIZE, TEXT, WAIT, HELP, COL_RESIZE, ROW_RESIZE]);\n}\n\nfunction Style$Cursor_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_2(){\n  $clinit_Style$Cursor();\n  return $VALUES_1;\n}\n\ndefineSeed(130, 54, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_1, AUTO, COL_RESIZE, CROSSHAIR, DEFAULT, E_RESIZE, HELP, MOVE, NE_RESIZE, NW_RESIZE, N_RESIZE, POINTER, ROW_RESIZE, SE_RESIZE, SW_RESIZE, S_RESIZE, TEXT, WAIT, W_RESIZE;\nfunction Style$Cursor$1_0(){\n  Style$Cursor_0.call(this, 'DEFAULT', 0);\n}\n\ndefineSeed(131, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$1_0);\nfunction Style$Cursor$10_0(){\n  Style$Cursor_0.call(this, 'SE_RESIZE', 9);\n}\n\ndefineSeed(132, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$10_0);\nfunction Style$Cursor$11_0(){\n  Style$Cursor_0.call(this, 'SW_RESIZE', 10);\n}\n\ndefineSeed(133, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$11_0);\nfunction Style$Cursor$12_0(){\n  Style$Cursor_0.call(this, 'S_RESIZE', 11);\n}\n\ndefineSeed(134, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$12_0);\nfunction Style$Cursor$13_0(){\n  Style$Cursor_0.call(this, 'W_RESIZE', 12);\n}\n\ndefineSeed(135, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$13_0);\nfunction Style$Cursor$14_0(){\n  Style$Cursor_0.call(this, 'TEXT', 13);\n}\n\ndefineSeed(136, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$14_0);\nfunction Style$Cursor$15_0(){\n  Style$Cursor_0.call(this, 'WAIT', 14);\n}\n\ndefineSeed(137, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$15_0);\nfunction Style$Cursor$16_0(){\n  Style$Cursor_0.call(this, 'HELP', 15);\n}\n\ndefineSeed(138, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$16_0);\nfunction Style$Cursor$17_0(){\n  Style$Cursor_0.call(this, 'COL_RESIZE', 16);\n}\n\ndefineSeed(139, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$17_0);\nfunction Style$Cursor$18_0(){\n  Style$Cursor_0.call(this, 'ROW_RESIZE', 17);\n}\n\ndefineSeed(140, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$18_0);\nfunction Style$Cursor$2_0(){\n  Style$Cursor_0.call(this, 'AUTO', 1);\n}\n\ndefineSeed(141, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$2_0);\nfunction Style$Cursor$3_0(){\n  Style$Cursor_0.call(this, 'CROSSHAIR', 2);\n}\n\ndefineSeed(142, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$3_0);\nfunction Style$Cursor$4_0(){\n  Style$Cursor_0.call(this, 'POINTER', 3);\n}\n\ndefineSeed(143, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$4_0);\nfunction Style$Cursor$5_0(){\n  Style$Cursor_0.call(this, 'MOVE', 4);\n}\n\ndefineSeed(144, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$5_0);\nfunction Style$Cursor$6_0(){\n  Style$Cursor_0.call(this, 'E_RESIZE', 5);\n}\n\ndefineSeed(145, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$6_0);\nfunction Style$Cursor$7_0(){\n  Style$Cursor_0.call(this, 'NE_RESIZE', 6);\n}\n\ndefineSeed(146, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$7_0);\nfunction Style$Cursor$8_0(){\n  Style$Cursor_0.call(this, 'NW_RESIZE', 7);\n}\n\ndefineSeed(147, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$8_0);\nfunction Style$Cursor$9_0(){\n  Style$Cursor_0.call(this, 'N_RESIZE', 8);\n}\n\ndefineSeed(148, 130, makeCastMap([Q$Style$Cursor, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Cursor$9_0);\nfunction $clinit_Style$Display(){\n  $clinit_Style$Display = nullMethod;\n  NONE = new Style$Display$1_0;\n  BLOCK = new Style$Display$2_0;\n  INLINE = new Style$Display$3_0;\n  INLINE_BLOCK = new Style$Display$4_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Display, [NONE, BLOCK, INLINE, INLINE_BLOCK]);\n}\n\nfunction Style$Display_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_3(){\n  $clinit_Style$Display();\n  return $VALUES_2;\n}\n\ndefineSeed(149, 54, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_2, BLOCK, INLINE, INLINE_BLOCK, NONE;\nfunction Style$Display$1_0(){\n  Style$Display_0.call(this, 'NONE', 0);\n}\n\ndefineSeed(150, 149, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$1_0);\nfunction Style$Display$2_0(){\n  Style$Display_0.call(this, 'BLOCK', 1);\n}\n\ndefineSeed(151, 149, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$2_0);\nfunction Style$Display$3_0(){\n  Style$Display_0.call(this, 'INLINE', 2);\n}\n\ndefineSeed(152, 149, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$3_0);\nfunction Style$Display$4_0(){\n  Style$Display_0.call(this, 'INLINE_BLOCK', 3);\n}\n\ndefineSeed(153, 149, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$4_0);\nfunction $clinit_Style$Overflow(){\n  $clinit_Style$Overflow = nullMethod;\n  VISIBLE = new Style$Overflow$1_0;\n  HIDDEN_0 = new Style$Overflow$2_0;\n  SCROLL = new Style$Overflow$3_0;\n  AUTO_0 = new Style$Overflow$4_0;\n  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Overflow, [VISIBLE, HIDDEN_0, SCROLL, AUTO_0]);\n}\n\nfunction Style$Overflow_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_Style$Overflow();\n  return $VALUES_3;\n}\n\ndefineSeed(154, 54, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_3, AUTO_0, HIDDEN_0, SCROLL, VISIBLE;\nfunction Style$Overflow$1_0(){\n  Style$Overflow_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(155, 154, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$1_0);\nfunction Style$Overflow$2_0(){\n  Style$Overflow_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(156, 154, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$2_0);\nfunction Style$Overflow$3_0(){\n  Style$Overflow_0.call(this, 'SCROLL', 2);\n}\n\ndefineSeed(157, 154, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$3_0);\nfunction Style$Overflow$4_0(){\n  Style$Overflow_0.call(this, 'AUTO', 3);\n}\n\ndefineSeed(158, 154, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$4_0);\nfunction $clinit_Style$Position(){\n  $clinit_Style$Position = nullMethod;\n  STATIC = new Style$Position$1_0;\n  RELATIVE = new Style$Position$2_0;\n  ABSOLUTE = new Style$Position$3_0;\n  FIXED = new Style$Position$4_0;\n  $VALUES_4 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);\n}\n\nfunction Style$Position_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_5(){\n  $clinit_Style$Position();\n  return $VALUES_4;\n}\n\ndefineSeed(159, 54, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_4, ABSOLUTE, FIXED, RELATIVE, STATIC;\nfunction Style$Position$1_0(){\n  Style$Position_0.call(this, 'STATIC', 0);\n}\n\ndefineSeed(160, 159, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$1_0);\nfunction Style$Position$2_0(){\n  Style$Position_0.call(this, 'RELATIVE', 1);\n}\n\ndefineSeed(161, 159, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$2_0);\nfunction Style$Position$3_0(){\n  Style$Position_0.call(this, 'ABSOLUTE', 2);\n}\n\ndefineSeed(162, 159, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$3_0);\nfunction Style$Position$4_0(){\n  Style$Position_0.call(this, 'FIXED', 3);\n}\n\ndefineSeed(163, 159, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$4_0);\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES_5 = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_6(){\n  $clinit_Style$TextAlign();\n  return $VALUES_5;\n}\n\ndefineSeed(164, 54, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_5, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(165, 164, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(166, 164, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(167, 164, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\nfunction Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(168, 164, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_Style$Unit(){\n  $clinit_Style$Unit = nullMethod;\n  PX = new Style$Unit$1_0;\n  PCT = new Style$Unit$2_0;\n  EM = new Style$Unit$3_0;\n  EX = new Style$Unit$4_0;\n  PT = new Style$Unit$5_0;\n  PC = new Style$Unit$6_0;\n  IN = new Style$Unit$7_0;\n  CM = new Style$Unit$8_0;\n  MM = new Style$Unit$9_0;\n  $VALUES_6 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);\n}\n\nfunction Style$Unit_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_7(){\n  $clinit_Style$Unit();\n  return $VALUES_6;\n}\n\ndefineSeed(169, 54, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_6, CM, EM, EX, IN, MM, PC, PCT, PT, PX;\nfunction Style$Unit$1_0(){\n  Style$Unit_0.call(this, 'PX', 0);\n}\n\ndefineSeed(170, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$1_0);\n_.getType = function getType(){\n  return 'px';\n}\n;\nfunction Style$Unit$2_0(){\n  Style$Unit_0.call(this, 'PCT', 1);\n}\n\ndefineSeed(171, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$2_0);\n_.getType = function getType_0(){\n  return '%';\n}\n;\nfunction Style$Unit$3_0(){\n  Style$Unit_0.call(this, 'EM', 2);\n}\n\ndefineSeed(172, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$3_0);\n_.getType = function getType_1(){\n  return 'em';\n}\n;\nfunction Style$Unit$4_0(){\n  Style$Unit_0.call(this, 'EX', 3);\n}\n\ndefineSeed(173, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$4_0);\n_.getType = function getType_2(){\n  return 'ex';\n}\n;\nfunction Style$Unit$5_0(){\n  Style$Unit_0.call(this, 'PT', 4);\n}\n\ndefineSeed(174, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$5_0);\n_.getType = function getType_3(){\n  return 'pt';\n}\n;\nfunction Style$Unit$6_0(){\n  Style$Unit_0.call(this, 'PC', 5);\n}\n\ndefineSeed(175, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$6_0);\n_.getType = function getType_4(){\n  return 'pc';\n}\n;\nfunction Style$Unit$7_0(){\n  Style$Unit_0.call(this, 'IN', 6);\n}\n\ndefineSeed(176, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$7_0);\n_.getType = function getType_5(){\n  return 'in';\n}\n;\nfunction Style$Unit$8_0(){\n  Style$Unit_0.call(this, 'CM', 7);\n}\n\ndefineSeed(177, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$8_0);\n_.getType = function getType_6(){\n  return 'cm';\n}\n;\nfunction Style$Unit$9_0(){\n  Style$Unit_0.call(this, 'MM', 8);\n}\n\ndefineSeed(178, 169, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$9_0);\n_.getType = function getType_7(){\n  return 'mm';\n}\n;\nfunction $clinit_Style$Visibility(){\n  $clinit_Style$Visibility = nullMethod;\n  VISIBLE_0 = new Style$Visibility$1_0;\n  HIDDEN_1 = new Style$Visibility$2_0;\n  $VALUES_7 = initValues(_3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Visibility, [VISIBLE_0, HIDDEN_1]);\n}\n\nfunction Style$Visibility_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_8(){\n  $clinit_Style$Visibility();\n  return $VALUES_7;\n}\n\ndefineSeed(179, 54, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_7, HIDDEN_1, VISIBLE_0;\nfunction Style$Visibility$1_0(){\n  Style$Visibility_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(180, 179, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$1_0);\nfunction Style$Visibility$2_0(){\n  Style$Visibility_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(181, 179, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$2_0);\ndefineSeed(185, 1, {});\n_.toString$ = function toString_3(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(184, 185, {});\n_.revive = function revive(){\n  this.dead = false;\n  this.source = null;\n}\n;\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(183, 184, {});\n_.getAssociatedType = function getAssociatedType(){\n  return this.getAssociatedType_0();\n}\n;\nvar registered;\nfunction $clinit_ChangeEvent(){\n  $clinit_ChangeEvent = nullMethod;\n  TYPE = new DomEvent$Type_0('change', new ChangeEvent_0);\n}\n\nfunction ChangeEvent_0(){\n}\n\ndefineSeed(182, 183, {}, ChangeEvent_0);\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ChangeHandler).onChange(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_0(){\n  return TYPE;\n}\n;\nvar TYPE;\ndefineSeed(188, 183, {});\nfunction $getX(this$static){\n  var relativeElem, e;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return e = this$static.nativeEvent , ($eventGetSubPixelClientX(e) | 0) - $getAbsoluteLeft(relativeElem) + $getScrollLeft(relativeElem) + (relativeElem.ownerDocument , $wnd.pageXOffset | 0);\n  }\n  return $eventGetSubPixelClientX(this$static.nativeEvent) | 0;\n}\n\nfunction $getY(this$static){\n  var relativeElem, e;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return e = this$static.nativeEvent , ($eventGetSubPixelClientY(e) | 0) - ($getBoundingClientRectTop(relativeElem) + $wnd.pageYOffset | 0) + ((relativeElem.scrollTop || 0) | 0) + (relativeElem.ownerDocument , $wnd.pageYOffset | 0);\n  }\n  return $eventGetSubPixelClientY(this$static.nativeEvent) | 0;\n}\n\ndefineSeed(187, 188, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE_0 = new DomEvent$Type_0('click', new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(186, 187, {}, ClickEvent_0);\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_1(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\ndefineSeed(191, 1, {});\n_.hashCode$ = function hashCode_2(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_4(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(190, 191, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(eventName, flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast($unsafeGet(registered, eventName), Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, eventName, types);\n  }\n  types.add_0(this);\n  this.name_0 = eventName;\n}\n\ndefineSeed(189, 190, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\ndefineSeed(192, 183, {});\nfunction $clinit_KeyPressEvent(){\n  $clinit_KeyPressEvent = nullMethod;\n  TYPE_1 = new DomEvent$Type_0('keypress', new KeyPressEvent_0);\n}\n\nfunction $dispatch(this$static, handler){\n  $onKeyPress(handler, this$static);\n}\n\nfunction KeyPressEvent_0(){\n}\n\ndefineSeed(193, 192, {}, KeyPressEvent_0);\n_.dispatch = function dispatch_1(handler){\n  $dispatch(this, dynamicCast(handler, Q$KeyPressHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_2(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction $clinit_MouseDownEvent(){\n  $clinit_MouseDownEvent = nullMethod;\n  TYPE_2 = new DomEvent$Type_0('mousedown', new MouseDownEvent_0);\n}\n\nfunction MouseDownEvent_0(){\n}\n\ndefineSeed(194, 187, {}, MouseDownEvent_0);\n_.dispatch = function dispatch_2(handler){\n  dynamicCast(handler, Q$MouseDownHandler).onMouseDown(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_3(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\nfunction $clinit_MouseMoveEvent(){\n  $clinit_MouseMoveEvent = nullMethod;\n  TYPE_3 = new DomEvent$Type_0('mousemove', new MouseMoveEvent_0);\n}\n\nfunction MouseMoveEvent_0(){\n}\n\ndefineSeed(195, 187, {}, MouseMoveEvent_0);\n_.dispatch = function dispatch_3(handler){\n  dynamicCast(handler, Q$MouseMoveHandler).onMouseMove(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_4(){\n  return TYPE_3;\n}\n;\nvar TYPE_3;\nfunction $clinit_MouseOutEvent(){\n  $clinit_MouseOutEvent = nullMethod;\n  TYPE_4 = new DomEvent$Type_0('mouseout', new MouseOutEvent_0);\n}\n\nfunction MouseOutEvent_0(){\n}\n\ndefineSeed(196, 187, {}, MouseOutEvent_0);\n_.dispatch = function dispatch_4(handler){\n  dynamicCast(handler, Q$MouseOutHandler).onMouseOut(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nfunction $clinit_MouseOverEvent(){\n  $clinit_MouseOverEvent = nullMethod;\n  TYPE_5 = new DomEvent$Type_0('mouseover', new MouseOverEvent_0);\n}\n\nfunction MouseOverEvent_0(){\n}\n\ndefineSeed(197, 187, {}, MouseOverEvent_0);\n_.dispatch = function dispatch_5(handler){\n  dynamicCast(handler, Q$MouseOverHandler);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_6(){\n  return TYPE_5;\n}\n;\nvar TYPE_5;\nfunction $clinit_MouseUpEvent(){\n  $clinit_MouseUpEvent = nullMethod;\n  TYPE_6 = new DomEvent$Type_0('mouseup', new MouseUpEvent_0);\n}\n\nfunction MouseUpEvent_0(){\n}\n\ndefineSeed(198, 187, {}, MouseUpEvent_0);\n_.dispatch = function dispatch_6(handler){\n  dynamicCast(handler, Q$MouseUpHandler).onMouseUp(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_7(){\n  return TYPE_6;\n}\n;\nvar TYPE_6;\nfunction $clinit_MouseWheelEvent(){\n  $clinit_MouseWheelEvent = nullMethod;\n  TYPE_7 = new DomEvent$Type_0('mousewheel', new MouseWheelEvent_1);\n  new DomEvent$Type_0('DOMMouseScroll', new MouseWheelEvent_1);\n}\n\nfunction MouseWheelEvent_1(){\n}\n\ndefineSeed(199, 187, {}, MouseWheelEvent_1);\n_.dispatch = function dispatch_7(handler){\n  dynamicCast(handler, Q$MouseWheelHandler).onMouseWheel(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_8(){\n  return TYPE_7;\n}\n;\nvar TYPE_7;\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, key, value_0){\n  this$static.map_0[key] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(200, 1, {}, PrivateMap_0);\ndefineSeed(203, 188, {});\nvar impl_0;\nfunction $clinit_TouchCancelEvent(){\n  $clinit_TouchCancelEvent = nullMethod;\n  TYPE_8 = new DomEvent$Type_0('touchcancel', new TouchCancelEvent_0);\n}\n\nfunction TouchCancelEvent_0(){\n}\n\ndefineSeed(202, 203, {}, TouchCancelEvent_0);\n_.dispatch = function dispatch_8(handler){\n  $onTouchEnd(dynamicCast(handler, Q$TouchCancelHandler).this$0);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_9(){\n  return TYPE_8;\n}\n;\nvar TYPE_8;\nfunction $clinit_TouchEndEvent(){\n  $clinit_TouchEndEvent = nullMethod;\n  TYPE_9 = new DomEvent$Type_0('touchend', new TouchEndEvent_0);\n}\n\nfunction TouchEndEvent_0(){\n}\n\ndefineSeed(204, 203, {}, TouchEndEvent_0);\n_.dispatch = function dispatch_9(handler){\n  $onTouchEnd(dynamicCast(handler, Q$TouchEndHandler).this$0);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_10(){\n  return TYPE_9;\n}\n;\nvar TYPE_9;\nfunction TouchEvent$TouchSupportDetector_0(){\n  var elem;\n  this.isSupported = (elem = document.createElement('div') , elem.setAttribute('ontouchstart', 'return;') , typeof elem.ontouchstart == 'function');\n}\n\ndefineSeed(205, 1, {}, TouchEvent$TouchSupportDetector_0);\n_.isSupported = false;\nfunction $clinit_TouchMoveEvent(){\n  $clinit_TouchMoveEvent = nullMethod;\n  TYPE_10 = new DomEvent$Type_0('touchmove', new TouchMoveEvent_0);\n}\n\nfunction $dispatch_0(this$static, handler){\n  $onTouchMove(handler.this$0, this$static);\n}\n\nfunction TouchMoveEvent_0(){\n}\n\ndefineSeed(206, 203, {}, TouchMoveEvent_0);\n_.dispatch = function dispatch_10(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$TouchMoveHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_11(){\n  return TYPE_10;\n}\n;\nvar TYPE_10;\nfunction $clinit_TouchStartEvent(){\n  $clinit_TouchStartEvent = nullMethod;\n  TYPE_11 = new DomEvent$Type_0('touchstart', new TouchStartEvent_0);\n}\n\nfunction $dispatch_1(this$static, handler){\n  $onTouchStart(handler.this$0, this$static);\n}\n\nfunction TouchStartEvent_0(){\n}\n\ndefineSeed(207, 203, {}, TouchStartEvent_0);\n_.dispatch = function dispatch_11(handler){\n  $dispatch_1(this, dynamicCast(handler, Q$TouchStartHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_12(){\n  return TYPE_11;\n}\n;\nvar TYPE_11;\nfunction $dispatch_2(this$static, handler){\n  this$static.attached?$setupBustClickHandler(handler.this$0):$removeBustClickHandler(handler.this$0);\n}\n\nfunction AttachEvent_0(attached){\n  this.attached = attached;\n}\n\nfunction fire_0(source, attached){\n  var event_0;\n  if (TYPE_12) {\n    event_0 = new AttachEvent_0(attached);\n    !!source.handlerManager && $fireEvent(source.handlerManager, event_0);\n  }\n}\n\ndefineSeed(208, 184, {}, AttachEvent_0);\n_.dispatch = function dispatch_12(handler){\n  $dispatch_2(this, dynamicCast(handler, Q$AttachEvent$Handler));\n}\n;\n_.getAssociatedType = function getAssociatedType_13(){\n  return TYPE_12;\n}\n;\n_.attached = false;\nvar TYPE_12;\nfunction CloseEvent_1(){\n}\n\nfunction fire_1(source){\n  var event_0;\n  if (TYPE_13) {\n    event_0 = new CloseEvent_1;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(209, 184, {}, CloseEvent_1);\n_.dispatch = function dispatch_13(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_14(){\n  return TYPE_13;\n}\n;\nvar TYPE_13;\nfunction ResizeEvent_0(width_0){\n  this.width_0 = width_0;\n}\n\nfunction fire_2(source, width_0){\n  var event_0;\n  if (TYPE_14) {\n    event_0 = new ResizeEvent_0(width_0);\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(210, 184, {}, ResizeEvent_0);\n_.dispatch = function dispatch_14(handler){\n  dynamicCast(handler, Q$ResizeHandler).onResize_0(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_15(){\n  return TYPE_14;\n}\n;\n_.width_0 = 0;\nvar TYPE_14;\nfunction $dispatch_3(handler){\n  handler.this$0.autoHideOnHistoryEvents && handler.this$0.hide(false);\n}\n\nfunction ValueChangeEvent_0(){\n}\n\nfunction fire_3(source){\n  var event_0;\n  if (TYPE_15) {\n    event_0 = new ValueChangeEvent_0;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(211, 184, {}, ValueChangeEvent_0);\n_.dispatch = function dispatch_15(handler){\n  $dispatch_3(dynamicCast(handler, Q$ValueChangeHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_16(){\n  return TYPE_15;\n}\n;\nvar TYPE_15;\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || event_0.revive();\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction $isEventHandled(this$static, e){\n  return $isEventHandled_0(this$static.eventBus, e);\n}\n\nfunction HandlerManager_0(source){\n  HandlerManager_1.call(this, source, false);\n}\n\nfunction HandlerManager_1(source, fireInReverseOrder){\n  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);\n  this.source = source;\n}\n\ndefineSeed(212, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0, HandlerManager_1);\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\ndefineSeed(215, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_5(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, handler);\n  return new SimpleEventBus$1_0(this$static, type_0, handler);\n}\n\nfunction $doAddNow(this$static, type_0, handler){\n  var l_0;\n  l_0 = $ensureHandlerList(this$static, type_0);\n  l_0.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.i > 0:it.i < it.this$0_0.size_1()) {\n      handler = this$static.isReverseOrder?$previous(it):$next_3(it);\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_6(causes, e);\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $doRemoveNow(this$static, type_0, handler){\n  var l_0, removed, sourceMap;\n  l_0 = $getHandlerList(this$static, type_0);\n  removed = l_0.remove(handler);\n  removed && l_0.isEmpty() && (sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map) , dynamicCast($removeNullSlot(sourceMap), Q$List) , sourceMap.size_0 == 0 && $remove_9(this$static.map_0, type_0) , undefined);\n}\n\nfunction $ensureHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put_1(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_3(c$iterator), Q$SimpleEventBus$Command);\n        c.execute_1();\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\nfunction $isEventHandled_0(this$static, eventKey){\n  return $containsKey_0(this$static.map_0, eventKey);\n}\n\ndefineSeed(214, 215, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction $doRemove(this$static, type_0, handler){\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3_0(this$static, type_0, handler)):$doRemoveNow(this$static, type_0, handler);\n}\n\nfunction HandlerManager$Bus_0(fireInReverseOrder){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = fireInReverseOrder;\n}\n\ndefineSeed(213, 214, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(real){\n  this.real = real;\n}\n\ndefineSeed(216, 1, makeCastMap([Q$HandlerRegistration]), LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next_0(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next_0(), Q$Throwable);\n    first?(first = false):($append_1(b.impl, '; ') , b);\n    $append_5(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(218, 90, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(217, 218, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_2);\ndefineSeed(219, 1, makeCastMap([Q$Header]));\nfunction $cancel_2(this$static){\n  var xmlHttp;\n  if (this$static.xmlHttpRequest) {\n    xmlHttp = this$static.xmlHttpRequest;\n    this$static.xmlHttpRequest = null;\n    $clearOnReadyStateChange(xmlHttp);\n    xmlHttp.abort();\n    this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  }\n}\n\nfunction $fireOnResponseReceived(this$static, callback){\n  var errorMsg, exception, response, xhr;\n  if (!this$static.xmlHttpRequest) {\n    return;\n  }\n  this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  xhr = this$static.xmlHttpRequest;\n  this$static.xmlHttpRequest = null;\n  errorMsg = $getBrowserSpecificFailure(xhr);\n  if (errorMsg != null) {\n    exception = new RuntimeException_1(errorMsg);\n    $onError(callback, exception);\n  }\n   else {\n    response = new Request$RequestImplIE6To9$1_0(xhr);\n    $onResponseReceived(callback, response);\n  }\n}\n\nfunction $getBrowserSpecificFailure(xhr){\n  try {\n    if (xhr.status === undefined) {\n      return 'XmlHttpRequest.status == undefined, please see Safari bug http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';\n    }\n    return null;\n  }\n   catch (e) {\n    return 'Unable to read XmlHttpRequest.status; likely causes are a networking error or bad cross-domain request. Please see https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more details';\n  }\n}\n\nfunction Request_0(xmlHttpRequest, timeoutMillis, callback){\n  if (!xmlHttpRequest) {\n    throw new NullPointerException_0;\n  }\n  if (!callback) {\n    throw new NullPointerException_0;\n  }\n  if (timeoutMillis < 0) {\n    throw new IllegalArgumentException_0;\n  }\n  this.timeoutMillis = timeoutMillis;\n  this.xmlHttpRequest = xmlHttpRequest;\n  timeoutMillis > 0?(this.timerId = createTimeout(this, callback, timeoutMillis)):(this.timerId = 0);\n}\n\nfunction createTimeout(request, callback, timeoutMillis){\n  return setTimeout_0($entry(function(){\n    request.fireOnTimeout(callback);\n  }\n  ), timeoutMillis);\n}\n\ndefineSeed(220, 1, {}, Request_0);\n_.fireOnTimeout = function fireOnTimeout(callback){\n  if (!this.xmlHttpRequest) {\n    return;\n  }\n  $cancel_2(this);\n  $onError(callback, new RequestTimeoutException_0(this.timeoutMillis));\n}\n;\n_.timeoutMillis = 0;\n_.timerId = 0;\ndefineSeed(223, 1, {});\ndefineSeed(222, 223, {});\n_.getStatusCode = function getStatusCode(){\n  return this.xmlHttpRequest.status;\n}\n;\n_.getText = function getText(){\n  return this.xmlHttpRequest.responseText;\n}\n;\nfunction Request$RequestImplIE6To9$1_0($anonymous0){\n  this.xmlHttpRequest = $anonymous0;\n}\n\ndefineSeed(221, 222, {}, Request$RequestImplIE6To9$1_0);\n_.getStatusCode = function getStatusCode_0(){\n  var statusCode;\n  statusCode = this.xmlHttpRequest.status;\n  return statusCode == 1223?204:statusCode;\n}\n;\nfunction $clinit_RequestBuilder(){\n  $clinit_RequestBuilder = nullMethod;\n  DELETE = new RequestBuilder$Method_0('DELETE');\n  GET = new RequestBuilder$Method_0('GET');\n  new RequestBuilder$Method_0('HEAD');\n  POST = new RequestBuilder$Method_0('POST');\n  new RequestBuilder$Method_0('PUT');\n}\n\nfunction $doSend(this$static, requestData, callback){\n  var e, request, requestPermissionException, xmlHttpRequest;\n  xmlHttpRequest = create_2();\n  try {\n    $open(xmlHttpRequest, this$static.httpMethod, this$static.url_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      e = $e0;\n      requestPermissionException = new RequestPermissionException_0(this$static.url_0);\n      $initCause(requestPermissionException, new RequestException_0(e.getMessage()));\n      throw requestPermissionException;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n  $setHeaders(this$static, xmlHttpRequest);\n  this$static.includeCredentials && (xmlHttpRequest.withCredentials = true , undefined);\n  request = new Request_0(xmlHttpRequest, this$static.timeoutMillis, callback);\n  $setOnReadyStateChange(xmlHttpRequest, new RequestBuilder$1_0(request, callback));\n  try {\n    xmlHttpRequest.send(requestData);\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$JavaScriptException)) {\n      e = $e1;\n      throw new RequestException_0(e.getMessage());\n    }\n     else \n      throw unwrap_5($e1);\n  }\n  return request;\n}\n\nfunction $send(this$static){\n  throwIfNull('callback', this$static.callback);\n  return $doSend(this$static, this$static.requestData, this$static.callback);\n}\n\nfunction $setCallback(this$static, callback){\n  throwIfNull('callback', callback);\n  this$static.callback = callback;\n}\n\nfunction $setHeader(this$static, header, value_0){\n  throwIfEmptyOrNull('header', header);\n  throwIfEmptyOrNull('value', value_0);\n  !this$static.headers && (this$static.headers = new HashMap_0);\n  $put_1(this$static.headers, header, value_0);\n}\n\nfunction $setHeaders(this$static, xmlHttpRequest){\n  var e, header, header$iterator;\n  if (!!this$static.headers && this$static.headers.size_0 > 0) {\n    for (header$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this$static.headers)).this$0); $hasNext(header$iterator.iter);) {\n      header = header$iterator.last = dynamicCast($next_3(header$iterator.iter), Q$Map$Entry);\n      try {\n        $setRequestHeader(xmlHttpRequest, dynamicCast(header.getKey(), Q$String), dynamicCast(header.getValue_0(), Q$String));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$JavaScriptException)) {\n          e = $e0;\n          throw new RequestException_0(e.getMessage());\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n  }\n   else {\n    $setRequestHeader(xmlHttpRequest, 'Content-Type', 'text/plain; charset=utf-8');\n  }\n}\n\nfunction $setRequestData(this$static, requestData){\n  this$static.requestData = requestData;\n}\n\nfunction RequestBuilder_0(httpMethod, url_0){\n  $clinit_RequestBuilder();\n  RequestBuilder_1.call(this, !httpMethod?null:httpMethod.name_0, url_0);\n}\n\nfunction RequestBuilder_1(httpMethod, url_0){\n  throwIfEmptyOrNull('httpMethod', httpMethod);\n  throwIfEmptyOrNull('url', url_0);\n  this.httpMethod = httpMethod;\n  this.url_0 = url_0;\n}\n\ndefineSeed(224, 1, {}, RequestBuilder_0);\n_.includeCredentials = false;\n_.timeoutMillis = 0;\nvar DELETE, GET, POST;\nfunction RequestBuilder$1_0(val$request, val$callback){\n  this.val$request = val$request;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(225, 1, {}, RequestBuilder$1_0);\n_.onReadyStateChange = function onReadyStateChange(xhr){\n  if (xhr.readyState == 4) {\n    $clearOnReadyStateChange(xhr);\n    $fireOnResponseReceived(this.val$request, this.val$callback);\n  }\n}\n;\nfunction RequestBuilder$Method_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(226, 1, {}, RequestBuilder$Method_0);\n_.toString$ = function toString_5(){\n  return this.name_0;\n}\n;\nfunction RequestException_0(message){\n  Exception_1.call(this, message);\n}\n\ndefineSeed(227, 91, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestException_0);\nfunction RequestPermissionException_0(url_0){\n  RequestException_0.call(this, 'The URL ' + url_0 + ' is invalid or violates the same-origin security restriction');\n}\n\ndefineSeed(228, 227, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestPermissionException_0);\nfunction RequestTimeoutException_0(timeoutMillis){\n  RequestException_0.call(this, 'A request timeout has expired after ' + timeoutMillis + ' ms');\n}\n\ndefineSeed(229, 227, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestTimeoutException_0);\nfunction throwIfEmptyOrNull(name_0, value_0){\n  throwIfNull(name_0, value_0);\n  if (0 == $trim(value_0).length) {\n    throw new IllegalArgumentException_1(name_0 + ' cannot be empty');\n  }\n}\n\nfunction throwIfNull(name_0, value_0){\n  if (null == value_0) {\n    throw new NullPointerException_1(name_0 + ' cannot be null');\n  }\n}\n\nfunction AutoDirectionHandler_0(){\n}\n\nfunction addTo(){\n  var autoDirHandler;\n  autoDirHandler = new AutoDirectionHandler_0;\n  return autoDirHandler;\n}\n\ndefineSeed(231, 1, makeCastMap([Q$EventHandler]), AutoDirectionHandler_0);\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT_0;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT_0) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $getDefaultNative(){\n  return ['USD', '$', 2, 'US$', '$'];\n}\n\nfunction $clinit_DateTimeFormat(){\n  $clinit_DateTimeFormat = nullMethod;\n  new HashMap_0;\n}\n\nfunction $addPart(this$static, buf, count){\n  var oldLength;\n  if (buf.impl.string.length > 0) {\n    $add_5(this$static.patternParts, new DateTimeFormat$PatternPart_0(buf.impl.string, count));\n    oldLength = buf.impl.string.length;\n    0 < oldLength?($replace(buf.impl, 0, oldLength, '') , buf):0 > oldLength && $append_4(buf, initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, -oldLength, 1));\n  }\n}\n\nfunction $format(this$static, date, timeZone){\n  var ch_0, diff, i, j, keepDate, keepTime, n, toAppendTo, trailQuote;\n  !timeZone && (timeZone = createTimeZone(date.jsdate.getTimezoneOffset()));\n  diff = (date.jsdate.getTimezoneOffset() - timeZone.standardOffset) * 60000;\n  keepDate = new Date_2(add_2(fromDouble(date.jsdate.getTime()), fromInt(diff)));\n  keepTime = keepDate;\n  if (keepDate.jsdate.getTimezoneOffset() != date.jsdate.getTimezoneOffset()) {\n    diff > 0?(diff -= 86400000):(diff += 86400000);\n    keepTime = new Date_2(add_2(fromDouble(date.jsdate.getTime()), fromInt(diff)));\n  }\n  toAppendTo = new StringBuffer_1;\n  n = this$static.pattern.length;\n  for (i = 0; i < n;) {\n    ch_0 = $charAt(this$static.pattern, i);\n    if (ch_0 >= 97 && ch_0 <= 122 || ch_0 >= 65 && ch_0 <= 90) {\n      for (j = i + 1; j < n && $charAt(this$static.pattern, j) == ch_0; ++j) {\n      }\n      $subFormat(toAppendTo, ch_0, j - i, keepDate, keepTime, timeZone);\n      i = j;\n    }\n     else if (ch_0 == 39) {\n      ++i;\n      if (i < n && $charAt(this$static.pattern, i) == 39) {\n        $appendNonNull(toAppendTo.impl, \"'\");\n        ++i;\n        continue;\n      }\n      trailQuote = false;\n      while (!trailQuote) {\n        j = i;\n        while (j < n && $charAt(this$static.pattern, j) != 39) {\n          ++j;\n        }\n        if (j >= n) {\n          throw new IllegalArgumentException_1(\"Missing trailing '\");\n        }\n        j + 1 < n && $charAt(this$static.pattern, j + 1) == 39?++j:(trailQuote = true);\n        $append_3(toAppendTo, $substring_0(this$static.pattern, i, j));\n        i = j + 1;\n      }\n    }\n     else {\n      $appendNonNull(toAppendTo.impl, valueOf_0(ch_0));\n      ++i;\n    }\n  }\n  return toAppendTo.impl.string;\n}\n\nfunction $formatFractionalSeconds(buf, count, date){\n  var time, value_0;\n  time = fromDouble(date.jsdate.getTime());\n  if (lt(time, P0_longLit)) {\n    value_0 = 1000 - toInt(mod(neg(time), P3e8_longLit));\n    value_0 == 1000 && (value_0 = 0);\n  }\n   else {\n    value_0 = toInt(mod(time, P3e8_longLit));\n  }\n  if (count == 1) {\n    value_0 = ~~((value_0 + 50) / 100) < 9?~~((value_0 + 50) / 100):9;\n    $appendNonNull(buf.impl, String.fromCharCode(48 + value_0 & 65535));\n  }\n   else if (count == 2) {\n    value_0 = ~~((value_0 + 5) / 10) < 99?~~((value_0 + 5) / 10):99;\n    $zeroPaddingNumber(buf, value_0, 2);\n  }\n   else {\n    $zeroPaddingNumber(buf, value_0, 3);\n    count > 3 && $zeroPaddingNumber(buf, 0, count - 3);\n  }\n}\n\nfunction $formatMonth(buf, count, date){\n  var value_0;\n  value_0 = date.jsdate.getMonth();\n  switch (count) {\n    case 5:\n      $append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_0]);\n      break;\n    case 4:\n      $append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_0]);\n      break;\n    case 3:\n      $append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_0]);\n      break;\n    default:$zeroPaddingNumber(buf, value_0 + 1, count);\n  }\n}\n\nfunction $formatYear(buf, count, date){\n  var value_0;\n  value_0 = date.jsdate.getFullYear() - 1900 + 1900;\n  value_0 < 0 && (value_0 = -value_0);\n  switch (count) {\n    case 1:\n      $append(buf.impl, value_0);\n      break;\n    case 2:\n      $zeroPaddingNumber(buf, value_0 % 100, 2);\n      break;\n    default:$zeroPaddingNumber(buf, value_0, count);\n  }\n}\n\nfunction $getNextCharCountInPattern(start_0){\n  var ch_0, next;\n  ch_0 = 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(start_0);\n  next = start_0 + 1;\n  while (next < 21 && 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(next) == ch_0) {\n    ++next;\n  }\n  return next - start_0;\n}\n\nfunction $identifyAbutStart(this$static){\n  var abut, i, len;\n  abut = false;\n  len = this$static.patternParts.size_0;\n  for (i = 0; i < len; i++) {\n    if ($isNumeric(dynamicCast($get_5(this$static.patternParts, i), Q$DateTimeFormat$PatternPart))) {\n      if (!abut && i + 1 < len && $isNumeric(dynamicCast($get_5(this$static.patternParts, i + 1), Q$DateTimeFormat$PatternPart))) {\n        abut = true;\n        dynamicCast($get_5(this$static.patternParts, i), Q$DateTimeFormat$PatternPart).abutStart = true;\n      }\n    }\n     else {\n      abut = false;\n    }\n  }\n}\n\nfunction $isNumeric(part){\n  var i;\n  if (part.count <= 0) {\n    return false;\n  }\n  i = $indexOf_1('MLydhHmsSDkK', fromCodePoint(part.text_0.charCodeAt(0)));\n  return i > 1 || i >= 0 && part.count < 3;\n}\n\nfunction $parsePattern(this$static){\n  var buf, ch_0, count, i, inQuote;\n  buf = new StringBuffer_1;\n  inQuote = false;\n  for (i = 0; i < 21; i++) {\n    ch_0 = 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(i);\n    if (ch_0 == 32) {\n      $addPart(this$static, buf, 0);\n      $appendNonNull(buf.impl, ' ');\n      $addPart(this$static, buf, 0);\n      while (i + 1 < 21 && 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(i + 1) == 32) {\n        ++i;\n      }\n      continue;\n    }\n    if (inQuote) {\n      if (ch_0 == 39) {\n        if (i + 1 < 21 && 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(i + 1) == 39) {\n          $appendNonNull(buf.impl, \"'\");\n          ++i;\n        }\n         else {\n          inQuote = false;\n        }\n      }\n       else {\n        $appendNonNull(buf.impl, valueOf_0(ch_0));\n      }\n      continue;\n    }\n    if ($indexOf_1('GyMLdkHmsSEcDahKzZv', fromCodePoint(ch_0)) > 0) {\n      $addPart(this$static, buf, 0);\n      $appendNonNull(buf.impl, valueOf_0(ch_0));\n      count = $getNextCharCountInPattern(i);\n      $addPart(this$static, buf, count);\n      i += count - 1;\n      continue;\n    }\n    if (ch_0 == 39) {\n      if (i + 1 < 21 && 'yyyy-MM-dd HH:mm:ss Z'.charCodeAt(i + 1) == 39) {\n        $appendNonNull(buf.impl, \"'\");\n        ++i;\n      }\n       else {\n        inQuote = true;\n      }\n    }\n     else {\n      $appendNonNull(buf.impl, valueOf_0(ch_0));\n    }\n  }\n  $addPart(this$static, buf, 0);\n  $identifyAbutStart(this$static);\n}\n\nfunction $subFormat(buf, ch_0, count, adjustedDate, adjustedTime, timezone){\n  var value_0, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11;\n  switch (ch_0) {\n    case 71:\n      value_0 = adjustedDate.jsdate.getFullYear() - 1900 >= -1900?1:0;\n      count >= 4?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Before Christ', 'Anno Domini'])[value_0]):$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['BC', 'AD'])[value_0]);\n      break;\n    case 121:\n      $formatYear(buf, count, adjustedDate);\n      break;\n    case 77:\n      $formatMonth(buf, count, adjustedDate);\n      break;\n    case 107:\n      value_1 = adjustedTime.jsdate.getHours();\n      value_1 == 0?$zeroPaddingNumber(buf, 24, count):$zeroPaddingNumber(buf, value_1, count);\n      break;\n    case 83:\n      $formatFractionalSeconds(buf, count, adjustedTime);\n      break;\n    case 69:\n      value_2 = adjustedDate.jsdate.getDay();\n      count == 5?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_2]):count == 4?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_2]):$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_2]);\n      break;\n    case 97:\n      adjustedTime.jsdate.getHours() >= 12 && adjustedTime.jsdate.getHours() < 24?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['AM', 'PM'])[1]):$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['AM', 'PM'])[0]);\n      break;\n    case 104:\n      value_3 = adjustedTime.jsdate.getHours() % 12;\n      value_3 == 0?$zeroPaddingNumber(buf, 12, count):$zeroPaddingNumber(buf, value_3, count);\n      break;\n    case 75:\n      value_4 = adjustedTime.jsdate.getHours() % 12;\n      $zeroPaddingNumber(buf, value_4, count);\n      break;\n    case 72:\n      value_5 = adjustedTime.jsdate.getHours();\n      $zeroPaddingNumber(buf, value_5, count);\n      break;\n    case 99:\n      value_6 = adjustedDate.jsdate.getDay();\n      count == 5?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_6]):count == 4?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_6]):count == 3?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_6]):$zeroPaddingNumber(buf, value_6, 1);\n      break;\n    case 76:\n      value_7 = adjustedDate.jsdate.getMonth();\n      count == 5?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_7]):count == 4?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_7]):count == 3?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_7]):$zeroPaddingNumber(buf, value_7 + 1, count);\n      break;\n    case 81:\n      value_8 = ~~(adjustedDate.jsdate.getMonth() / 3);\n      count < 4?$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Q1', 'Q2', 'Q3', 'Q4'])[value_8]):$append_3(buf, initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'])[value_8]);\n      break;\n    case 100:\n      value_9 = adjustedDate.jsdate.getDate();\n      $zeroPaddingNumber(buf, value_9, count);\n      break;\n    case 109:\n      value_10 = adjustedTime.jsdate.getMinutes();\n      $zeroPaddingNumber(buf, value_10, count);\n      break;\n    case 115:\n      value_11 = adjustedTime.jsdate.getSeconds();\n      $zeroPaddingNumber(buf, value_11, count);\n      break;\n    case 122:\n      count < 4?$append_3(buf, timezone.tzNames[0]):$append_3(buf, timezone.tzNames[1]);\n      break;\n    case 118:\n      $append_3(buf, timezone.timezoneID);\n      break;\n    case 90:\n      count < 3?$append_3(buf, $getRFCTimeZoneString(timezone)):count == 3?$append_3(buf, $getISOTimeZoneString(timezone)):$append_3(buf, composeGMTString(timezone.standardOffset));\n      break;\n    default:return false;\n  }\n  return true;\n}\n\nfunction $zeroPaddingNumber(buf, value_0, minWidth){\n  var b, i;\n  b = 10;\n  for (i = 0; i < minWidth - 1; i++) {\n    value_0 < b && ($appendNonNull(buf.impl, '0') , buf);\n    b *= 10;\n  }\n  $append(buf.impl, value_0);\n}\n\ndefineSeed(237, 1, {});\nfunction $clinit_DateTimeFormat_0(){\n  $clinit_DateTimeFormat_0 = nullMethod;\n  $clinit_DateTimeFormat();\n  cache = new HashMap_0;\n}\n\nfunction DateTimeFormat_1(){\n  $clinit_DateTimeFormat();\n  this.patternParts = new ArrayList_0;\n  this.pattern = 'yyyy-MM-dd HH:mm:ss Z';\n  $parsePattern(this);\n}\n\nfunction getFormat(dtfi){\n  $clinit_DateTimeFormat_0();\n  var defaultDtfi, dtf;\n  defaultDtfi = $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance));\n  dtf = null;\n  dtfi == defaultDtfi && (dtf = dynamicCast($get_4(cache, 'yyyy-MM-dd HH:mm:ss Z'), Q$DateTimeFormat));\n  if (!dtf) {\n    dtf = new DateTimeFormat_1;\n    dtfi == defaultDtfi && $put_1(cache, 'yyyy-MM-dd HH:mm:ss Z', dtf);\n  }\n  return dtf;\n}\n\ndefineSeed(236, 237, makeCastMap([Q$DateTimeFormat]), DateTimeFormat_1);\nvar cache;\ndefineSeed(239, 1, {});\ndefineSeed(238, 239, {});\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT_0 = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_8 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT_0]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_9(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_8;\n}\n\ndefineSeed(240, 54, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_8, DEFAULT_0, LTR, RTL;\nfunction $clinit_LocaleInfo(){\n  $clinit_LocaleInfo = nullMethod;\n  instance = new LocaleInfo_0;\n}\n\nfunction $getDateTimeFormatInfo(this$static){\n  !this$static.dateTimeFormatInfo && (this$static.dateTimeFormatInfo = new DateTimeFormatInfoImpl_en_0);\n  return this$static.dateTimeFormatInfo;\n}\n\nfunction $getNumberConstants(this$static){\n  !this$static.numberConstants && (this$static.numberConstants = new NumberConstantsImpl_en_0);\n  return this$static.numberConstants;\n}\n\nfunction LocaleInfo_0(){\n}\n\ndefineSeed(241, 1, {}, LocaleInfo_0);\nvar instance;\nfunction $clinit_NumberFormat(){\n  $clinit_NumberFormat = nullMethod;\n  $getNumberConstants(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance));\n}\n\nfunction $addExponent(this$static, digits){\n  var exponentDigits, i;\n  $append_1(digits.impl, 'E');\n  if (this$static.exponent < 0) {\n    this$static.exponent = -this$static.exponent;\n    $append_1(digits.impl, '-');\n  }\n  exponentDigits = '' + this$static.exponent;\n  for (i = exponentDigits.length; i < this$static.minExponentDigits; ++i) {\n    $appendNonNull(digits.impl, '0');\n  }\n  $append_1(digits.impl, exponentDigits);\n}\n\nfunction $addZeroAndDecimal(this$static, digits, decimalSeparator){\n  if (this$static.digitsLength == 0) {\n    $replace(digits.impl, 0, 0, '0');\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n  if (this$static.decimalPosition < this$static.digitsLength || this$static.decimalSeparatorAlwaysShown) {\n    $insert_2(digits, this$static.decimalPosition, valueOf_0(decimalSeparator));\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $adjustFractionDigits(this$static, digits){\n  var requiredDigits, toRemove;\n  requiredDigits = this$static.decimalPosition + this$static.minimumFractionDigits;\n  if (this$static.digitsLength < requiredDigits) {\n    while (this$static.digitsLength < requiredDigits) {\n      $appendNonNull(digits.impl, '0');\n      ++this$static.digitsLength;\n    }\n  }\n   else {\n    toRemove = this$static.decimalPosition + this$static.maximumFractionDigits;\n    toRemove > this$static.digitsLength && (toRemove = this$static.digitsLength);\n    while (toRemove > requiredDigits && $charAt(digits.impl.string, toRemove - 1) == 48) {\n      --toRemove;\n    }\n    if (toRemove < this$static.digitsLength) {\n      $delete_0(digits, toRemove, this$static.digitsLength);\n      this$static.digitsLength = toRemove;\n    }\n  }\n}\n\nfunction $computeExponent(this$static, digits){\n  var remainder, strip;\n  strip = 0;\n  while (strip < this$static.digitsLength - 1 && $charAt(digits.impl.string, strip) == 48) {\n    ++strip;\n  }\n  if (strip > 0) {\n    $replace(digits.impl, 0, strip, '');\n    this$static.digitsLength -= strip;\n    this$static.exponent -= strip;\n  }\n  if (this$static.maximumIntegerDigits > this$static.minimumIntegerDigits && this$static.maximumIntegerDigits > 0) {\n    this$static.exponent += this$static.decimalPosition - 1;\n    remainder = this$static.exponent % this$static.maximumIntegerDigits;\n    remainder < 0 && (remainder += this$static.maximumIntegerDigits);\n    this$static.decimalPosition = remainder + 1;\n    this$static.exponent -= remainder;\n  }\n   else {\n    this$static.exponent += this$static.decimalPosition - this$static.minimumIntegerDigits;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n  if (this$static.digitsLength == 1 && digits.impl.string.charCodeAt(0) == 48) {\n    this$static.exponent = 0;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n}\n\nfunction $format_0(this$static, number){\n  var buf, isNegative, preRound, scale, useExponent, currentGroupingSize;\n  if (isNaN(number)) {\n    return 'NaN';\n  }\n  isNegative = number < 0 || number == 0 && 1 / number < 0;\n  isNegative && (number = -number);\n  buf = new StringBuilder_0;\n  if (!isFinite(number) && !isNaN(number)) {\n    $append_5(buf, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n    $append_1(buf.impl, '\\u221E');\n    $append_5(buf, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n    return buf.impl.string;\n  }\n  number *= this$static.multiplier;\n  scale = toScaledString(buf, number);\n  preRound = buf.impl.string.length + scale + this$static.maximumFractionDigits + 3;\n  if (preRound > 0 && preRound < buf.impl.string.length && $charAt(buf.impl.string, preRound) == 57) {\n    $propagateCarry(this$static, buf, preRound - 1);\n    scale += buf.impl.string.length - preRound;\n    $delete_0(buf, preRound, buf.impl.string.length);\n  }\n  this$static.exponent = 0;\n  this$static.digitsLength = buf.impl.string.length;\n  this$static.decimalPosition = this$static.digitsLength + scale;\n  useExponent = this$static.useExponentialNotation;\n  currentGroupingSize = this$static.groupingSize;\n  this$static.decimalPosition > 1024 && (useExponent = true);\n  useExponent && $computeExponent(this$static, buf);\n  $processLeadingZeros(this$static, buf);\n  $roundValue(this$static, buf);\n  $insertGroupingSeparators(this$static, buf, 44, currentGroupingSize);\n  $adjustFractionDigits(this$static, buf);\n  $addZeroAndDecimal(this$static, buf, 46);\n  useExponent && $addExponent(this$static, buf);\n  $insert_2(buf, 0, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n  $append_5(buf, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n  return buf.impl.string;\n}\n\nfunction $insertGroupingSeparators(this$static, digits, groupingSeparator, g){\n  var i;\n  if (g > 0) {\n    for (i = g; i < this$static.decimalPosition; i += g + 1) {\n      $insert_2(digits, this$static.decimalPosition - i, valueOf_0(groupingSeparator));\n      ++this$static.decimalPosition;\n      ++this$static.digitsLength;\n    }\n  }\n}\n\nfunction $parseAffix(this$static, pattern, start_0, affix, inNegativePattern){\n  var ch_0, inQuote, len, pos;\n  $delete(affix, affix.impl.string.length);\n  inQuote = false;\n  len = pattern.length;\n  for (pos = start_0; pos < len; ++pos) {\n    ch_0 = pattern.charCodeAt(pos);\n    if (ch_0 == 39) {\n      if (pos + 1 < len && pattern.charCodeAt(pos + 1) == 39) {\n        ++pos;\n        $append_1(affix.impl, \"'\");\n      }\n       else {\n        inQuote = !inQuote;\n      }\n      continue;\n    }\n    if (inQuote) {\n      $appendNonNull(affix.impl, valueOf_0(ch_0));\n    }\n     else {\n      switch (ch_0) {\n        case 35:\n        case 48:\n        case 44:\n        case 46:\n        case 59:\n          return pos - start_0;\n        case 164:\n          this$static.isCurrencyFormat = true;\n          if (pos + 1 < len && pattern.charCodeAt(pos + 1) == 164) {\n            ++pos;\n            if (pos < len - 2 && pattern.charCodeAt(pos + 1) == 164 && pattern.charCodeAt(pos + 2) == 164) {\n              pos += 2;\n              $append_3(affix, $getSimpleCurrencySymbol(this$static.currencyData));\n            }\n             else {\n              $append_3(affix, this$static.currencyData[0]);\n            }\n          }\n           else {\n            $append_3(affix, this$static.currencyData[1]);\n          }\n\n          break;\n        case 37:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw new IllegalArgumentException_1('Too many percent/per mille characters in pattern \"' + pattern + '\"');\n            }\n            this$static.multiplier = 100;\n          }\n\n          $append_1(affix.impl, '%');\n          break;\n        case 8240:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw new IllegalArgumentException_1('Too many percent/per mille characters in pattern \"' + pattern + '\"');\n            }\n            this$static.multiplier = 1000;\n          }\n\n          $append_1(affix.impl, '\\u2030');\n          break;\n        case 45:\n          $append_1(affix.impl, '-');\n          break;\n        default:$appendNonNull(affix.impl, valueOf_0(ch_0));\n      }\n    }\n  }\n  return len - start_0;\n}\n\nfunction $parsePattern_0(this$static, pattern){\n  var affix, pos;\n  pos = 0;\n  affix = new StringBuffer_0;\n  pos += $parseAffix(this$static, pattern, 0, affix, false);\n  this$static.positivePrefix = affix.impl.string;\n  pos += $parseTrunk(this$static, pattern, pos, false);\n  pos += $parseAffix(this$static, pattern, pos, affix, false);\n  this$static.positiveSuffix = affix.impl.string;\n  if (pos < pattern.length && pattern.charCodeAt(pos) == 59) {\n    ++pos;\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativePrefix = affix.impl.string;\n    pos += $parseTrunk(this$static, pattern, pos, true);\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativeSuffix = affix.impl.string;\n  }\n   else {\n    this$static.negativePrefix = '-' + this$static.positivePrefix;\n    this$static.negativeSuffix = this$static.positiveSuffix;\n  }\n}\n\nfunction $parseTrunk(this$static, pattern, start_0, ignorePattern){\n  var ch_0, decimalPos, digitLeftCount, digitRightCount, effectiveDecimalPos, groupingCount, len, loop, n, pos, totalDigits, zeroDigitCount;\n  decimalPos = -1;\n  digitLeftCount = 0;\n  zeroDigitCount = 0;\n  digitRightCount = 0;\n  groupingCount = -1;\n  len = pattern.length;\n  pos = start_0;\n  loop = true;\n  for (; pos < len && loop; ++pos) {\n    ch_0 = pattern.charCodeAt(pos);\n    switch (ch_0) {\n      case 35:\n        zeroDigitCount > 0?++digitRightCount:++digitLeftCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 48:\n        if (digitRightCount > 0) {\n          throw new IllegalArgumentException_1(\"Unexpected '0' in pattern \\\"\" + pattern + '\"');\n        }\n\n        ++zeroDigitCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 44:\n        groupingCount = 0;\n        break;\n      case 46:\n        if (decimalPos >= 0) {\n          throw new IllegalArgumentException_1('Multiple decimal separators in pattern \"' + pattern + '\"');\n        }\n\n        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;\n        break;\n      case 69:\n        if (!ignorePattern) {\n          if (this$static.useExponentialNotation) {\n            throw new IllegalArgumentException_1('Multiple exponential symbols in pattern \"' + pattern + '\"');\n          }\n          this$static.useExponentialNotation = true;\n          this$static.minExponentDigits = 0;\n        }\n\n        while (pos + 1 < len && pattern.charCodeAt(pos + 1) == 48) {\n          ++pos;\n          ignorePattern || ++this$static.minExponentDigits;\n        }\n\n        if (!ignorePattern && digitLeftCount + zeroDigitCount < 1 || this$static.minExponentDigits < 1) {\n          throw new IllegalArgumentException_1('Malformed exponential pattern \"' + pattern + '\"');\n        }\n\n        loop = false;\n        break;\n      default:--pos;\n        loop = false;\n    }\n  }\n  if (zeroDigitCount == 0 && digitLeftCount > 0 && decimalPos >= 0) {\n    n = decimalPos;\n    decimalPos == 0 && ++n;\n    digitRightCount = digitLeftCount - n;\n    digitLeftCount = n - 1;\n    zeroDigitCount = 1;\n  }\n  if (decimalPos < 0 && digitRightCount > 0 || decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || groupingCount == 0) {\n    throw new IllegalArgumentException_1('Malformed pattern \"' + pattern + '\"');\n  }\n  if (ignorePattern) {\n    return pos - start_0;\n  }\n  totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;\n  this$static.maximumFractionDigits = decimalPos >= 0?totalDigits - decimalPos:0;\n  if (decimalPos >= 0) {\n    this$static.minimumFractionDigits = digitLeftCount + zeroDigitCount - decimalPos;\n    this$static.minimumFractionDigits < 0 && (this$static.minimumFractionDigits = 0);\n  }\n  effectiveDecimalPos = decimalPos >= 0?decimalPos:totalDigits;\n  this$static.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;\n  if (this$static.useExponentialNotation) {\n    this$static.maximumIntegerDigits = digitLeftCount + this$static.minimumIntegerDigits;\n    this$static.maximumFractionDigits == 0 && this$static.minimumIntegerDigits == 0 && (this$static.minimumIntegerDigits = 1);\n  }\n  this$static.groupingSize = groupingCount > 0?groupingCount:0;\n  this$static.decimalSeparatorAlwaysShown = decimalPos == 0 || decimalPos == totalDigits;\n  return pos - start_0;\n}\n\nfunction $processLeadingZeros(this$static, digits){\n  var i, prefix, strip;\n  if (this$static.decimalPosition > this$static.digitsLength) {\n    while (this$static.digitsLength < this$static.decimalPosition) {\n      $appendNonNull(digits.impl, '0');\n      ++this$static.digitsLength;\n    }\n  }\n  if (!this$static.useExponentialNotation) {\n    if (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n      prefix = new StringBuilder_0;\n      while (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n        $appendNonNull(prefix.impl, '0');\n        ++this$static.decimalPosition;\n        ++this$static.digitsLength;\n      }\n      $insert_2(digits, 0, prefix.impl.string);\n    }\n     else if (this$static.decimalPosition > this$static.minimumIntegerDigits) {\n      strip = this$static.decimalPosition - this$static.minimumIntegerDigits;\n      for (i = 0; i < strip; ++i) {\n        if ($charAt(digits.impl.string, i) != 48) {\n          strip = i;\n          break;\n        }\n      }\n      if (strip > 0) {\n        $replace(digits.impl, 0, strip, '');\n        this$static.digitsLength -= strip;\n        this$static.decimalPosition -= strip;\n      }\n    }\n  }\n}\n\nfunction $propagateCarry(this$static, digits, i){\n  var carry, digit;\n  carry = true;\n  while (carry && i >= 0) {\n    digit = $charAt(digits.impl.string, i);\n    if (digit == 57) {\n      $setCharAt(digits, i--, 48);\n    }\n     else {\n      $setCharAt(digits, i, digit + 1 & 65535);\n      carry = false;\n    }\n  }\n  if (carry) {\n    $replace(digits.impl, 0, 0, '1');\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $roundValue(this$static, digits){\n  var i;\n  if (this$static.digitsLength > this$static.decimalPosition + this$static.maximumFractionDigits && $charAt_0(digits, this$static.decimalPosition + this$static.maximumFractionDigits) >= 53) {\n    i = this$static.decimalPosition + this$static.maximumFractionDigits - 1;\n    $propagateCarry(this$static, digits, i);\n  }\n}\n\nfunction NumberFormat_0(pattern, cdata, userSuppliedPattern){\n  if (!cdata) {\n    throw new IllegalArgumentException_1('Unknown currency code');\n  }\n  this.pattern = pattern;\n  this.currencyData = cdata;\n  $parsePattern_0(this, this.pattern);\n  if (!userSuppliedPattern && this.isCurrencyFormat) {\n    this.minimumFractionDigits = this.currencyData[2] & 7;\n    this.maximumFractionDigits = this.minimumFractionDigits;\n  }\n}\n\nfunction NumberFormat_1(pattern, cdata){\n  $clinit_NumberFormat();\n  NumberFormat_0.call(this, pattern, cdata, true);\n}\n\nfunction toScaledString(buf, val){\n  var dot, expDigits, expIdx, scale, startLen;\n  startLen = buf.impl.string.length;\n  $append_5(buf, val.toPrecision(20));\n  scale = 0;\n  expIdx = $indexOf_2(buf.impl.string, 'e', startLen);\n  expIdx < 0 && (expIdx = $indexOf_2(buf.impl.string, 'E', startLen));\n  if (expIdx >= 0) {\n    expDigits = expIdx + 1;\n    expDigits < buf.impl.string.length && $charAt(buf.impl.string, expDigits) == 43 && ++expDigits;\n    expDigits < buf.impl.string.length && (scale = __parseAndValidateInt($substring(buf.impl.string, expDigits)));\n    $delete_0(buf, expIdx, buf.impl.string.length);\n  }\n  dot = $indexOf_2(buf.impl.string, '.', startLen);\n  if (dot >= 0) {\n    $replace(buf.impl, dot, dot + 1, '');\n    scale -= buf.impl.string.length - dot;\n  }\n  return scale;\n}\n\ndefineSeed(242, 1, {}, NumberFormat_1);\n_.decimalPosition = 0;\n_.decimalSeparatorAlwaysShown = false;\n_.digitsLength = 0;\n_.exponent = 0;\n_.groupingSize = 3;\n_.isCurrencyFormat = false;\n_.maximumFractionDigits = 3;\n_.maximumIntegerDigits = 40;\n_.minExponentDigits = 0;\n_.minimumFractionDigits = 0;\n_.minimumIntegerDigits = 1;\n_.multiplier = 1;\n_.negativePrefix = '-';\n_.negativeSuffix = '';\n_.positivePrefix = '';\n_.positiveSuffix = '';\n_.useExponentialNotation = false;\nfunction $getISOTimeZoneString(this$static){\n  var data_0, offset;\n  offset = -this$static.standardOffset;\n  data_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [43, 48, 48, 58, 48, 48]);\n  if (offset < 0) {\n    data_0[0] = 45;\n    offset = -offset;\n  }\n  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & 65535;\n  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & 65535;\n  data_0[4] = data_0[4] + ~~(offset % 60 / 10) & 65535;\n  data_0[5] = data_0[5] + offset % 10 & 65535;\n  return valueOf_1(data_0);\n}\n\nfunction $getRFCTimeZoneString(this$static){\n  var data_0, offset;\n  offset = -this$static.standardOffset;\n  data_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [43, 48, 48, 48, 48]);\n  if (offset < 0) {\n    data_0[0] = 45;\n    offset = -offset;\n  }\n  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & 65535;\n  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & 65535;\n  data_0[3] = data_0[3] + ~~(offset % 60 / 10) & 65535;\n  data_0[4] = data_0[4] + offset % 10 & 65535;\n  return valueOf_1(data_0);\n}\n\nfunction TimeZone_0(){\n}\n\nfunction composeGMTString(offset){\n  var data_0;\n  data_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [71, 77, 84, 45, 48, 48, 58, 48, 48]);\n  if (offset <= 0) {\n    data_0[3] = 43;\n    offset = -offset;\n  }\n  data_0[4] = data_0[4] + ~~(~~(offset / 60) / 10) & 65535;\n  data_0[5] = data_0[5] + ~~(offset / 60) % 10 & 65535;\n  data_0[7] = data_0[7] + ~~(offset % 60 / 10) & 65535;\n  data_0[8] = data_0[8] + offset % 10 & 65535;\n  return valueOf_1(data_0);\n}\n\nfunction composePOSIXTimeZoneID(offset){\n  var str;\n  if (offset == 0) {\n    return 'Etc/GMT';\n  }\n  if (offset < 0) {\n    offset = -offset;\n    str = 'Etc/GMT-';\n  }\n   else {\n    str = 'Etc/GMT+';\n  }\n  return str + offsetDisplay(offset);\n}\n\nfunction composeUTCString(offset){\n  var str;\n  if (offset == 0) {\n    return 'UTC';\n  }\n  if (offset < 0) {\n    offset = -offset;\n    str = 'UTC+';\n  }\n   else {\n    str = 'UTC-';\n  }\n  return str + offsetDisplay(offset);\n}\n\nfunction createTimeZone(timeZoneOffsetInMinutes){\n  var tz;\n  tz = new TimeZone_0;\n  tz.standardOffset = timeZoneOffsetInMinutes;\n  tz.timezoneID = composePOSIXTimeZoneID(timeZoneOffsetInMinutes);\n  tz.tzNames = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 2, 0);\n  tz.tzNames[0] = composeUTCString(timeZoneOffsetInMinutes);\n  tz.tzNames[1] = composeUTCString(timeZoneOffsetInMinutes);\n  return tz;\n}\n\nfunction offsetDisplay(offset){\n  var hour, mins;\n  hour = ~~(offset / 60);\n  mins = offset % 60;\n  if (mins == 0) {\n    return '' + hour;\n  }\n  return '' + hour + ':' + mins;\n}\n\ndefineSeed(243, 1, {}, TimeZone_0);\n_.standardOffset = 0;\nfunction NumberConstantsImpl_en_0(){\n}\n\ndefineSeed(244, 1, {}, NumberConstantsImpl_en_0);\nfunction $getSimpleCurrencySymbol(this$static){\n  return this$static[4] || this$static[1];\n}\n\ndefineSeed(246, 238, {});\nfunction DateTimeFormatInfoImpl_en_0(){\n}\n\ndefineSeed(247, 246, {}, DateTimeFormatInfoImpl_en_0);\nfunction DateTimeFormat$PatternPart_0(txt, cnt){\n  this.text_0 = txt;\n  this.count = cnt;\n  this.abutStart = false;\n}\n\ndefineSeed(248, 1, makeCastMap([Q$DateTimeFormat$PatternPart]), DateTimeFormat$PatternPart_0);\n_.abutStart = false;\n_.count = 0;\ndefineSeed(250, 1, {});\n_.isArray = function isArray(){\n  return null;\n}\n;\n_.isBoolean = function isBoolean(){\n  return null;\n}\n;\n_.isNumber = function isNumber(){\n  return null;\n}\n;\n_.isObject = function isObject(){\n  return null;\n}\n;\n_.isString = function isString(){\n  return null;\n}\n;\nfunction $get(this$static, index_0){\n  var v = this$static.jsArray[index_0];\n  var func = ($clinit_JSONParser() , typeMap)[typeof v];\n  return func?func(v):throwUnknownTypeException(typeof v);\n}\n\nfunction $set_1(this$static, index_0, value_0){\n  var previous;\n  previous = $get(this$static, index_0);\n  $set0(this$static, index_0, value_0);\n  return previous;\n}\n\nfunction $set0(this$static, index_0, value_0){\n  if (value_0) {\n    var func = value_0.getUnwrapper();\n    value_0 = func(value_0);\n  }\n   else {\n    value_0 = undefined;\n  }\n  this$static.jsArray[index_0] = value_0;\n}\n\nfunction JSONArray_0(){\n  this.jsArray = [];\n}\n\nfunction JSONArray_1(arr){\n  this.jsArray = arr;\n}\n\nfunction unwrap(value_0){\n  return value_0.jsArray;\n}\n\ndefineSeed(249, 250, makeCastMap([Q$JSONArray]), JSONArray_0, JSONArray_1);\n_.equals$ = function equals_1(other){\n  if (!instanceOf(other, Q$JSONArray)) {\n    return false;\n  }\n  return this.jsArray == dynamicCast(other, Q$JSONArray).jsArray;\n}\n;\n_.getUnwrapper = function getUnwrapper(){\n  return unwrap;\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return getHashCode(this.jsArray);\n}\n;\n_.isArray = function isArray_0(){\n  return this;\n}\n;\n_.toString$ = function toString_6(){\n  var c, i, sb;\n  sb = new StringBuffer_0;\n  $append_1(sb.impl, '[');\n  for (i = 0 , c = this.jsArray.length; i < c; i++) {\n    i > 0 && ($append_1(sb.impl, ',') , sb);\n    $append_2(sb, $get(this, i));\n  }\n  $append_1(sb.impl, ']');\n  return sb.impl.string;\n}\n;\nfunction $clinit_JSONBoolean(){\n  $clinit_JSONBoolean = nullMethod;\n  FALSE_0 = new JSONBoolean_0(false);\n  TRUE_0 = new JSONBoolean_0(true);\n}\n\nfunction JSONBoolean_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction unwrap_0(value_0){\n  return value_0.value_0;\n}\n\ndefineSeed(251, 250, {}, JSONBoolean_0);\n_.getUnwrapper = function getUnwrapper_0(){\n  return unwrap_0;\n}\n;\n_.isBoolean = function isBoolean_0(){\n  return this;\n}\n;\n_.toString$ = function toString_7(){\n  return $clinit_Boolean() , '' + this.value_0;\n}\n;\n_.value_0 = false;\nvar FALSE_0, TRUE_0;\nfunction JSONException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\nfunction JSONException_1(cause){\n  this.detailMessage = !cause?null:$toString(cause);\n  this.cause = cause;\n  $fillInStackTrace();\n}\n\ndefineSeed(252, 90, makeCastMap([Q$Serializable, Q$Throwable]), JSONException_0, JSONException_1);\nfunction $clinit_JSONNull(){\n  $clinit_JSONNull = nullMethod;\n  instance_0 = new JSONNull_0;\n}\n\nfunction JSONNull_0(){\n}\n\nfunction unwrap_1(){\n  return null;\n}\n\ndefineSeed(253, 250, {}, JSONNull_0);\n_.getUnwrapper = function getUnwrapper_1(){\n  return unwrap_1;\n}\n;\n_.toString$ = function toString_8(){\n  return 'null';\n}\n;\nvar instance_0;\nfunction JSONNumber_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction unwrap_2(value_0){\n  return value_0.value_0;\n}\n\ndefineSeed(254, 250, makeCastMap([Q$JSONNumber]), JSONNumber_0);\n_.equals$ = function equals_2(other){\n  if (!instanceOf(other, Q$JSONNumber)) {\n    return false;\n  }\n  return this.value_0 == dynamicCast(other, Q$JSONNumber).value_0;\n}\n;\n_.getUnwrapper = function getUnwrapper_2(){\n  return unwrap_2;\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return round_int((new Double_0(this.value_0)).value_0);\n}\n;\n_.isNumber = function isNumber_0(){\n  return this;\n}\n;\n_.toString$ = function toString_9(){\n  return this.value_0 + '';\n}\n;\n_.value_0 = 0;\nfunction $computeKeys0(this$static, result){\n  var jsObject = this$static.jsObject;\n  var i = 0;\n  for (var key in jsObject) {\n    jsObject.hasOwnProperty(key) && (result[i++] = key);\n  }\n  return result;\n}\n\nfunction $containsKey(this$static, key){\n  return key in this$static.jsObject;\n}\n\nfunction $get_0(this$static, key){\n  if (key == null) {\n    throw new NullPointerException_0;\n  }\n  return $get0(this$static, key);\n}\n\nfunction $get0(this$static, key){\n  var jsObject = this$static.jsObject;\n  var v;\n  key = String(key);\n  jsObject.hasOwnProperty(key) && (v = jsObject[key]);\n  var func = ($clinit_JSONParser() , typeMap)[typeof v];\n  var ret = func?func(v):throwUnknownTypeException(typeof v);\n  return ret;\n}\n\nfunction $keySet(this$static){\n  var keys_0;\n  keys_0 = $computeKeys0(this$static, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0));\n  return new JSONObject$1_0(this$static, keys_0);\n}\n\nfunction $put(this$static, key, jsonValue){\n  var previous;\n  if (key == null) {\n    throw new NullPointerException_0;\n  }\n  previous = $get_0(this$static, key);\n  $put0(this$static, key, jsonValue);\n  return previous;\n}\n\nfunction $put0(this$static, key, value_0){\n  if (value_0) {\n    var func = value_0.getUnwrapper();\n    this$static.jsObject[key] = func(value_0);\n  }\n   else {\n    delete this$static.jsObject[key];\n  }\n}\n\nfunction $toString_0(this$static){\n  var first, key, key$index, key$max, keys_0, sb;\n  sb = new StringBuffer_0;\n  $append_1(sb.impl, '{');\n  first = true;\n  keys_0 = $computeKeys0(this$static, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0));\n  for (key$index = 0 , key$max = keys_0.length; key$index < key$max; ++key$index) {\n    key = keys_0[key$index];\n    first?(first = false):($append_1(sb.impl, ', ') , sb);\n    $append_3(sb, escapeValue(key));\n    $append_1(sb.impl, ':');\n    $append_2(sb, $get_0(this$static, key));\n  }\n  $append_1(sb.impl, '}');\n  return sb.impl.string;\n}\n\nfunction JSONObject_0(){\n  JSONObject_1.call(this, {});\n}\n\nfunction JSONObject_1(jsValue){\n  this.jsObject = jsValue;\n}\n\nfunction unwrap_3(value_0){\n  return value_0.jsObject;\n}\n\ndefineSeed(255, 250, makeCastMap([Q$JSONObject]), JSONObject_0, JSONObject_1);\n_.equals$ = function equals_3(other){\n  if (!instanceOf(other, Q$JSONObject)) {\n    return false;\n  }\n  return this.jsObject == dynamicCast(other, Q$JSONObject).jsObject;\n}\n;\n_.getUnwrapper = function getUnwrapper_3(){\n  return unwrap_3;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return getHashCode(this.jsObject);\n}\n;\n_.isObject = function isObject_0(){\n  return this;\n}\n;\n_.toString$ = function toString_10(){\n  return $toString_0(this);\n}\n;\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString_1(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append_1(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append_1(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next_0();\n    $append_1(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append_1(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(258, 1, {});\n_.add_0 = function add_1(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains_0 = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.isEmpty = function isEmpty(){\n  return this.size_1() == 0;\n}\n;\n_.remove = function remove(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  if (iter) {\n    iter.remove_1();\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n;\n_.toString$ = function toString_11(){\n  return $toString_1(this);\n}\n;\ndefineSeed(257, 258, makeCastMap([Q$Set]));\n_.equals$ = function equals_4(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains_0(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction JSONObject$1_0(this$0, val$keys){\n  this.this$0 = this$0;\n  this.val$keys = val$keys;\n}\n\ndefineSeed(256, 257, makeCastMap([Q$Set]), JSONObject$1_0);\n_.contains_0 = function contains_0(o){\n  return instanceOf(o, Q$String) && $containsKey(this.this$0, dynamicCast(o, Q$String));\n}\n;\n_.iterator = function iterator_0(){\n  return new AbstractList$IteratorImpl_0(new Arrays$ArrayList_0(this.val$keys));\n}\n;\n_.size_1 = function size_1(){\n  return this.val$keys.length;\n}\n;\nfunction $clinit_JSONParser(){\n  $clinit_JSONParser = nullMethod;\n  typeMap = {'boolean':createBoolean, number:createNumber, string:createString, object:createObject, 'function':createObject, undefined:createUndefined};\n}\n\nfunction createBoolean(v){\n  return $clinit_JSONBoolean() , v?TRUE_0:FALSE_0;\n}\n\nfunction createNumber(v){\n  return new JSONNumber_0(v);\n}\n\nfunction createObject(o){\n  if (!o) {\n    return $clinit_JSONNull() , instance_0;\n  }\n  var v = o.valueOf?o.valueOf():o;\n  if (v !== o) {\n    var func = typeMap[typeof v];\n    return func?func(v):throwUnknownTypeException(typeof v);\n  }\n   else if (o instanceof Array || o instanceof $wnd.Array) {\n    return new JSONArray_1(o);\n  }\n   else {\n    return new JSONObject_1(o);\n  }\n}\n\nfunction createString(v){\n  return new JSONString_0(v);\n}\n\nfunction createUndefined(){\n  return null;\n}\n\nfunction evaluate(json, strict){\n  var v;\n  if (strict && ($clinit_JsonUtils() , hasJsonParse)) {\n    try {\n      v = JSON.parse(json);\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n   else {\n    if (strict) {\n      if (!($clinit_JsonUtils() , !/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/.test(json.replace(/\"(\\\\.|[^\"\\\\])*\"/g, '')))) {\n        return throwJSONException('Illegal character in JSON string');\n      }\n    }\n    json = escapeJsonForEval(json);\n    try {\n      v = eval('(' + json + ')');\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n  var func = typeMap[typeof v];\n  return func?func(v):throwUnknownTypeException(typeof v);\n}\n\nfunction parse_0(jsonString){\n  $clinit_JSONParser();\n  var ex;\n  if (jsonString == null) {\n    throw new NullPointerException_0;\n  }\n  if (jsonString.length == 0) {\n    throw new IllegalArgumentException_1('empty argument');\n  }\n  try {\n    return evaluate(jsonString, true);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      ex = $e0;\n      throw new JSONException_1(ex);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction throwJSONException(message){\n  throw new JSONException_0(message);\n}\n\nfunction throwUnknownTypeException(typeString){\n  $clinit_JSONParser();\n  throw new JSONException_0(\"Unexpected typeof result '\" + typeString + \"'; please report this bug to the GWT team\");\n}\n\nvar typeMap;\nfunction JSONString_0(value_0){\n  if (value_0 == null) {\n    throw new NullPointerException_0;\n  }\n  this.value_0 = value_0;\n}\n\nfunction unwrap_4(value_0){\n  return value_0.value_0;\n}\n\ndefineSeed(260, 250, makeCastMap([Q$JSONString]), JSONString_0);\n_.equals$ = function equals_5(other){\n  if (!instanceOf(other, Q$JSONString)) {\n    return false;\n  }\n  return $equals(this.value_0, dynamicCast(other, Q$JSONString).value_0);\n}\n;\n_.getUnwrapper = function getUnwrapper_4(){\n  return unwrap_4;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return getHashCode_0(this.value_0);\n}\n;\n_.isString = function isString_0(){\n  return this;\n}\n;\n_.toString$ = function toString_12(){\n  return escapeValue(this.value_0);\n}\n;\nfunction Array_0(){\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initDims(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, count, seedType){\n  return initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, 0, count, seedType);\n}\n\nfunction initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, index_0, count, seedType){\n  var i, isLastDim, length_0, result;\n  length_0 = dimExprs[index_0];\n  isLastDim = index_0 == count - 1;\n  result = createFromSeed(isLastDim?seedType:0, length_0);\n  initValues(arrayClasses[index_0], castableTypeMapExprs[index_0], queryIdExprs[index_0], result);\n  if (!isLastDim) {\n    ++index_0;\n    for (i = 0; i < length_0; ++i) {\n      result[i] = initDims_0(arrayClasses, castableTypeMapExprs, queryIdExprs, dimExprs, index_0, count, seedType);\n    }\n  }\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(261, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('ie9', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (ie9) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('viplab.client.Dispatcher');\n  $start(new ViPLab_0);\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap_5(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction create_0(value_0){\n  var a0, a1, a2;\n  a0 = value_0 & 4194303;\n  a1 = value_0 >> 22 & 4194303;\n  a2 = value_0 < 0?1048575:0;\n  return create0(a0, a1, a2);\n}\n\nfunction create_1(a){\n  return create0(a.l, a.m, a.h);\n}\n\nfunction create0(l_0, m_0, h_0){\n  return {l:l_0, m:m_0, h:h_0};\n}\n\nfunction divMod(a, b, computeRemainder){\n  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;\n  if (b.l == 0 && b.m == 0 && b.h == 0) {\n    throw new ArithmeticException_0;\n  }\n  if (a.l == 0 && a.m == 0 && a.h == 0) {\n    computeRemainder && (remainder_0 = create0(0, 0, 0));\n    return create0(0, 0, 0);\n  }\n  if (b.h == 524288 && b.m == 0 && b.l == 0) {\n    return divModByMinValue(a, computeRemainder);\n  }\n  negative = false;\n  if (b.h >> 19 != 0) {\n    b = neg(b);\n    negative = true;\n  }\n  bpower = powerOfTwo(b);\n  aIsNegative = false;\n  aIsMinValue = false;\n  aIsCopy = false;\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    aIsMinValue = true;\n    aIsNegative = true;\n    if (bpower == -1) {\n      a = create_1(($clinit_LongLib$Const() , MAX_VALUE));\n      aIsCopy = true;\n      negative = !negative;\n    }\n     else {\n      c = shr(a, bpower);\n      negative && negate(c);\n      computeRemainder && (remainder_0 = create0(0, 0, 0));\n      return c;\n    }\n  }\n   else if (a.h >> 19 != 0) {\n    aIsNegative = true;\n    a = neg(a);\n    aIsCopy = true;\n    negative = !negative;\n  }\n  if (bpower != -1) {\n    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);\n  }\n  if (!gte_0(a, b)) {\n    computeRemainder && (aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h)));\n    return create0(0, 0, 0);\n  }\n  return divModHelper(aIsCopy?a:create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);\n}\n\nfunction divModByMinValue(a, computeRemainder){\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    computeRemainder && (remainder_0 = create0(0, 0, 0));\n    return create_1(($clinit_LongLib$Const() , ONE));\n  }\n  computeRemainder && (remainder_0 = create0(a.l, a.m, a.h));\n  return create0(0, 0, 0);\n}\n\nfunction divModByShift(a, bpower, negative, aIsNegative, computeRemainder){\n  var c;\n  c = shr(a, bpower);\n  negative && negate(c);\n  if (computeRemainder) {\n    a = maskRight(a, bpower);\n    aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h));\n  }\n  return c;\n}\n\nfunction divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){\n  var bshift, gte, quotient, shift_0, a1, a2, a0;\n  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);\n  bshift = shl(b, shift_0);\n  quotient = create0(0, 0, 0);\n  while (shift_0 >= 0) {\n    gte = trialSubtract(a, bshift);\n    if (gte) {\n      shift_0 < 22?(quotient.l |= 1 << shift_0 , undefined):shift_0 < 44?(quotient.m |= 1 << shift_0 - 22 , undefined):(quotient.h |= 1 << shift_0 - 44 , undefined);\n      if (a.l == 0 && a.m == 0 && a.h == 0) {\n        break;\n      }\n    }\n    a1 = bshift.m;\n    a2 = bshift.h;\n    a0 = bshift.l;\n    setH(bshift, a2 >>> 1);\n    bshift.m = a1 >>> 1 | (a2 & 1) << 21;\n    bshift.l = a0 >>> 1 | (a1 & 1) << 21;\n    --shift_0;\n  }\n  negative && negate(quotient);\n  if (computeRemainder) {\n    if (aIsNegative) {\n      remainder_0 = neg(a);\n      aIsMinValue && (remainder_0 = sub_0(remainder_0, ($clinit_LongLib$Const() , ONE)));\n    }\n     else {\n      remainder_0 = create0(a.l, a.m, a.h);\n    }\n  }\n  return quotient;\n}\n\nfunction maskRight(a, bits){\n  var b0, b1, b2;\n  if (bits <= 22) {\n    b0 = a.l & (1 << bits) - 1;\n    b1 = b2 = 0;\n  }\n   else if (bits <= 44) {\n    b0 = a.l;\n    b1 = a.m & (1 << bits - 22) - 1;\n    b2 = 0;\n  }\n   else {\n    b0 = a.l;\n    b1 = a.m;\n    b2 = a.h & (1 << bits - 44) - 1;\n  }\n  return create0(b0, b1, b2);\n}\n\nfunction negate(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  setL(a, neg0);\n  setM(a, neg1);\n  setH(a, neg2);\n}\n\nfunction numberOfLeadingZeros(a){\n  var b1, b2;\n  b2 = numberOfLeadingZeros_0(a.h);\n  if (b2 == 32) {\n    b1 = numberOfLeadingZeros_0(a.m);\n    return b1 == 32?numberOfLeadingZeros_0(a.l) + 32:b1 + 20 - 10;\n  }\n   else {\n    return b2 - 12;\n  }\n}\n\nfunction powerOfTwo(a){\n  var h_0, l_0, m_0;\n  l_0 = a.l;\n  if ((l_0 & l_0 - 1) != 0) {\n    return -1;\n  }\n  m_0 = a.m;\n  if ((m_0 & m_0 - 1) != 0) {\n    return -1;\n  }\n  h_0 = a.h;\n  if ((h_0 & h_0 - 1) != 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 == 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 != 0) {\n    return numberOfTrailingZeros(l_0);\n  }\n  if (h_0 == 0 && m_0 != 0 && l_0 == 0) {\n    return numberOfTrailingZeros(m_0) + 22;\n  }\n  if (h_0 != 0 && m_0 == 0 && l_0 == 0) {\n    return numberOfTrailingZeros(h_0) + 44;\n  }\n  return -1;\n}\n\nfunction setH(a, x_0){\n  a.h = x_0;\n}\n\nfunction setL(a, x_0){\n  a.l = x_0;\n}\n\nfunction setM(a, x_0){\n  a.m = x_0;\n}\n\nfunction toDoubleHelper(a){\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction trialSubtract(a, b){\n  var sum0, sum1, sum2;\n  sum2 = a.h - b.h;\n  if (sum2 < 0) {\n    return false;\n  }\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 += sum1 >> 22;\n  if (sum2 < 0) {\n    return false;\n  }\n  setL(a, sum0 & 4194303);\n  setM(a, sum1 & 4194303);\n  setH(a, sum2 & 1048575);\n  return true;\n}\n\nvar remainder_0;\nfunction add_2(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l + b.l;\n  sum1 = a.m + b.m + (sum0 >> 22);\n  sum2 = a.h + b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction eq_0(a, b){\n  return a.l == b.l && a.m == b.m && a.h == b.h;\n}\n\nfunction fromDouble(value_0){\n  var a0, a1, a2, negative, result;\n  if (isNaN(value_0)) {\n    return $clinit_LongLib$Const() , ZERO;\n  }\n  if (value_0 < -9223372036854775808) {\n    return $clinit_LongLib$Const() , MIN_VALUE;\n  }\n  if (value_0 >= 9223372036854775807) {\n    return $clinit_LongLib$Const() , MAX_VALUE;\n  }\n  negative = false;\n  if (value_0 < 0) {\n    negative = true;\n    value_0 = -value_0;\n  }\n  a2 = 0;\n  if (value_0 >= 17592186044416) {\n    a2 = round_int(value_0 / 17592186044416);\n    value_0 -= a2 * 17592186044416;\n  }\n  a1 = 0;\n  if (value_0 >= 4194304) {\n    a1 = round_int(value_0 / 4194304);\n    value_0 -= a1 * 4194304;\n  }\n  a0 = round_int(value_0);\n  result = create0(a0, a1, a2);\n  negative && negate(result);\n  return result;\n}\n\nfunction fromInt(value_0){\n  var rebase, result;\n  if (value_0 > -129 && value_0 < 128) {\n    rebase = value_0 + 128;\n    boxedValues == null && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$LongLibBase$LongEmul, 256, 0));\n    result = boxedValues[rebase];\n    !result && (result = boxedValues[rebase] = create_0(value_0));\n    return result;\n  }\n  return create_0(value_0);\n}\n\nfunction gte_0(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);\n}\n\nfunction lt(a, b){\n  return !gte_0(a, b);\n}\n\nfunction mod(a, b){\n  divMod(a, b, true);\n  return remainder_0;\n}\n\nfunction neg(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  return create0(neg0, neg1, neg2);\n}\n\nfunction shl(a, n){\n  var res0, res1, res2;\n  n &= 63;\n  if (n < 22) {\n    res0 = a.l << n;\n    res1 = a.m << n | a.l >> 22 - n;\n    res2 = a.h << n | a.m >> 22 - n;\n  }\n   else if (n < 44) {\n    res0 = 0;\n    res1 = a.l << n - 22;\n    res2 = a.m << n - 22 | a.l >> 44 - n;\n  }\n   else {\n    res0 = 0;\n    res1 = 0;\n    res2 = a.l << n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction shr(a, n){\n  var a2, negative, res0, res1, res2;\n  n &= 63;\n  a2 = a.h;\n  negative = (a2 & 524288) != 0;\n  negative && (a2 |= -1048576);\n  if (n < 22) {\n    res2 = a2 >> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = negative?1048575:0;\n    res1 = a2 >> n - 22;\n    res0 = a.m >> n - 22 | a2 << 44 - n;\n  }\n   else {\n    res2 = negative?1048575:0;\n    res1 = negative?4194303:0;\n    res0 = a2 >> n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction shru(a, n){\n  var a2, res0, res1, res2;\n  n &= 63;\n  a2 = a.h & 1048575;\n  if (n < 22) {\n    res2 = a2 >>> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = 0;\n    res1 = a2 >>> n - 22;\n    res0 = a.m >> n - 22 | a.h << 44 - n;\n  }\n   else {\n    res2 = 0;\n    res1 = 0;\n    res0 = a2 >>> n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction sub_0(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 = a.h - b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction toDouble(a){\n  if (eq_0(a, ($clinit_LongLib$Const() , MIN_VALUE))) {\n    return -9223372036854775808;\n  }\n  if (!gte_0(a, ZERO)) {\n    return -toDoubleHelper(neg(a));\n  }\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction toInt(a){\n  return a.l | a.m << 22;\n}\n\nfunction xor(a, b){\n  return {l:a.l ^ b.l, m:a.m ^ b.m, h:a.h ^ b.h};\n}\n\nvar boxedValues;\nfunction $clinit_LongLib$Const(){\n  $clinit_LongLib$Const = nullMethod;\n  MAX_VALUE = create0(4194303, 4194303, 524287);\n  MIN_VALUE = create0(0, 0, 524288);\n  ONE = fromInt(1);\n  fromInt(2);\n  ZERO = fromInt(0);\n}\n\nvar MAX_VALUE, MIN_VALUE, ONE, ZERO;\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $adjustHorizontalConstraints(this$static, parentWidth, l_0){\n  var leftPx, rightPx, widthPx;\n  leftPx = l_0.left_0 * $getUnitSize(this$static, l_0.leftUnit, false);\n  rightPx = l_0.right * $getUnitSize(this$static, l_0.rightUnit, false);\n  widthPx = l_0.width_0 * $getUnitSize(this$static, l_0.widthUnit, false);\n  if (l_0.setLeft && !l_0.setTargetLeft) {\n    l_0.setLeft = false;\n    if (l_0.setWidth) {\n      l_0.setTargetRight = true;\n      l_0.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l_0.targetRightUnit, false);\n    }\n     else {\n      l_0.setTargetWidth = true;\n      l_0.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l_0.targetWidthUnit, false);\n    }\n  }\n   else if (l_0.setWidth && !l_0.setTargetWidth) {\n    l_0.setWidth = false;\n    if (l_0.setLeft) {\n      l_0.setTargetRight = true;\n      l_0.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l_0.targetRightUnit, false);\n    }\n     else {\n      l_0.setTargetLeft = true;\n      l_0.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l_0.targetLeftUnit, false);\n    }\n  }\n   else if (l_0.setRight && !l_0.setTargetRight) {\n    l_0.setRight = false;\n    if (l_0.setWidth) {\n      l_0.setTargetLeft = true;\n      l_0.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l_0.targetLeftUnit, false);\n    }\n     else {\n      l_0.setTargetWidth = true;\n      l_0.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l_0.targetWidthUnit, false);\n    }\n  }\n  l_0.setLeft = l_0.setTargetLeft;\n  l_0.setRight = l_0.setTargetRight;\n  l_0.setWidth = l_0.setTargetWidth;\n  l_0.leftUnit = l_0.targetLeftUnit;\n  l_0.rightUnit = l_0.targetRightUnit;\n  l_0.widthUnit = l_0.targetWidthUnit;\n}\n\nfunction $adjustVerticalConstraints(this$static, parentHeight, l_0){\n  var bottomPx, heightPx, topPx;\n  topPx = l_0.top_0 * $getUnitSize(this$static, l_0.topUnit, true);\n  bottomPx = l_0.bottom * $getUnitSize(this$static, l_0.bottomUnit, true);\n  heightPx = l_0.height_0 * $getUnitSize(this$static, l_0.heightUnit, true);\n  if (l_0.setTop && !l_0.setTargetTop) {\n    l_0.setTop = false;\n    if (l_0.setHeight) {\n      l_0.setTargetBottom = true;\n      l_0.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l_0.targetBottomUnit, true);\n    }\n     else {\n      l_0.setTargetHeight = true;\n      l_0.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l_0.targetHeightUnit, true);\n    }\n  }\n   else if (l_0.setHeight && !l_0.setTargetHeight) {\n    l_0.setHeight = false;\n    if (l_0.setTop) {\n      l_0.setTargetBottom = true;\n      l_0.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l_0.targetBottomUnit, true);\n    }\n     else {\n      l_0.setTargetTop = true;\n      l_0.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l_0.targetTopUnit, true);\n    }\n  }\n   else if (l_0.setBottom && !l_0.setTargetBottom) {\n    l_0.setBottom = false;\n    if (l_0.setHeight) {\n      l_0.setTargetTop = true;\n      l_0.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l_0.targetTopUnit, true);\n    }\n     else {\n      l_0.setTargetHeight = true;\n      l_0.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l_0.targetHeightUnit, true);\n    }\n  }\n  l_0.setTop = l_0.setTargetTop;\n  l_0.setBottom = l_0.setTargetBottom;\n  l_0.setHeight = l_0.setTargetHeight;\n  l_0.topUnit = l_0.targetTopUnit;\n  l_0.bottomUnit = l_0.targetBottomUnit;\n  l_0.heightUnit = l_0.targetHeightUnit;\n}\n\nfunction $attachChild(this$static, child, userObject){\n  var container, layer;\n  container = $attachChild_0(this$static.parentElem, child);\n  layer = new Layout$Layer_0(container, child, userObject);\n  $add_5(this$static.layers, layer);\n  return layer;\n}\n\nfunction $getUnitSize(this$static, unit, vertical){\n  return $getUnitSizeInPixels(this$static.impl, this$static.parentElem, unit, vertical);\n}\n\nfunction $layout(this$static, duration, callback){\n  var l_0, l$iterator, l$iterator0, parentHeight, parentWidth;\n  !!this$static.animation && $cancel(this$static.animation);\n  if (duration == 0) {\n    for (l$iterator0 = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator0.i < l$iterator0.this$0_0.size_1();) {\n      l_0 = dynamicCast($next_3(l$iterator0), Q$Layout$Layer);\n      l_0.left_0 = l_0.sourceLeft = l_0.targetLeft;\n      l_0.top_0 = l_0.sourceTop = l_0.targetTop;\n      l_0.right = l_0.sourceRight = l_0.targetRight;\n      l_0.bottom = l_0.sourceBottom = l_0.targetBottom;\n      l_0.width_0 = l_0.sourceWidth = l_0.targetWidth;\n      l_0.height_0 = l_0.sourceHeight = l_0.targetHeight;\n      l_0.setLeft = l_0.setTargetLeft;\n      l_0.setTop = l_0.setTargetTop;\n      l_0.setRight = l_0.setTargetRight;\n      l_0.setBottom = l_0.setTargetBottom;\n      l_0.setWidth = l_0.setTargetWidth;\n      l_0.setHeight = l_0.setTargetHeight;\n      l_0.leftUnit = l_0.targetLeftUnit;\n      l_0.topUnit = l_0.targetTopUnit;\n      l_0.rightUnit = l_0.targetRightUnit;\n      l_0.bottomUnit = l_0.targetBottomUnit;\n      l_0.widthUnit = l_0.targetWidthUnit;\n      l_0.heightUnit = l_0.targetHeightUnit;\n      $layout_0(this$static.impl, l_0);\n    }\n    return;\n  }\n  parentWidth = this$static.parentElem.clientWidth | 0;\n  parentHeight = this$static.parentElem.clientHeight | 0;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l_0 = dynamicCast($next_3(l$iterator), Q$Layout$Layer);\n    $adjustHorizontalConstraints(this$static, parentWidth, l_0);\n    $adjustVerticalConstraints(this$static, parentHeight, l_0);\n  }\n  this$static.animation = new Layout$1_0(this$static, callback);\n  $run(this$static.animation, duration, currentTimeMillis());\n}\n\nfunction $removeChild_0(this$static, layer){\n  $removeChild_1(layer.container, layer.child);\n  $remove_13(this$static.layers, layer);\n}\n\nfunction Layout_0(parent_0){\n  this.impl = new LayoutImplIE8_0;\n  this.layers = new ArrayList_0;\n  this.parentElem = parent_0;\n  $initParent(this.impl, parent_0);\n}\n\ndefineSeed(273, 1, {}, Layout_0);\nfunction Layout$1_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  Animation_0.call(this);\n}\n\ndefineSeed(274, 3, {}, Layout$1_0);\n_.onCancel = function onCancel_0(){\n  this.this$0.animation = null;\n  $layout(this.this$0, 0, null);\n}\n;\n_.onComplete = function onComplete_0(){\n  this.this$0.animation = null;\n  $layout(this.this$0, 0, null);\n}\n;\n_.onUpdate = function onUpdate(progress){\n  var l_0, l$iterator, child;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this.this$0.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l_0 = dynamicCast($next_3(l$iterator), Q$Layout$Layer);\n    l_0.setTargetLeft && (l_0.left_0 = l_0.sourceLeft + (l_0.targetLeft - l_0.sourceLeft) * progress);\n    l_0.setTargetRight && (l_0.right = l_0.sourceRight + (l_0.targetRight - l_0.sourceRight) * progress);\n    l_0.setTargetTop && (l_0.top_0 = l_0.sourceTop + (l_0.targetTop - l_0.sourceTop) * progress);\n    l_0.setTargetBottom && (l_0.bottom = l_0.sourceBottom + (l_0.targetBottom - l_0.sourceBottom) * progress);\n    l_0.setTargetWidth && (l_0.width_0 = l_0.sourceWidth + (l_0.targetWidth - l_0.sourceWidth) * progress);\n    l_0.setTargetHeight && (l_0.height_0 = l_0.sourceHeight + (l_0.targetHeight - l_0.sourceHeight) * progress);\n    $layout_0(this.this$0.impl, l_0);\n    !!this.val$callback && (child = l_0.userObject , instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_1() , undefined);\n  }\n}\n;\nfunction $setBottomHeight(this$static, bottom, bottomUnit, height, heightUnit){\n  this$static.setTargetBottom = this$static.setTargetHeight = true;\n  this$static.setTargetTop = false;\n  this$static.targetBottom = bottom;\n  this$static.targetHeight = height;\n  this$static.targetBottomUnit = bottomUnit;\n  this$static.targetHeightUnit = heightUnit;\n}\n\nfunction $setLeftRight(this$static, left, leftUnit, right, rightUnit){\n  this$static.setTargetLeft = this$static.setTargetRight = true;\n  this$static.setTargetWidth = false;\n  this$static.targetLeft = left;\n  this$static.targetRight = right;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetRightUnit = rightUnit;\n}\n\nfunction $setLeftWidth(this$static, left, leftUnit, width_0, widthUnit){\n  this$static.setTargetLeft = this$static.setTargetWidth = true;\n  this$static.setTargetRight = false;\n  this$static.targetLeft = left;\n  this$static.targetWidth = width_0;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetWidthUnit = widthUnit;\n}\n\nfunction $setRightWidth(this$static, right, rightUnit, width_0, widthUnit){\n  this$static.setTargetRight = this$static.setTargetWidth = true;\n  this$static.setTargetLeft = false;\n  this$static.targetRight = right;\n  this$static.targetWidth = width_0;\n  this$static.targetRightUnit = rightUnit;\n  this$static.targetWidthUnit = widthUnit;\n}\n\nfunction $setTopBottom(this$static, top_0, topUnit, bottom, bottomUnit){\n  this$static.setTargetTop = this$static.setTargetBottom = true;\n  this$static.setTargetHeight = false;\n  this$static.targetTop = top_0;\n  this$static.targetBottom = bottom;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetBottomUnit = bottomUnit;\n}\n\nfunction $setTopHeight(this$static, top_0, topUnit, height, heightUnit){\n  this$static.setTargetTop = this$static.setTargetHeight = true;\n  this$static.setTargetBottom = false;\n  this$static.targetTop = top_0;\n  this$static.targetHeight = height;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetHeightUnit = heightUnit;\n}\n\nfunction Layout$Layer_0(container, child, userObject){\n  this.targetLeftUnit = ($clinit_Style$Unit() , PX);\n  this.targetTopUnit = PX;\n  this.targetRightUnit = PX;\n  this.targetBottomUnit = PX;\n  this.container = container;\n  this.child = child;\n  this.userObject = userObject;\n}\n\ndefineSeed(275, 1, makeCastMap([Q$Layout$Layer]), Layout$Layer_0);\n_.bottom = 0;\n_.height_0 = 0;\n_.left_0 = 0;\n_.right = 0;\n_.setBottom = false;\n_.setHeight = false;\n_.setLeft = false;\n_.setRight = false;\n_.setTargetBottom = true;\n_.setTargetHeight = false;\n_.setTargetLeft = true;\n_.setTargetRight = true;\n_.setTargetTop = true;\n_.setTargetWidth = false;\n_.setTop = false;\n_.setWidth = false;\n_.sourceBottom = 0;\n_.sourceHeight = 0;\n_.sourceLeft = 0;\n_.sourceRight = 0;\n_.sourceTop = 0;\n_.sourceWidth = 0;\n_.targetBottom = 0;\n_.targetHeight = 0;\n_.targetLeft = 0;\n_.targetRight = 0;\n_.targetTop = 0;\n_.targetWidth = 0;\n_.top_0 = 0;\n_.visible = true;\n_.width_0 = 0;\nfunction $clinit_LayoutImpl(){\n  $clinit_LayoutImpl = nullMethod;\n  fixedRuler = createRuler(($clinit_Style$Unit() , CM), CM);\n  $appendChild($doc.body, fixedRuler);\n}\n\nfunction $attachChild_0(parent_0, child){\n  var container, style;\n  container = $doc.createElement('div');\n  container.appendChild(child);\n  $setPropertyImpl(container.style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(container.style, 'overflow', ($clinit_Style$Overflow() , 'hidden'));\n  style = child.style;\n  $setPropertyImpl(style, 'position', 'absolute');\n  style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['top'] = '0px';\n  style['right'] = '0px';\n  style['bottom'] = '0px';\n  parent_0.insertBefore(container, null);\n  return container;\n}\n\nfunction $getUnitSizeInPixels(this$static, parent_0, unit, vertical){\n  if (!unit) {\n    return 1;\n  }\n  switch (unit.ordinal) {\n    case 1:\n      return (vertical?parent_0.clientHeight | 0:parent_0.clientWidth | 0) / 100;\n    case 2:\n      return ($getSubPixelOffsetWidth(this$static.relativeRuler) | 0) / 10;\n    case 3:\n      return ((this$static.relativeRuler.offsetHeight || 0) | 0) / 10;\n    case 7:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.1;\n    case 8:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.01;\n    case 6:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.254;\n    case 4:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.00353;\n    case 5:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.0423;\n    default:case 0:\n      return 1;\n  }\n}\n\nfunction $initParent(this$static, parent_0){\n  $setPropertyImpl(parent_0.style, 'position', ($clinit_Style$Position() , 'relative'));\n  $appendChild(parent_0, this$static.relativeRuler = createRuler(($clinit_Style$Unit() , EM), EX));\n}\n\nfunction $removeChild_1(container, child){\n  var style;\n  $removeFromParent(container);\n  $getParentElement(child) == container && $removeFromParent(child);\n  style = child.style;\n  $setPropertyImpl(style, 'position', '');\n  $setPropertyImpl(style, 'left', '');\n  $setPropertyImpl(style, 'top', '');\n  $setPropertyImpl(style, 'width', '');\n  $setPropertyImpl(style, 'height', '');\n}\n\nfunction createRuler(widthUnit, heightUnit){\n  var ruler, style;\n  ruler = $doc.createElement('div');\n  $setInnerHTML(ruler, '&nbsp;');\n  style = ruler.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(style, 'zIndex', '-32767');\n  $setPropertyImpl(style, 'top', -20 + heightUnit.getType());\n  $setPropertyImpl(style, 'width', 10 + widthUnit.getType());\n  $setPropertyImpl(style, 'height', 10 + heightUnit.getType());\n  $setPropertyImpl(style, 'visibility', ($clinit_Style$Visibility() , 'hidden'));\n  $set_0(($clinit_State() , HIDDEN), ruler, initValues(_3Ljava_lang_Boolean_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Boolean, [($clinit_Boolean() , $clinit_Boolean() , TRUE_1)]));\n  return ruler;\n}\n\ndefineSeed(276, 1, {});\nvar fixedRuler;\nfunction $layout_0(this$static, layer){\n  var oldDisplay, style;\n  style = layer.container.style;\n  setLayer(layer.container, layer);\n  if (layer.visible) {\n    oldDisplay = style['display'];\n    $setPropertyImpl(style, 'display', '');\n    oldDisplay.length > 0 && $updateVisibility(this$static, layer.container);\n  }\n   else {\n    $setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  }\n  layer.setLeft?$setValue(this$static, layer, 'left', layer.left_0, layer.leftUnit, false, false):$setPropertyImpl(style, 'left', '');\n  layer.setRight?$setValue(this$static, layer, 'right', layer.right, layer.rightUnit, false, false):$setPropertyImpl(style, 'right', '');\n  layer.setTop?$setValue(this$static, layer, 'top', layer.top_0, layer.topUnit, true, false):$setPropertyImpl(style, 'top', '');\n  layer.setBottom?$setValue(this$static, layer, 'bottom', layer.bottom, layer.bottomUnit, true, false):$setPropertyImpl(style, 'bottom', '');\n  layer.setWidth?$setValue(this$static, layer, 'width', layer.width_0, layer.widthUnit, false, true):$setPropertyImpl(style, 'width', '');\n  layer.setHeight?$setValue(this$static, layer, 'height', layer.height_0, layer.heightUnit, true, true):$setPropertyImpl(style, 'height', '');\n  style = layer.child.style;\n  switch (2) {\n    case 0:\n    case 1:\n    case 2:\n      style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['right'] = '0px';\n  }\n  switch (2) {\n    case 0:\n    case 1:\n    case 2:\n      style['top'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['bottom'] = '0px';\n  }\n}\n\nfunction $removeLayerRefs(parent_0){\n  for (var i = 0; i < parent_0.childNodes.length; ++i) {\n    var container = parent_0.childNodes[i];\n    container.__layer && (container.__layer = null);\n  }\n}\n\nfunction $setValue(this$static, layer, prop, value_0, unit, vertical, noNegative){\n  switch (unit.ordinal) {\n    case 0:\n    case 1:\n      break;\n    default:value_0 = value_0 * $getUnitSizeInPixels(this$static, layer.container, unit, vertical);\n      value_0 = round_int(value_0 + 0.5);\n      unit = ($clinit_Style$Unit() , PX);\n  }\n  noNegative && value_0 < 0 && (value_0 = 0);\n  layer.container.style[prop] = value_0 + unit.getType();\n}\n\nfunction $updateVisibility(this$static, container){\n  var i, layer, node, nodes;\n  layer = container.__layer;\n  !!layer && $layout_0(this$static, layer);\n  nodes = container.childNodes;\n  for (i = 0; i < nodes.length; ++i) {\n    node = nodes[i];\n    node.nodeType == 1 && $updateVisibility(this$static, node);\n  }\n}\n\nfunction LayoutImplIE8_0(){\n  $clinit_LayoutImpl();\n}\n\nfunction setLayer(container, layer){\n  container.__layer = layer;\n}\n\ndefineSeed(277, 276, {}, LayoutImplIE8_0);\nfunction $replace_0(this$static, input_0, replacement){\n  return input_0.replace(this$static, replacement);\n}\n\nfunction OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(html){\n  if (html == null) {\n    throw new NullPointerException_1('html is null');\n  }\n  this.html = html;\n}\n\ndefineSeed(279, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0);\n_.asString = function asString(){\n  return this.html;\n}\n;\n_.equals$ = function equals_6(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this.html);\n}\n;\nfunction SafeHtmlString_0(){\n  this.html = '';\n}\n\ndefineSeed(280, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), SafeHtmlString_0);\n_.asString = function asString_0(){\n  return this.html;\n}\n;\n_.equals$ = function equals_7(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_9(){\n  return getHashCode_0(this.html);\n}\n;\n_.toString$ = function toString_13(){\n  return 'safe: \"' + this.html + '\"';\n}\n;\nfunction $clinit_SafeHtmlUtils(){\n  $clinit_SafeHtmlUtils = nullMethod;\n  new SafeHtmlString_0;\n  AMP_RE = new RegExp('&', 'g');\n  GT_RE = new RegExp('>', 'g');\n  LT_RE = new RegExp('<', 'g');\n  SQUOT_RE = new RegExp(\"'\", 'g');\n  QUOT_RE = new RegExp('\"', 'g');\n}\n\nfunction htmlEscape(s){\n  $clinit_SafeHtmlUtils();\n  s.indexOf('&') != -1 && (s = $replace_0(AMP_RE, s, '&amp;'));\n  s.indexOf('<') != -1 && (s = $replace_0(LT_RE, s, '&lt;'));\n  s.indexOf('>') != -1 && (s = $replace_0(GT_RE, s, '&gt;'));\n  s.indexOf('\"') != -1 && (s = $replace_0(QUOT_RE, s, '&quot;'));\n  s.indexOf(\"'\") != -1 && (s = $replace_0(SQUOT_RE, s, '&#39;'));\n  return s;\n}\n\nvar AMP_RE, GT_RE, LT_RE, QUOT_RE, SQUOT_RE;\ndefineSeed(282, 1, {});\nfunction PassthroughParser_0(){\n}\n\ndefineSeed(283, 1, {}, PassthroughParser_0);\nvar INSTANCE_1;\nfunction PassthroughRenderer_0(){\n}\n\ndefineSeed(284, 282, {}, PassthroughRenderer_0);\nvar INSTANCE_2;\nfunction $calcNewVelocity(initialVelocity, decelFactor, oldVelocity, minDecel){\n  var maxVelocityX, minVelocityX, newVelocity;\n  newVelocity = initialVelocity * decelFactor;\n  if (oldVelocity >= 0) {\n    maxVelocityX = 0 > oldVelocity - minDecel?0:oldVelocity - minDecel;\n    newVelocity = newVelocity < maxVelocityX?newVelocity:maxVelocityX;\n  }\n   else {\n    minVelocityX = 0 < oldVelocity + minDecel?0:oldVelocity + minDecel;\n    newVelocity = newVelocity > minVelocityX?newVelocity:minVelocityX;\n  }\n  return newVelocity;\n}\n\nfunction $updateState(state){\n  var decelFactor, dist, elapsedMillis, ellapsedMillis, initialVelocity, minDecel, newVelocity, newVelocityX, newVelocityY, oldVelocity, position, totalEllapsedMillis;\n  ellapsedMillis = state.elapsedMillis;\n  totalEllapsedMillis = state.cumulativeElapsedMillis;\n  initialVelocity = state.initialVelocity;\n  oldVelocity = state.velocity;\n  decelFactor = pow_0(0.9993, totalEllapsedMillis);\n  minDecel = ellapsedMillis * 5.0E-4;\n  newVelocityX = $calcNewVelocity(initialVelocity.x_0, decelFactor, oldVelocity.x_0, minDecel);\n  newVelocityY = $calcNewVelocity(initialVelocity.y_0, decelFactor, oldVelocity.y_0, minDecel);\n  newVelocity = new Point_0(newVelocityX, newVelocityY);\n  state.velocity = newVelocity;\n  elapsedMillis = state.elapsedMillis;\n  dist = $mult(newVelocity, new Point_0(elapsedMillis, elapsedMillis));\n  position = state.position;\n  $setPosition(state, new Point_0(position.x_0 + dist.x_0, position.y_0 + dist.y_0));\n  if (abs_0(newVelocity.x_0) < 0.02 && abs_0(newVelocity.y_0) < 0.02) {\n    return false;\n  }\n  return true;\n}\n\nfunction DefaultMomentum_0(){\n}\n\ndefineSeed(285, 1, {}, DefaultMomentum_0);\nfunction $setCumulativeElapsedMillis(this$static, cumulativeElapsedMillis){\n  this$static.cumulativeElapsedMillis = cumulativeElapsedMillis;\n}\n\nfunction $setElapsedMillis(this$static, elapsedMillis){\n  this$static.elapsedMillis = elapsedMillis;\n}\n\nfunction $setPosition(this$static, position){\n  this$static.position = position;\n}\n\nfunction Momentum$State_0(initialPosition, initialVelocity){\n  this.initialVelocity = initialVelocity;\n  this.position = new Point_1(initialPosition);\n  this.velocity = new Point_1(initialVelocity);\n}\n\ndefineSeed(286, 1, {}, Momentum$State_0);\n_.cumulativeElapsedMillis = 0;\n_.elapsedMillis = 0;\nfunction $minus(this$static, c){\n  return new Point_0(this$static.x_0 - c.x_0, this$static.y_0 - c.y_0);\n}\n\nfunction $mult(this$static, c){\n  return new Point_0(this$static.x_0 * c.x_0, this$static.y_0 * c.y_0);\n}\n\nfunction $plus(this$static, c){\n  return new Point_0(this$static.x_0 + c.x_0, this$static.y_0 + c.y_0);\n}\n\nfunction Point_0(x_0, y_0){\n  this.x_0 = x_0;\n  this.y_0 = y_0;\n}\n\nfunction Point_1(c){\n  Point_0.call(this, c.x_0, c.y_0);\n}\n\ndefineSeed(287, 1, makeCastMap([Q$Point]), Point_0, Point_1);\n_.equals$ = function equals_8(obj){\n  var c;\n  if (!instanceOf(obj, Q$Point)) {\n    return false;\n  }\n  c = dynamicCast(obj, Q$Point);\n  return this.x_0 == c.x_0 && this.y_0 == c.y_0;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  return round_int(this.x_0) ^ round_int(this.y_0);\n}\n;\n_.toString$ = function toString_14(){\n  return 'Point(' + this.x_0 + ',' + this.y_0 + ')';\n}\n;\n_.x_0 = 0;\n_.y_0 = 0;\nfunction $calculateEndVelocity(from, to){\n  var dist, time;\n  time = to.time - from.time;\n  if (time <= 0) {\n    return null;\n  }\n  dist = $minus(from.point, to.point);\n  return new Point_0(dist.x_0 / time, dist.y_0 / time);\n}\n\nfunction $cancelAll(this$static){\n  this$static.touching = false;\n  this$static.dragging = false;\n  this$static.momentumCommand = null;\n}\n\nfunction $getTouchFromEvent(event_0){\n  var touches;\n  touches = event_0.nativeEvent.touches;\n  return touches.length > 0?touches[0]:null;\n}\n\nfunction $getWidgetScrollPosition(this$static){\n  return new Point_0($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n}\n\nfunction $hitTest(point1, point2){\n  var absDiffX, absDiffY, diff;\n  diff = new Point_0(point1.x_0 - point2.x_0, point1.y_0 - point2.y_0);\n  absDiffX = abs_0(diff.x_0);\n  absDiffY = abs_0(diff.y_0);\n  return absDiffX <= 25 && absDiffY <= 25;\n}\n\nfunction $isClickScrollTriggeringTouch(this$static, clickPoint){\n  if (this$static.recentScrollTriggeringTouchPosition.point) {\n    return $hitTest(clickPoint, this$static.recentScrollTriggeringTouchPosition.point);\n  }\n  return false;\n}\n\nfunction $isClickTouchPositionDuringMomentum(this$static, clickPoint){\n  var currentTime, point, point$iterator, same;\n  currentTime = currentTimeMillis();\n  same = false;\n  for (point$iterator = new AbstractList$IteratorImpl_0(this$static.touchPositionsDuringMomentum); point$iterator.i < point$iterator.this$0_0.size_1();) {\n    point = dynamicCast($next_3(point$iterator), Q$TouchScroller$TemporalPoint);\n    if (currentTime - point.time <= 2500 && $hitTest(clickPoint, point.point)) {\n      same = true;\n      break;\n    }\n  }\n  return same;\n}\n\nfunction $onDragEnd(this$static){\n  var endVelocity;\n  if (!this$static.momentum) {\n    return;\n  }\n  endVelocity = $calculateEndVelocity(this$static.recentTouchPosition, this$static.lastTouchPosition);\n  if (endVelocity) {\n    this$static.momentumCommand = new TouchScroller$MomentumCommand_0(this$static, endVelocity);\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumCommand), 16);\n  }\n}\n\nfunction $onTouchEnd(this$static){\n  if (!this$static.touching) {\n    return;\n  }\n  this$static.touching = false;\n  if (this$static.dragging) {\n    this$static.dragging = false;\n    $onDragEnd(this$static);\n  }\n}\n\nfunction $onTouchMove(this$static, event_0){\n  var absDiffX, absDiffY, diff, hMax, hMin, hPosition, touch, touchPoint, touchTime, trackingTime, vMax, vPosition, diff_0, curScrollPosition;\n  if (!this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  touchPoint = new Point_0($touchGetSubPixelPageX(touch) | 0, $touchGetSubPixelPageY(touch) | 0);\n  touchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.lastTouchPosition, touchPoint, touchTime);\n  if (!this$static.dragging) {\n    diff = $minus(touchPoint, this$static.startTouchPosition);\n    absDiffX = abs_0(diff.x_0);\n    absDiffY = abs_0(diff.y_0);\n    if (absDiffX > 5 || absDiffY > 5) {\n      $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, this$static.recentTouchPosition.point, this$static.recentTouchPosition.time);\n      if (absDiffX > absDiffY) {\n        hPosition = $getHorizontalScrollPosition(this$static.widget);\n        hMin = $getMinimumHorizontalScrollPosition_0(this$static.widget);\n        hMax = $getMaximumHorizontalScrollPosition_0(this$static.widget);\n        if (diff.x_0 < 0 && hMax <= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.x_0 > 0 && hMin >= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n       else {\n        vPosition = $getVerticalScrollPosition(this$static.widget);\n        vMax = $getMaximumVerticalScrollPosition(this$static.widget);\n        if (diff.y_0 < 0 && vMax <= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.y_0 > 0 && 0 >= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n      this$static.dragging = true;\n    }\n  }\n  $eventPreventDefault(event_0.nativeEvent);\n  if (this$static.dragging) {\n    diff_0 = $minus(this$static.startTouchPosition, this$static.lastTouchPosition.point);\n    curScrollPosition = $plus(this$static.startScrollPosition, diff_0);\n    $setHorizontalScrollPosition(this$static.widget, round_int(curScrollPosition.x_0));\n    $setVerticalScrollPosition(this$static.widget, round_int(curScrollPosition.y_0));\n    trackingTime = touchTime - this$static.recentTouchPosition.time;\n    if (trackingTime > 200 && !!this$static.recentTouchPositionOnDeck) {\n      $setTemporalPoint(this$static.recentTouchPosition, this$static.recentTouchPositionOnDeck.point, this$static.recentTouchPositionOnDeck.time);\n      this$static.recentTouchPositionOnDeck = null;\n    }\n     else \n      trackingTime > 100 && !this$static.recentTouchPositionOnDeck && (this$static.recentTouchPositionOnDeck = new TouchScroller$TemporalPoint_1(touchPoint, touchTime));\n  }\n}\n\nfunction $onTouchStart(this$static, event_0){\n  var startTouchTime, touch;\n  $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, null, 0);\n  if (this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  this$static.startTouchPosition = new Point_0($touchGetSubPixelPageX(touch) | 0, $touchGetSubPixelPageY(touch) | 0);\n  startTouchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.recentTouchPosition, this$static.startTouchPosition, startTouchTime);\n  $setTemporalPoint(this$static.lastTouchPosition, this$static.startTouchPosition, startTouchTime);\n  this$static.recentTouchPositionOnDeck = null;\n  if (this$static.momentumCommand) {\n    $add_5(this$static.touchPositionsDuringMomentum, new TouchScroller$TemporalPoint_1(this$static.startTouchPosition, startTouchTime));\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumTouchRemovalCommand), 2500);\n  }\n  this$static.startScrollPosition = new Point_0($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n  $cancelAll(this$static);\n  this$static.touching = true;\n}\n\nfunction $removeAttachHandler(this$static){\n  if (this$static.attachHandlerReg) {\n    $removeHandler(this$static.attachHandlerReg.real);\n    this$static.attachHandlerReg = null;\n  }\n}\n\nfunction $removeBustClickHandler(this$static){\n  if (this$static.bustClickHandlerReg) {\n    $removeHandler(this$static.bustClickHandlerReg.real);\n    this$static.bustClickHandlerReg = null;\n  }\n}\n\nfunction $setMomentum(this$static, momentum){\n  this$static.momentum = momentum;\n  !momentum && (this$static.momentumCommand = null);\n}\n\nfunction $setTargetWidget(this$static, widget){\n  var reg, reg$iterator;\n  if (this$static.widget == widget) {\n    return;\n  }\n  $cancelAll(this$static);\n  for (reg$iterator = new AbstractList$IteratorImpl_0(this$static.handlerRegs); reg$iterator.i < reg$iterator.this$0_0.size_1();) {\n    reg = dynamicCast($next_3(reg$iterator), Q$HandlerRegistration);\n    $removeHandler(reg.real);\n  }\n  $clear(this$static.handlerRegs);\n  $removeAttachHandler(this$static);\n  $removeBustClickHandler(this$static);\n  this$static.widget = widget;\n  if (widget) {\n    widget.attached && ($removeBustClickHandler(this$static) , this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static)));\n    this$static.attachHandlerReg = $addHandler_0(widget, new TouchScroller$1_0(this$static), (!TYPE_12 && (TYPE_12 = new GwtEvent$Type_0) , TYPE_12));\n    $add_5(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$2_0(this$static), ($clinit_TouchStartEvent() , $clinit_TouchStartEvent() , TYPE_11)));\n    $add_5(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$3_0(this$static), ($clinit_TouchMoveEvent() , $clinit_TouchMoveEvent() , TYPE_10)));\n    $add_5(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$4_0(this$static), ($clinit_TouchEndEvent() , $clinit_TouchEndEvent() , TYPE_9)));\n    $add_5(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$5_0(this$static), ($clinit_TouchCancelEvent() , $clinit_TouchCancelEvent() , TYPE_8)));\n  }\n}\n\nfunction $setWidgetScrollPosition(this$static, position){\n  $setHorizontalScrollPosition(this$static.widget, round_int(position.x_0));\n  $setVerticalScrollPosition(this$static.widget, round_int(position.y_0));\n}\n\nfunction $setupBustClickHandler(this$static){\n  $removeBustClickHandler(this$static);\n  this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static));\n}\n\nfunction TouchScroller_0(){\n  this.handlerRegs = new ArrayList_0;\n  this.lastTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentScrollTriggeringTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.touchPositionsDuringMomentum = new ArrayList_0;\n  this.momentumTouchRemovalCommand = new TouchScroller$MomentumTouchRemovalCommand_0(this);\n  $setMomentum(this, new DefaultMomentum_0);\n}\n\ndefineSeed(288, 1, {}, TouchScroller_0);\n_.dragging = false;\n_.touching = false;\nvar isSupported;\nfunction TouchScroller$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(289, 1, makeCastMap([Q$AttachEvent$Handler, Q$EventHandler]), TouchScroller$1_0);\nfunction TouchScroller$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(290, 1, makeCastMap([Q$TouchStartHandler, Q$EventHandler]), TouchScroller$2_0);\nfunction TouchScroller$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(291, 1, makeCastMap([Q$TouchMoveHandler, Q$EventHandler]), TouchScroller$3_0);\nfunction TouchScroller$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(292, 1, makeCastMap([Q$TouchEndHandler, Q$EventHandler]), TouchScroller$4_0);\nfunction TouchScroller$5_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(293, 1, makeCastMap([Q$TouchCancelHandler, Q$EventHandler]), TouchScroller$5_0);\nfunction TouchScroller$6_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(294, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), TouchScroller$6_0);\n_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){\n  var clickPoint;\n  if (1 == $getTypeInt(event_0.nativeEvent)) {\n    clickPoint = new Point_0($eventGetSubPixelClientX(event_0.nativeEvent) | 0, $eventGetSubPixelClientY(event_0.nativeEvent) | 0);\n    if ($isClickScrollTriggeringTouch(this.this$0, clickPoint) || $isClickTouchPositionDuringMomentum(this.this$0, clickPoint)) {\n      event_0.isCanceled = true;\n      $eventStopPropagation(event_0.nativeEvent);\n      $eventPreventDefault(event_0.nativeEvent);\n    }\n  }\n}\n;\nfunction $finish(this$static){\n  if (this$static.windowResizeHandler) {\n    $removeHandler(this$static.windowResizeHandler.real);\n    this$static.windowResizeHandler = null;\n  }\n  this$static == this$static.this$0.momentumCommand && (this$static.this$0.momentumCommand = null);\n}\n\nfunction TouchScroller$MomentumCommand_0(this$0, endVelocity){\n  this.this$0 = this$0;\n  this.duration = new Duration_0;\n  this.initialPosition = $getWidgetScrollPosition(this.this$0);\n  this.state = new Momentum$State_0(this.initialPosition, endVelocity);\n  this.windowResizeHandler = addResizeHandler(new TouchScroller$MomentumCommand$1_0(this));\n}\n\ndefineSeed(295, 1, {}, TouchScroller$MomentumCommand_0);\n_.execute_0 = function execute_3(){\n  var cumulativeElapsedMillis, hMax, hMin, hPos, notDone, vMax, vPos;\n  if (this != this.this$0.momentumCommand) {\n    $finish(this);\n    return false;\n  }\n  cumulativeElapsedMillis = $elapsedMillis(this.duration);\n  $setElapsedMillis(this.state, cumulativeElapsedMillis - this.lastElapsedMillis);\n  this.lastElapsedMillis = cumulativeElapsedMillis;\n  $setCumulativeElapsedMillis(this.state, cumulativeElapsedMillis);\n  notDone = $updateState(this.state);\n  notDone || $finish(this);\n  $setWidgetScrollPosition(this.this$0, this.state.position);\n  hPos = round_int(this.state.position.x_0);\n  hMin = $getMinimumHorizontalScrollPosition_0(this.this$0.widget);\n  hMax = $getMaximumHorizontalScrollPosition_0(this.this$0.widget);\n  vMax = $getMaximumVerticalScrollPosition(this.this$0.widget);\n  vPos = round_int(this.state.position.y_0);\n  if ((vMax <= vPos || 0 >= vPos) && (hMax <= hPos || hMin >= hPos)) {\n    $finish(this);\n    return false;\n  }\n  return notDone;\n}\n;\n_.lastElapsedMillis = 0;\nfunction TouchScroller$MomentumCommand$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(296, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), TouchScroller$MomentumCommand$1_0);\n_.onResize_0 = function onResize(event_0){\n  $finish(this.this$1);\n}\n;\nfunction TouchScroller$MomentumTouchRemovalCommand_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(297, 1, {}, TouchScroller$MomentumTouchRemovalCommand_0);\n_.execute_0 = function execute_4(){\n  var currentTime, iter, point;\n  currentTime = currentTimeMillis();\n  iter = new AbstractList$IteratorImpl_0(this.this$0.touchPositionsDuringMomentum);\n  while (iter.i < iter.this$0_0.size_1()) {\n    point = dynamicCast($next_3(iter), Q$TouchScroller$TemporalPoint);\n    currentTime - point.time >= 2500 && $remove_11(iter);\n  }\n  return this.this$0.touchPositionsDuringMomentum.size_0 != 0;\n}\n;\nfunction $setTemporalPoint(this$static, point, time){\n  this$static.point = point;\n  this$static.time = time;\n}\n\nfunction TouchScroller$TemporalPoint_0(){\n}\n\nfunction TouchScroller$TemporalPoint_1(point, time){\n  this.point = point;\n  this.time = time;\n}\n\ndefineSeed(298, 1, makeCastMap([Q$TouchScroller$TemporalPoint]), TouchScroller$TemporalPoint_0, TouchScroller$TemporalPoint_1);\n_.time = 0;\nfunction ensureCookies(){\n  var newCachedCookies;\n  if (!cachedCookies || needsRefresh()) {\n    newCachedCookies = new HashMap_0;\n    loadCookies(newCachedCookies);\n    cachedCookies = newCachedCookies;\n  }\n  return cachedCookies;\n}\n\nfunction loadCookies(m_0){\n  var docCookie = $doc.cookie;\n  if (docCookie && docCookie != '') {\n    var crumbs = docCookie.split('; ');\n    for (var i = 0; i < crumbs.length; ++i) {\n      var name_0, value_0;\n      var eqIdx = crumbs[i].indexOf('=');\n      if (eqIdx == -1) {\n        name_0 = crumbs[i];\n        value_0 = '';\n      }\n       else {\n        name_0 = crumbs[i].substring(0, eqIdx);\n        value_0 = crumbs[i].substring(eqIdx + 1);\n      }\n      if (uriEncoding) {\n        try {\n          name_0 = decodeURIComponent(name_0);\n        }\n         catch (e) {\n        }\n        try {\n          value_0 = decodeURIComponent(value_0);\n        }\n         catch (e) {\n        }\n      }\n      m_0.put(name_0, value_0);\n    }\n  }\n}\n\nfunction needsRefresh(){\n  var docCookie = $doc.cookie;\n  if (docCookie != rawCookies) {\n    rawCookies = docCookie;\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n\nfunction removeCookie(name_0){\n  name_0 = encodeURIComponent(name_0);\n  $doc.cookie = name_0 + '=;expires=Fri, 02-Jan-1970 00:00:00 GMT';\n}\n\nfunction setCookie(name_0, value_0){\n  var c;\n  name_0 = encodeURIComponent(name_0);\n  value_0 = encodeURIComponent(value_0);\n  c = name_0 + '=' + value_0;\n  $doc.cookie = c;\n}\n\nvar cachedCookies = null, rawCookies, uriEncoding = true;\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl_1 = new DOMImplIE9_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem){\n  $clinit_DOM();\n  var eventListener;\n  eventListener = getEventListener(elem);\n  if (!eventListener) {\n    return false;\n  }\n  dispatchEvent_1(evt, elem, eventListener);\n  return true;\n}\n\nfunction dispatchEvent_1(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index_0){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), index_0);\n}\n\nfunction previewEvent(evt){\n  $clinit_DOM();\n  var ret;\n  ret = fire_4(handlers_0, evt);\n  if (!ret && !!evt) {\n    $eventStopPropagation(evt);\n    $eventPreventDefault(evt);\n  }\n  return ret;\n}\n\nfunction releaseCapture(elem){\n  $clinit_DOM();\n  !!sCaptureElem && elem == sCaptureElem && (sCaptureElem = null);\n  $releaseCapture(impl_1, elem);\n}\n\nfunction setCapture(elem){\n  $clinit_DOM();\n  sCaptureElem = elem;\n  $setCapture(impl_1, elem);\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl_1, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl_1, elem, eventBits);\n}\n\nvar currentEvent = null, impl_1, sCaptureElem;\nfunction $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction $getTypeInt(this$static){\n  return $clinit_DOM() , $eventGetTypeInt(this$static.type);\n}\n\nfunction addNativePreviewHandler(handler){\n  $clinit_DOM();\n  $maybeInitializeEventSystem(impl_1);\n  !TYPE_16 && (TYPE_16 = new GwtEvent$Type_0);\n  if (!handlers_0) {\n    handlers_0 = new HandlerManager_1(null, true);\n    singleton = new Event$NativePreviewEvent_0;\n  }\n  return $addHandler(handlers_0, TYPE_16, handler);\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction setEventListener(elem, listener){\n  $clinit_DOM();\n  setEventListener_0(elem, listener);\n}\n\nvar handlers_0;\nfunction $revive(this$static){\n  this$static.dead = false;\n  this$static.source = null;\n  this$static.isCanceled = false;\n  this$static.isConsumed = false;\n  this$static.isFirstHandler = true;\n  this$static.nativeEvent = null;\n}\n\nfunction $setNativeEvent_0(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction Event$NativePreviewEvent_0(){\n}\n\nfunction fire_4(handlers, nativeEvent){\n  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;\n  if (!!TYPE_16 && !!handlers && $isEventHandled(handlers, TYPE_16)) {\n    lastIsCanceled = singleton.isCanceled;\n    lastIsConsumed = singleton.isConsumed;\n    lastIsFirstHandler = singleton.isFirstHandler;\n    lastNativeEvent = singleton.nativeEvent;\n    $revive(singleton);\n    $setNativeEvent_0(singleton, nativeEvent);\n    $fireEvent(handlers, singleton);\n    ret = !(singleton.isCanceled && !singleton.isConsumed);\n    singleton.isCanceled = lastIsCanceled;\n    singleton.isConsumed = lastIsConsumed;\n    singleton.isFirstHandler = lastIsFirstHandler;\n    singleton.nativeEvent = lastNativeEvent;\n    return ret;\n  }\n  return true;\n}\n\ndefineSeed(304, 184, {}, Event$NativePreviewEvent_0);\n_.dispatch = function dispatch_16(handler){\n  dynamicCast(handler, Q$Event$NativePreviewHandler).onPreviewNativeEvent(this);\n  singleton.isFirstHandler = false;\n}\n;\n_.getAssociatedType = function getAssociatedType_17(){\n  return TYPE_16;\n}\n;\n_.revive = function revive_0(){\n  $revive(this);\n}\n;\n_.isCanceled = false;\n_.isConsumed = false;\n_.isFirstHandler = false;\nvar TYPE_16, singleton;\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_2 = new HistoryImpl_0;\n  $init(impl_2)?null:(impl_2 = null);\n}\n\nfunction addValueChangeHandler(handler){\n  $clinit_History();\n  return impl_2?$addValueChangeHandler(impl_2, handler):null;\n}\n\nvar impl_2;\nfunction addCloseHandler(handler){\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_13?TYPE_13:(TYPE_13 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), type_0, handler);\n}\n\nfunction addResizeHandler(handler){\n  maybeInitializeCloseHandlers();\n  maybeInitializeResizeHandlers();\n  return addHandler((!TYPE_14 && (TYPE_14 = new GwtEvent$Type_0) , TYPE_14), handler);\n}\n\nfunction alert_0(msg){\n  $wnd.alert(msg);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initHandler('function __gwt_initWindowCloseHandler(beforeunload, unload) {\\n  var wnd = window\\n  , oldOnBeforeUnload = wnd.onbeforeunload\\n  , oldOnUnload = wnd.onunload;\\n  \\n  wnd.onbeforeunload = function(evt) {\\n    var ret, oldRet;\\n    try {\\n      ret = beforeunload();\\n    } finally {\\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\\n    }\\n    // Avoid returning null as IE6 will coerce it into a string.\\n    // Ensure that \"\" gets returned properly.\\n    if (ret != null) {\\n      return ret;\\n    }\\n    if (oldRet != null) {\\n      return oldRet;\\n    }\\n    // returns undefined.\\n  };\\n  \\n  wnd.onunload = function(evt) {\\n    try {\\n      unload();\\n    } finally {\\n      oldOnUnload && oldOnUnload(evt);\\n      wnd.onresize = null;\\n      wnd.onscroll = null;\\n      wnd.onbeforeunload = null;\\n      wnd.onunload = null;\\n    }\\n  };\\n  \\n  // Remove the reference once we\\'ve initialize the handler\\n  wnd.__gwt_initWindowCloseHandler = undefined;\\n}\\n', new WindowImplIE$1_0);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction maybeInitializeResizeHandlers(){\n  if (!resizeHandlersInitialized) {\n    $initHandler(\"function __gwt_initWindowResizeHandler(resize) {\\n  var wnd = window, oldOnResize = wnd.onresize;\\n  \\n  wnd.onresize = function(evt) {\\n    try {\\n      resize();\\n    } finally {\\n      oldOnResize && oldOnResize(evt);\\n    }\\n  };\\n  \\n  // Remove the reference once we've initialize the handler\\n  wnd.__gwt_initWindowResizeHandler = undefined;\\n}\\n\", new WindowImplIE$2_0);\n    resizeHandlersInitialized = true;\n  }\n}\n\nfunction onClosed(){\n  closeHandlersInitialized && fire_1((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n}\n\nfunction onClosing(){\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_1 && $fireEvent(handlers_1, event_0);\n    return null;\n  }\n  return null;\n}\n\nfunction onResize_0(){\n  var height, width_0;\n  if (resizeHandlersInitialized) {\n    width_0 = $getClientWidth($doc);\n    height = $getClientHeight($doc);\n    if (lastResizeWidth != width_0 || lastResizeHeight != height) {\n      lastResizeWidth = width_0;\n      lastResizeHeight = height;\n      fire_2((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), width_0);\n    }\n  }\n}\n\nvar closeHandlersInitialized = false, handlers_1, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_17 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(308, 184, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_17(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_18(){\n  return TYPE_17;\n}\n;\nvar TYPE_17;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(309, 212, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $maybeInitializeEventSystem(dom);\n      $sinkEventsImpl(elem, 0);\n      setEventListener_0(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l_0 = diEvents.length; i < l_0; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener_0(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(310, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(311, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_3, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $eventGetToElement(evt){\n  if ($equals(evt.type, 'mouseover')) {\n    return evt.target;\n  }\n  if ($equals(evt.type, 'mouseout')) {\n    return evt.relatedTarget;\n  }\n  return null;\n}\n\nfunction $getChild(elem, index_0){\n  var count = 0, child = elem.firstChild;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (index_0 == count)\n        return child;\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  return null;\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_2 = $entry(dispatchEvent_3);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $releaseCapture(this$static, elem){\n  $maybeInitializeEventSystem(this$static);\n  captureElem == elem && (captureElem = null);\n}\n\nfunction $setCapture(this$static, elem){\n  $maybeInitializeEventSystem(this$static);\n  captureElem = elem;\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  $maybeInitializeEventSystem(this$static);\n  $sinkBitlessEventImpl(elem, eventTypeName);\n  $equals('dragover', eventTypeName) && $sinkBitlessEventImpl(elem, 'dragenter');\n}\n\nfunction $sinkBitlessEventImpl(elem, eventTypeName){\n  var dispatchMap = bitlessEventDispatchers;\n  var dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_2:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_2:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_2:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_2:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_2:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_2:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_2:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_2:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_2:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_2:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_2:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_2:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_2:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_2:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_2:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_2:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_2:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_2:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_2:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_2:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_2:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_2:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_2:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_2:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_2:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_2:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  previewEvent(evt);\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  var cancelled;\n  cancelled = !previewEvent(evt);\n  if (cancelled || !captureElem) {\n    return;\n  }\n  dispatchEvent_0(evt, captureElem) && $eventStopPropagation(evt);\n}\n\nfunction dispatchDragEvent(evt){\n  $eventPreventDefault(evt);\n  dispatchEvent_3(evt);\n}\n\nfunction dispatchEvent_3(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_1(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = $eventGetCurrentTarget(evt);\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_3(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = $eventGetCurrentTarget(evt);\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(314, 310, {});\nvar bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_2, dispatchUnhandledEvent;\ndefineSeed(313, 314, {});\nfunction DOMImplIE9_0(){\n  $clinit_DOMImplStandard();\n}\n\ndefineSeed(312, 313, {}, DOMImplIE9_0);\nfunction $get_1(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  if (index_0 < 0) {\n    return null;\n  }\n  return dynamicCast($get_5(this$static.uiObjectList, index_0), Q$UIObject);\n}\n\nfunction $put_0(this$static, uiObject){\n  var index_0;\n  if (!this$static.freeList) {\n    index_0 = this$static.uiObjectList.size_0;\n    $add_5(this$static.uiObjectList, uiObject);\n  }\n   else {\n    index_0 = this$static.freeList.index_0;\n    $set_2(this$static.uiObjectList, index_0, uiObject);\n    this$static.freeList = this$static.freeList.next;\n  }\n  uiObject.getElement()['__uiObjectID'] = index_0;\n}\n\nfunction $removeByElement(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set_2(this$static.uiObjectList, index_0, null);\n  this$static.freeList = new ElementMapperImpl$FreeNode_0(index_0, this$static.freeList);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index_0 = elem['__uiObjectID'];\n  return index_0 == null?-1:index_0;\n}\n\ndefineSeed(315, 1, {}, ElementMapperImpl_0);\n_.freeList = null;\nfunction ElementMapperImpl$FreeNode_0(index_0, next){\n  this.index_0 = index_0;\n  this.next = next;\n}\n\ndefineSeed(316, 1, {}, ElementMapperImpl$FreeNode_0);\n_.index_0 = 0;\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler(this$static.handlers, (!TYPE_15 && (TYPE_15 = new GwtEvent$Type_0) , TYPE_15), handler);\n}\n\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  historyImpl.oldHandler = $wnd.onhashchange;\n  $wnd.onhashchange = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n    var oldHandler = historyImpl.oldHandler;\n    oldHandler && oldHandler();\n  }\n  );\n  return true;\n}\n\nfunction HistoryImpl_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\ndefineSeed(318, 1, makeCastMap([Q$HasHandlers]), HistoryImpl_0);\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n;\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent(this.handlers, event_0);\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_3(this);\n  }\n}\n;\nvar token_1 = '';\nfunction $initHandler(initFunc, cmd){\n  var scriptElem;\n  scriptElem = $createScriptElement($doc, initFunc);\n  $appendChild($doc.body, scriptElem);\n  cmd.execute_1();\n  $removeChild($doc.body, scriptElem);\n}\n\nfunction WindowImplIE$1_0(){\n}\n\ndefineSeed(321, 1, {}, WindowImplIE$1_0);\n_.execute_1 = function execute_5(){\n  $wnd.__gwt_initWindowCloseHandler($entry(onClosing), $entry(onClosed));\n}\n;\nfunction WindowImplIE$2_0(){\n}\n\ndefineSeed(322, 1, {}, WindowImplIE$2_0);\n_.execute_1 = function execute_6(){\n  $wnd.__gwt_initWindowResizeHandler($entry(onResize_0));\n}\n;\nfunction $addStyleDependentName(this$static, styleSuffix){\n  $setStyleName(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-' + styleSuffix, true);\n}\n\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element_0;\n}\n\nfunction $removeStyleDependentName(this$static, styleSuffix){\n  $setStyleName(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-' + styleSuffix, false);\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element_0 = elem;\n}\n\nfunction $setHeight_0(this$static, height){\n  $setPropertyImpl(this$static.getElement().style, 'height', height);\n}\n\nfunction $setStyleName(this$static, style, add_0){\n  setStyleName(($clinit_DOM() , this$static.element_0), style, add_0);\n}\n\nfunction $setTitle(this$static, title_0){\n  title_0 == null || title_0.length == 0?$removeAttribute(($clinit_DOM() , this$static.element_0), 'title'):$setAttribute(($clinit_DOM() , this$static.element_0), 'title', title_0);\n}\n\nfunction $setVisible(this$static, visible){\n  setVisible(this$static.getElement(), visible);\n}\n\nfunction $setWidth_0(this$static, width_0){\n  $setPropertyImpl(this$static.getElement().style, 'width', width_0);\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(this$static.getElement(), eventTypeName);\n}\n\nfunction getStylePrimaryName(elem){\n  var fullClassName, spaceIdx;\n  fullClassName = elem.className;\n  spaceIdx = $indexOf_1(fullClassName, fromCodePoint(32));\n  if (spaceIdx >= 0) {\n    return $substring_0(fullClassName, 0, spaceIdx);\n  }\n  return fullClassName;\n}\n\nfunction setStyleName(elem, style, add_0){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_1('Style names cannot be empty');\n  }\n  add_0?$addClassName(elem, style):$removeClassName(elem, style);\n}\n\nfunction setStylePrimaryName(elem, style){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_1('Style names cannot be empty');\n  }\n  updatePrimaryAndDependentStyleNames(elem, style);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\nfunction updatePrimaryAndDependentStyleNames(elem, newPrimaryStyle){\n  var classes = elem.className.split(/\\s+/);\n  if (!classes) {\n    return;\n  }\n  var oldPrimaryStyle = classes[0];\n  var oldPrimaryStyleLen = oldPrimaryStyle.length;\n  classes[0] = newPrimaryStyle;\n  for (var i = 1, n = classes.length; i < n; i++) {\n    var name_0 = classes[i];\n    name_0.length > oldPrimaryStyleLen && name_0.charAt(oldPrimaryStyleLen) == '-' && name_0.indexOf(oldPrimaryStyle) == 0 && (classes[i] = newPrimaryStyle + name_0.substring(oldPrimaryStyleLen));\n  }\n  elem.className = classes.join(' ');\n}\n\ndefineSeed(327, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.getElement = function getElement(){\n  return $getElement(this);\n}\n;\n_.getOffsetHeight = function getOffsetHeight(){\n  return $getPropertyInt(this.getElement(), 'offsetHeight');\n}\n;\n_.getOffsetWidth = function getOffsetWidth(){\n  return $getPropertyInt(this.getElement(), 'offsetWidth');\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.setHeight_0 = function setHeight(height){\n  $setHeight_0(this, height);\n}\n;\n_.setWidth_0 = function setWidth(width_0){\n  $setWidth_0(this, width_0);\n}\n;\n_.toString$ = function toString_15(){\n  if (!this.element_0) {\n    return '(null handle)';\n  }\n  return this.getElement().outerHTML;\n}\n;\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.eventsToSink == -1?sinkEvents(this$static.getElement(), typeInt | ($clinit_DOM() , this$static.getElement().__eventBits || 0)):(this$static.eventsToSink |= typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $addHandler_0(this$static, handler, type_0){\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener_0(this$static.getElement(), this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.getElement(), bitsToAdd | (this$static.getElement().__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));\n  this$static.doAttachChildren();\n  this$static.onLoad();\n  fire_0(this$static, true);\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = event_0.relatedTarget;\n      if (!!related && isOrHasChildImpl(this$static.getElement(), related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.getElement());\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n    fire_0(this$static, false);\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      $clinit_DOM();\n      setEventListener_0(this$static.getElement(), null);\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent_0(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove_0(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents_0(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(this$static.getElement(), eventBitsToAdd | ($clinit_DOM() , this$static.getElement().__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(326, 327, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\nfunction $adopt(this$static, child){\n  $setParent(child, this$static);\n}\n\ndefineSeed(325, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent_0(child);\n  $add_3(this$static.children_0, child);\n  $clinit_DOM();\n  appendChild(container, child.getElement());\n  $setParent(child, this$static);\n}\n\nfunction $remove(this$static, index_0){\n  return $remove_5(this$static, $get_3(this$static.children_0, index_0));\n}\n\nfunction $remove_0(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = w.getElement();\n    $removeChild(($clinit_DOM() , $clinit_DOM() , $getParentElement(elem)), elem);\n    $remove_8(this$static.children_0, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children_0 = new WidgetCollection_0(this);\n}\n\ndefineSeed(324, 325, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_1(){\n  return new WidgetCollection$WidgetIterator_0(this.children_0);\n}\n;\n_.remove_0 = function remove_0(w){\n  return $remove_0(this, w);\n}\n;\nfunction $add_0(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction $remove_1(this$static, w){\n  var removed;\n  removed = $remove_0(this$static, w);\n  removed && changeToStaticPositioning(w.getElement());\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(323, 324, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove_0 = function remove_1(w){\n  return $remove_1(this, w);\n}\n;\nfunction $onAttach_0(this$static){\n  var tabIndex;\n  $onAttach(this$static);\n  tabIndex = this$static.getTabIndex();\n  -1 == tabIndex && this$static.setTabIndex(0);\n}\n\nfunction $setEnabled(this$static, enabled){\n  ($clinit_DOM() , this$static.element_0)['disabled'] = !enabled;\n}\n\nfunction FocusWidget_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(329, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getTabIndex = function getTabIndex(){\n  return $getTabIndex(($clinit_DOM() , this.element_0));\n}\n;\n_.onAttach = function onAttach_0(){\n  $onAttach_0(this);\n}\n;\n_.setTabIndex = function setTabIndex(index_0){\n  $setTabIndex(($clinit_DOM() , this.element_0), index_0);\n}\n;\nfunction Anchor_1(text_0){\n  $setElement(this, $doc.createElement('a'));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-Anchor');\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element_0);\n  $setTextOrHtml(this.directionalTextHelper, text_0, false);\n  this.element_0.href = 'javascript:;';\n}\n\ndefineSeed(328, 329, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Anchor_1);\n_.getTabIndex = function getTabIndex_0(){\n  return $getTabIndex(($clinit_DOM() , this.element_0));\n}\n;\n_.setTabIndex = function setTabIndex_0(index_0){\n  $setTabIndex(($clinit_DOM() , this.element_0), index_0);\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute_2(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_6(caught, e);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(330, 217, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(331, 1, {}, AttachDetachException$1_0);\n_.execute_2 = function execute_7(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(332, 1, {}, AttachDetachException$2_0);\n_.execute_2 = function execute_8(w){\n  w.onDetach();\n}\n;\nfunction $setHTML(this$static, html){\n  $setInnerHTML(($clinit_DOM() , this$static.element_0), html);\n}\n\nfunction ButtonBase_0(elem){\n  FocusWidget_0.call(this, elem);\n}\n\ndefineSeed(334, 329, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(html, handler){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.setAttribute('type', 'button') , e));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-Button');\n  $setInnerHTML(this.element_0, html);\n  $addDomHandler(this, handler, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n}\n\ndefineSeed(333, 334, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);\nfunction $getWidgetTd(this$static, w){\n  if (w.parent_0 != this$static) {\n    return null;\n  }\n  return $clinit_DOM() , $clinit_DOM() , $getParentElement($getElement(w.button_0));\n}\n\nfunction $setCellHorizontalAlignment(td, align_0){\n  $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellVerticalAlignment(td, align_0){\n  $setCellVerticalAlignment_0(($clinit_DOM() , td), align_0);\n}\n\nfunction $setCellVerticalAlignment_0(td, align_0){\n  $setPropertyImpl(td.style, 'verticalAlign', align_0.verticalAlignString);\n}\n\nfunction $setCellWidth(this$static, w){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(td, 'width', '80%');\n}\n\nfunction CellPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = ($clinit_DOM() , $doc.createElement('table'));\n  this.body_0 = $doc.createElement('tbody');\n  $appendChild(this.table, ($clinit_PotentialElement() , $resolve(this.body_0)));\n  $setElement(this, this.table);\n}\n\ndefineSeed(335, 324, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');\n  }\n  instanceOf(widget, Q$IsRenderable) && dynamicCast(widget, Q$IsRenderable);\n  $removeFromParent_0(widget);\n  elem = widget.getElement();\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent(widget, this$static);\n}\n\ndefineSeed(336, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.isAttached();\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents_0(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  this.widget.onAttach();\n  $clinit_DOM();\n  setEventListener_0(this.getElement(), this);\n  fire_0(this, true);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  this.widget.onBrowserEvent(event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  try {\n    fire_0(this, false);\n  }\n   finally {\n    this.widget.onDetach();\n  }\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement_0(this, ($clinit_DOM() , this.widget.resolvePotentialElement()));\n  return this.getElement();\n}\n;\nfunction $cleanupCaptureState(this$static){\n  if (this$static.isCapturing || this$static.isFocusing) {\n    releaseCapture(($clinit_DOM() , this$static.element_0));\n    this$static.isCapturing = false;\n    this$static.isFocusing = false;\n  }\n}\n\nfunction $getCurrentFace(this$static){\n  !this$static.curFace && $setCurrentFace_0(this$static, this$static.up);\n  return this$static.curFace;\n}\n\nfunction $getFaceFromID(this$static, id_0){\n  switch (id_0) {\n    case 1:\n      return !this$static.down && $setDownFace(this$static, new CustomButton$2_0(this$static, this$static.up, 'down', 1)) , this$static.down;\n    case 0:\n      return this$static.up;\n    case 3:\n      return !this$static.downHovering && $setDownHoveringFace(this$static, new CustomButton$2_0(this$static, (!this$static.down && $setDownFace(this$static, new CustomButton$2_0(this$static, this$static.up, 'down', 1)) , this$static.down), 'down-hovering', 3)) , this$static.downHovering;\n    case 2:\n      return !this$static.upHovering && $setUpHoveringFace(this$static, new CustomButton$2_0(this$static, this$static.up, 'up-hovering', 2)) , this$static.upHovering;\n    case 4:\n      return !this$static.upDisabled && $setUpDisabledFace(this$static, new CustomButton$2_0(this$static, this$static.up, 'up-disabled', 4)) , this$static.upDisabled;\n    case 5:\n      return !this$static.downDisabled && $setDownDisabledFace(this$static, new CustomButton$2_0(this$static, (!this$static.down && $setDownFace(this$static, new CustomButton$2_0(this$static, this$static.up, 'down', 1)) , this$static.down), 'down-disabled', 5)) , this$static.downDisabled;\n    default:throw new IllegalStateException_1(id_0 + ' is not a known face id.');\n  }\n}\n\nfunction $setCurrentFace(this$static, faceID){\n  var newFace;\n  newFace = $getFaceFromID(this$static, faceID);\n  $setCurrentFace_0(this$static, newFace);\n}\n\nfunction $setCurrentFace_0(this$static, newFace){\n  var pressed;\n  if (this$static.curFace != newFace) {\n    !!this$static.curFace && $removeStyleDependentName(this$static, this$static.curFace.val$name);\n    this$static.curFace = newFace;\n    $setCurrentFaceElement(this$static, $getFace(newFace));\n    $addStyleDependentName(this$static, this$static.curFace.val$name);\n    !($clinit_DOM() , this$static.element_0)['disabled'] && (pressed = (newFace.val$faceID & 1) == 1 , $clinit_Roles() , $setAriaPressedState(this$static.element_0, ($clinit_PressedValue() , pressed?TRUE:FALSE)) , undefined);\n  }\n}\n\nfunction $setCurrentFaceElement(this$static, newFaceElement){\n  if (this$static.curFaceElement != newFaceElement) {\n    !!this$static.curFaceElement && $removeChild(($clinit_DOM() , this$static.element_0), this$static.curFaceElement);\n    this$static.curFaceElement = newFaceElement;\n    appendChild(($clinit_DOM() , this$static.element_0), this$static.curFaceElement);\n  }\n}\n\nfunction $setDown(this$static){\n  (1 & (!this$static.curFace && $setCurrentFace_0(this$static, this$static.up) , this$static.curFace.val$faceID)) > 0 && $toggleDown(this$static);\n}\n\nfunction $setDownDisabledFace(this$static, downDisabled){\n  this$static.downDisabled = downDisabled;\n}\n\nfunction $setDownFace(this$static, down){\n  this$static.down = down;\n}\n\nfunction $setDownHoveringFace(this$static, downHovering){\n  this$static.downHovering = downHovering;\n}\n\nfunction $setUpDisabledFace(this$static, upDisabled){\n  this$static.upDisabled = upDisabled;\n}\n\nfunction $setUpFace(this$static, up){\n  this$static.up = up;\n}\n\nfunction $setUpHoveringFace(this$static, upHovering){\n  this$static.upHovering = upHovering;\n}\n\nfunction $toggleDown(this$static){\n  var newFaceID;\n  newFaceID = (!this$static.curFace && $setCurrentFace_0(this$static, this$static.up) , this$static.curFace.val$faceID) ^ 1;\n  $setCurrentFace(this$static, newFaceID);\n}\n\nfunction $toggleHover(this$static){\n  var newFaceID;\n  newFaceID = (!this$static.curFace && $setCurrentFace_0(this$static, this$static.up) , this$static.curFace.val$faceID) ^ 2;\n  newFaceID &= -5;\n  $setCurrentFace(this$static, newFaceID);\n}\n\ndefineSeed(337, 334, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getTabIndex = function getTabIndex_1(){\n  return $getTabIndex(($clinit_DOM() , this.element_0));\n}\n;\n_.onAttach = function onAttach_2(){\n  !this.curFace && $setCurrentFace_0(this, this.up);\n  $onAttach_0(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  var keyCode, to, type_0;\n  if (($clinit_DOM() , this.element_0)['disabled']) {\n    return;\n  }\n  type_0 = $eventGetTypeInt(event_0.type);\n  switch (type_0) {\n    case 1:\n      if (!this.allowClick) {\n        $eventStopPropagation(event_0);\n        return;\n      }\n\n      break;\n    case 4:\n      if ($eventGetButton(event_0) == 1) {\n        $focus(this.element_0);\n        setCapture(this.element_0);\n        this.isCapturing = true;\n        $eventPreventDefault(event_0);\n      }\n\n      break;\n    case 8:\n      if (this.isCapturing) {\n        this.isCapturing = false;\n        releaseCapture(this.element_0);\n        (2 & (!this.curFace && $setCurrentFace_0(this, this.up) , this.curFace).val$faceID) > 0 && $eventGetButton(event_0) == 1 && $onClick(this);\n      }\n\n      break;\n    case 64:\n      this.isCapturing && $eventPreventDefault(event_0);\n      break;\n    case 32:\n      to = $eventGetToElement(event_0);\n      isOrHasChildImpl(this.element_0, event_0.target) && (!to || !isOrHasChildImpl(this.element_0, to)) && (2 & (!this.curFace && $setCurrentFace_0(this, this.up) , this.curFace.val$faceID)) > 0 && $toggleHover(this);\n      break;\n    case 16:\n      isOrHasChildImpl(this.element_0, event_0.target) && (2 & (!this.curFace && $setCurrentFace_0(this, this.up) , this.curFace.val$faceID)) <= 0 && $toggleHover(this);\n      break;\n    case 4096:\n      this.isFocusing && (this.isFocusing = false);\n      break;\n    case 8192:\n      this.isCapturing && (this.isCapturing = false);\n  }\n  $onBrowserEvent(this, event_0);\n  if (($eventGetTypeInt(event_0.type) & 896) != 0) {\n    keyCode = $eventGetKeyCode(event_0) & 65535;\n    switch (type_0) {\n      case 128:\n        keyCode == 32 && (this.isFocusing = true);\n        break;\n      case 512:\n        if (this.isFocusing && keyCode == 32) {\n          this.isFocusing = false;\n          $onClick(this);\n        }\n\n        break;\n      case 256:\n        (keyCode == 10 || keyCode == 13) && $onClick(this);\n    }\n  }\n}\n;\n_.onDetach = function onDetach_1(){\n  $onDetach(this);\n  $cleanupCaptureState(this);\n  (2 & (!this.curFace && $setCurrentFace_0(this, this.up) , this.curFace.val$faceID)) > 0 && $toggleHover(this);\n}\n;\n_.setTabIndex = function setTabIndex_1(index_0){\n  $setTabIndex(($clinit_DOM() , this.element_0), index_0);\n}\n;\n_.allowClick = false;\n_.isCapturing = false;\n_.isFocusing = false;\nfunction $getFace(this$static){\n  if (!this$static.face_0) {\n    if (!this$static.delegateTo) {\n      this$static.face_0 = ($clinit_DOM() , $doc.createElement('div'));\n      return this$static.face_0;\n    }\n     else {\n      return $getFace(this$static.delegateTo);\n    }\n  }\n   else {\n    return this$static.face_0;\n  }\n}\n\nfunction $setText_0(this$static){\n  this$static.face_0 = ($clinit_DOM() , $doc.createElement('div'));\n  setStyleName(this$static.face_0, 'html-face', true);\n  $setInnerText(this$static.face_0, '>');\n  !!this$static.this$0.curFace && $getFace(this$static.this$0.curFace) == $getFace(this$static) && $setCurrentFaceElement(this$static.this$0, this$static.face_0);\n}\n\ndefineSeed(339, 1, {});\n_.toString$ = function toString_16(){\n  return this.val$name;\n}\n;\nfunction CustomButton$2_0(this$0, $anonymous0, val$name, val$faceID){\n  this.val$name = val$name;\n  this.val$faceID = val$faceID;\n  this.this$0 = this$0;\n  this.delegateTo = $anonymous0;\n}\n\ndefineSeed(338, 339, {}, CustomButton$2_0);\n_.val$faceID = 0;\nfunction $remove_2(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(this$static.getContainerElement(), w.getElement());\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction $setWidget(this$static, w){\n  if (w == this$static.widget) {\n    return;\n  }\n  !!w && $removeFromParent_0(w);\n  !!this$static.widget && this$static.remove_0(this$static.widget);\n  this$static.widget = w;\n  if (w) {\n    $clinit_DOM();\n    appendChild(this$static.getContainerElement(), this$static.widget.getElement());\n    $setParent(w, this$static);\n  }\n}\n\nfunction SimplePanel_0(){\n  SimplePanel_1.call(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\nfunction SimplePanel_1(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(342, 325, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getContainerElement = function getContainerElement(){\n  return $clinit_DOM() , this.element_0;\n}\n;\n_.iterator = function iterator_2(){\n  return new SimplePanel$1_0(this);\n}\n;\n_.remove_0 = function remove_2(w){\n  return $remove_2(this, w);\n}\n;\nfunction $center(this$static){\n  var elem, initiallyAnimated, initiallyShowing, left, top_0;\n  initiallyShowing = this$static.showing;\n  initiallyAnimated = this$static.isAnimationEnabled;\n  if (!initiallyShowing) {\n    $setVisible_0(this$static, false);\n    this$static.isAnimationEnabled = false;\n    this$static.show();\n  }\n  elem = ($clinit_DOM() , this$static.element_0);\n  elem.style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = '0px';\n  left = $getClientWidth($doc) - $getPropertyInt(this$static.element_0, 'offsetWidth') >> 1;\n  top_0 = $getClientHeight($doc) - $getPropertyInt(this$static.element_0, 'offsetHeight') >> 1;\n  $setPopupPosition(this$static, max_2(($wnd.pageXOffset | 0) + left, 0), max_2(($wnd.pageYOffset | 0) + top_0, 0));\n  if (!initiallyShowing) {\n    this$static.isAnimationEnabled = initiallyAnimated;\n    if (initiallyAnimated) {\n      $setClip(this$static.element_0, 'rect(0px, 0px, 0px, 0px)');\n      $setVisible_0(this$static, true);\n      $run(this$static.resizeAnimation, 200, currentTimeMillis());\n    }\n     else {\n      $setVisible_0(this$static, true);\n    }\n  }\n}\n\nfunction $eventTargetsPopup(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_1(target)) {\n    return isOrHasChildImpl(($clinit_DOM() , this$static.element_0), target);\n  }\n  return false;\n}\n\nfunction $hide(this$static){\n  if (!this$static.showing) {\n    return;\n  }\n  $setState(this$static.resizeAnimation, false, false);\n  fire_1(this$static);\n}\n\nfunction $maybeUpdateSize(this$static){\n  var w;\n  w = this$static.widget;\n  if (w) {\n    this$static.desiredHeight != null && w.setHeight_0(this$static.desiredHeight);\n    this$static.desiredWidth != null && w.setWidth_0(this$static.desiredWidth);\n  }\n}\n\nfunction $previewNativeEvent(this$static, event_0){\n  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;\n  if (event_0.isCanceled || !this$static.previewAllNativeEvents && event_0.isConsumed) {\n    this$static.modal && (event_0.isCanceled = true);\n    return;\n  }\n  this$static.onPreviewNativeEvent(event_0);\n  if (event_0.isCanceled) {\n    return;\n  }\n  nativeEvent = event_0.nativeEvent;\n  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent);\n  eventTargetsPopupOrPartner && (event_0.isConsumed = true);\n  this$static.modal && (event_0.isCanceled = true);\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(nativeEvent.type));\n  switch (type_0) {\n    case 512:\n    case 256:\n    case 128:\n      {\n        $eventGetKeyCode(nativeEvent) & 65535;\n        ($eventGetShiftKey(nativeEvent)?1:0) | ($eventGetMetaKey(nativeEvent)?8:0) | ($eventGetCtrlKey(nativeEvent)?2:0) | ($eventGetAltKey(nativeEvent)?4:0);\n        return;\n      }\n\n    case 4:\n    case 1048576:\n      if (sCaptureElem) {\n        event_0.isConsumed = true;\n        return;\n      }\n\n      if (!eventTargetsPopupOrPartner && this$static.autoHide) {\n        this$static.hide(true);\n        return;\n      }\n\n      break;\n    case 8:\n    case 64:\n    case 1:\n    case 2:\n    case 4194304:\n      {\n        if (sCaptureElem) {\n          event_0.isConsumed = true;\n          return;\n        }\n        break;\n      }\n\n    case 2048:\n      {\n        target = nativeEvent.target;\n        if (this$static.modal && !eventTargetsPopupOrPartner && !!target) {\n          target.blur && target != $doc.body && target.blur();\n          event_0.isCanceled = true;\n          return;\n        }\n        break;\n      }\n\n  }\n}\n\nfunction $setGlassEnabled(this$static){\n  this$static.isGlassEnabled = true;\n  if (!this$static.glass) {\n    this$static.glass = $doc.createElement('div');\n    $setClassName(this$static.glass, 'gwt-PopupPanelGlass');\n    this$static.glass.style['position'] = ($clinit_Style$Position() , 'absolute');\n    this$static.glass.style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n    this$static.glass.style['top'] = '0px';\n  }\n}\n\nfunction $setHeight_1(this$static, height){\n  this$static.desiredHeight = height;\n  $maybeUpdateSize(this$static);\n  height.length == 0 && (this$static.desiredHeight = null);\n}\n\nfunction $setPopupPosition(this$static, left, top_0){\n  var elem;\n  this$static.leftPosition = left;\n  this$static.topPosition = top_0;\n  left -= 0;\n  top_0 -= 0;\n  elem = ($clinit_DOM() , this$static.element_0);\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nfunction $setPopupPositionAndShow(this$static, callback){\n  $setVisible_0(this$static, false);\n  this$static.show();\n  $setPosition_0(callback, $getPropertyInt(($clinit_DOM() , this$static.element_0), 'offsetWidth'), $getPropertyInt(this$static.element_0, 'offsetHeight'));\n  $setVisible_0(this$static, true);\n}\n\nfunction $setTitle_0(this$static, title_0){\n  var containerElement;\n  containerElement = ($clinit_DOM() , $clinit_DOM() , $getFirstChildElement(this$static.element_0));\n  title_0 == null || title_0.length == 0?$removeAttribute(containerElement, 'title'):$setAttribute(containerElement, 'title', title_0);\n}\n\nfunction $setVisible_0(this$static, visible){\n  ($clinit_DOM() , this$static.element_0).style['visibility'] = visible?'visible':'hidden';\n  !!this$static.glass && (this$static.glass.style['visibility'] = visible?'visible':'hidden' , undefined);\n}\n\nfunction $setWidget_0(this$static, w){\n  $setWidget(this$static, w);\n  $maybeUpdateSize(this$static);\n}\n\nfunction $setWidth_1(this$static, width_0){\n  this$static.desiredWidth = width_0;\n  $maybeUpdateSize(this$static);\n  width_0.length == 0 && (this$static.desiredWidth = null);\n}\n\nfunction $show(this$static){\n  if (this$static.showing) {\n    return;\n  }\n   else \n    this$static.attached && $removeFromParent_0(this$static);\n  $setState(this$static.resizeAnimation, true, false);\n}\n\nfunction $updateHandlers(this$static){\n  if (this$static.nativePreviewHandlerRegistration) {\n    $removeHandler(this$static.nativePreviewHandlerRegistration.real);\n    this$static.nativePreviewHandlerRegistration = null;\n  }\n  if (this$static.historyHandlerRegistration) {\n    $removeHandler(this$static.historyHandlerRegistration.real);\n    this$static.historyHandlerRegistration = null;\n  }\n  if (this$static.showing) {\n    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));\n    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));\n  }\n}\n\nfunction PopupPanel_0(){\n  SimplePanel_0.call(this);\n  this.glassResizer = new PopupPanel$1_0(this);\n  this.isAnimationEnabled = false;\n  this.leftPosition = -1;\n  this.resizeAnimation = new PopupPanel$ResizeAnimation_0(this);\n  this.topPosition = -1;\n  $appendChild(($clinit_DOM() , this.element_0), $doc.createElement('div'));\n  $setPopupPosition(this, 0, 0);\n  $getParentElement($getFirstChildElement(this.element_0)).className = 'gwt-PopupPanel';\n  $getFirstChildElement(this.element_0).className = 'popupContent';\n  this.autoHide = false;\n  this.autoHideOnHistoryEvents = false;\n  this.modal = true;\n}\n\ndefineSeed(341, 342, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), PopupPanel_0);\n_.getContainerElement = function getContainerElement_0(){\n  return $clinit_DOM() , $getFirstChildElement(this.element_0);\n}\n;\n_.getOffsetHeight = function getOffsetHeight_0(){\n  return $getPropertyInt(($clinit_DOM() , this.element_0), 'offsetHeight');\n}\n;\n_.getOffsetWidth = function getOffsetWidth_0(){\n  return $getPropertyInt(($clinit_DOM() , this.element_0), 'offsetWidth');\n}\n;\n_.hide = function hide(autoClosed){\n  $hide(this);\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n}\n;\n_.onUnload = function onUnload_0(){\n  this.showing && $setState(this.resizeAnimation, false, true);\n}\n;\n_.setHeight_0 = function setHeight_0(height){\n  $setHeight_1(this, height);\n}\n;\n_.setWidget = function setWidget(w){\n  $setWidget_0(this, w);\n}\n;\n_.setWidth_0 = function setWidth_0(width_0){\n  $setWidth_1(this, width_0);\n}\n;\n_.show = function show(){\n  $show(this);\n}\n;\n_.autoHide = false;\n_.autoHideOnHistoryEvents = false;\n_.isAnimationEnabled = false;\n_.isGlassEnabled = false;\n_.leftPosition = 0;\n_.modal = false;\n_.previewAllNativeEvents = false;\n_.showing = false;\n_.topPosition = 0;\nfunction $setWidget_1(this$static, w){\n  $setWidget(this$static.decPanel, w);\n  $maybeUpdateSize(this$static);\n}\n\ndefineSeed(340, 341, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_1(){\n  $onAttach(this.decPanel);\n}\n;\n_.doDetachChildren = function doDetachChildren_1(){\n  $onDetach(this.decPanel);\n}\n;\n_.iterator = function iterator_3(){\n  return new SimplePanel$1_0(this.decPanel);\n}\n;\n_.remove_0 = function remove_3(w){\n  return $remove_2(this.decPanel, w);\n}\n;\n_.setWidget = function setWidget_0(w){\n  $setWidget_1(this, w);\n}\n;\nfunction $getCellElement(this$static){\n  var td, tr;\n  tr = ($clinit_DOM() , $getChild(this$static.tbody, 0));\n  td = $getChild(tr, 1);\n  return $getFirstChildElement(td);\n}\n\nfunction DecoratorPanel_0(rowStyles){\n  var i, row, table, trElem;\n  SimplePanel_1.call(this, ($clinit_DOM() , $doc.createElement('table')));\n  table = this.element_0;\n  this.tbody = $doc.createElement('tbody');\n  appendChild(table, this.tbody);\n  $setPropertyInt(table, 'cellSpacing', 0);\n  $setPropertyInt(table, 'cellPadding', 0);\n  for (i = 0; i < rowStyles.length; i++) {\n    row = (trElem = $doc.createElement('tr') , $setClassName(trElem, rowStyles[i]) , $clinit_LocaleInfo() , appendChild(trElem, createTD(rowStyles[i] + 'Left')) , appendChild(trElem, createTD(rowStyles[i] + 'Center')) , appendChild(trElem, createTD(rowStyles[i] + 'Right')) , trElem);\n    appendChild(this.tbody, row);\n    i == 1 && (this.containerElem = $getFirstChildElement($getChild(row, 1)));\n  }\n  $setClassName(this.element_0, 'gwt-DecoratorPanel');\n}\n\nfunction createTD(styleName){\n  var inner, tdElem;\n  tdElem = ($clinit_DOM() , $doc.createElement('td'));\n  inner = $doc.createElement('div');\n  $appendChild(tdElem, ($clinit_PotentialElement() , $resolve(inner)));\n  $setClassName(tdElem, styleName);\n  $setClassName(inner, styleName + 'Inner');\n  return tdElem;\n}\n\ndefineSeed(343, 342, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), DecoratorPanel_0);\n_.getContainerElement = function getContainerElement_1(){\n  return $clinit_DOM() , this.containerElem;\n}\n;\nfunction $beginDragging(this$static, event_0){\n  $onMouseDown(this$static, $getX(event_0), $getY(event_0));\n}\n\nfunction $continueDragging(this$static, event_0){\n  $onMouseMove(this$static, $getX(event_0), $getY(event_0));\n}\n\nfunction $endDragging(this$static, event_0){\n  $onMouseUp(this$static, ($getX(event_0) , $getY(event_0)));\n}\n\nfunction $hide_0(this$static, autoClosed){\n  if (this$static.resizeHandlerRegistration) {\n    $removeHandler(this$static.resizeHandlerRegistration.real);\n    this$static.resizeHandlerRegistration = null;\n  }\n  $hide(this$static);\n}\n\nfunction $isCaptionEvent(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_1(target)) {\n    return isOrHasChildImpl($getParentElement(($clinit_DOM() , $getCellElement(this$static.decPanel))), target);\n  }\n  return false;\n}\n\nfunction $onMouseDown(this$static, x_0, y_0){\n  if (!($clinit_DOM() , $clinit_DOM() , $clinit_DOM() , sCaptureElem)) {\n    this$static.dragging = true;\n    setCapture(this$static.element_0);\n    this$static.dragStartX = x_0;\n    this$static.dragStartY = y_0;\n  }\n}\n\nfunction $onMouseMove(this$static, x_0, y_0){\n  var absX, absY;\n  if (this$static.dragging) {\n    absX = x_0 + $getAbsoluteLeft(($clinit_DOM() , this$static.element_0));\n    absY = y_0 + ($getBoundingClientRectTop(this$static.element_0) + $wnd.pageYOffset | 0);\n    if (absX < this$static.clientLeft || absX >= this$static.windowWidth || absY < this$static.clientTop) {\n      return;\n    }\n    $setPopupPosition(this$static, absX - this$static.dragStartX, absY - this$static.dragStartY);\n  }\n}\n\nfunction $onMouseUp(this$static){\n  this$static.dragging = false;\n  releaseCapture(($clinit_DOM() , this$static.element_0));\n}\n\nfunction $setText_1(this$static, text_0){\n  $setText_2(this$static.caption, text_0);\n}\n\nfunction $show_0(this$static){\n  !this$static.resizeHandlerRegistration && (this$static.resizeHandlerRegistration = addResizeHandler(new DialogBox$1_0(this$static)));\n  $show(this$static);\n}\n\nfunction DialogBox_0(){\n  DialogBox_1.call(this, new DialogBox$CaptionImpl_0);\n}\n\nfunction DialogBox_1(captionWidget){\n  var mouseHandler, td, rowStyles;\n  PopupPanel_0.call(this);\n  rowStyles = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['dialogTop', 'dialogMiddle', 'dialogBottom']);\n  this.decPanel = new DecoratorPanel_0(rowStyles);\n  $setClassName($getElement(this.decPanel), '');\n  setStylePrimaryName($getParentElement(($clinit_DOM() , $getFirstChildElement(this.element_0))), 'gwt-DecoratedPopupPanel');\n  $setWidget_0(this, this.decPanel);\n  setStyleName($getFirstChildElement(this.element_0), 'popupContent', false);\n  setStyleName(this.decPanel.containerElem, 'dialogContent', true);\n  $removeFromParent_0(captionWidget);\n  this.caption = captionWidget;\n  td = $getCellElement(this.decPanel);\n  $appendChild(td, ($clinit_PotentialElement() , $resolve($getElement(this.caption))));\n  $adopt(this, this.caption);\n  $getParentElement($getFirstChildElement(this.element_0)).className = 'gwt-DialogBox';\n  this.windowWidth = $getClientWidth($doc);\n  this.clientLeft = 0;\n  this.clientTop = 0;\n  mouseHandler = new DialogBox$MouseHandler_0(this);\n  $addDomHandler(this, mouseHandler, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_2));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_6));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_3));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_5));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_4));\n}\n\ndefineSeed(344, 340, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), DialogBox_0);\n_.doAttachChildren = function doAttachChildren_2(){\n  try {\n    $onAttach(this.decPanel);\n  }\n   finally {\n    $onAttach(this.caption);\n  }\n}\n;\n_.doDetachChildren = function doDetachChildren_2(){\n  try {\n    $onDetach(this.decPanel);\n  }\n   finally {\n    $onDetach(this.caption);\n  }\n}\n;\n_.hide = function hide_0(autoClosed){\n  $hide_0(this, autoClosed);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_2(event_0){\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 4:\n    case 8:\n    case 64:\n    case 16:\n    case 32:\n      if (!this.dragging && !$isCaptionEvent(this, event_0)) {\n        return;\n      }\n\n  }\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent_1(event_0){\n  var nativeEvent;\n  nativeEvent = event_0.nativeEvent;\n  !event_0.isCanceled && $getTypeInt(event_0.nativeEvent) == 4 && $isCaptionEvent(this, nativeEvent) && $eventPreventDefault(nativeEvent);\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n}\n;\n_.show = function show_0(){\n  $show_0(this);\n}\n;\n_.clientLeft = 0;\n_.clientTop = 0;\n_.dragStartX = 0;\n_.dragStartY = 0;\n_.dragging = false;\n_.windowWidth = 0;\nfunction DialogBox$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(345, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), DialogBox$1_0);\n_.onResize_0 = function onResize_1(event_0){\n  this.this$0.windowWidth = event_0.width_0;\n}\n;\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element_0);\n}\n\ndefineSeed(349, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $setText_2(this$static, text_0){\n  $setTextOrHtml(this$static.directionalTextHelper, text_0, false);\n}\n\nfunction Label_0(element){\n  LabelBase_0.call(this, element, $equalsIgnoreCase('span', element.tagName));\n}\n\ndefineSeed(348, 349, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $setHTML_0(this$static, html){\n  $setTextOrHtml(this$static.directionalTextHelper, html, true);\n}\n\nfunction HTML_0(){\n  Label_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-HTML');\n}\n\nfunction HTML_1(html){\n  HTML_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n}\n\ndefineSeed(347, 348, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), HTML_0, HTML_1);\nfunction DialogBox$CaptionImpl_0(){\n  HTML_0.call(this);\n  $setClassName(($clinit_DOM() , this.element_0), 'Caption');\n}\n\ndefineSeed(346, 347, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), DialogBox$CaptionImpl_0);\nfunction DialogBox$MouseHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(350, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseOutHandler, Q$MouseOverHandler, Q$MouseUpHandler, Q$EventHandler]), DialogBox$MouseHandler_0);\n_.onMouseDown = function onMouseDown(event_0){\n  $beginDragging(this.this$0, event_0);\n}\n;\n_.onMouseMove = function onMouseMove(event_0){\n  $continueDragging(this.this$0, event_0);\n}\n;\n_.onMouseOut = function onMouseOut(event_0){\n}\n;\n_.onMouseUp = function onMouseUp(event_0){\n  $endDragging(this.this$0, event_0);\n}\n;\nfunction $setTextOrHtml(this$static, content_0, isHtml){\n  isHtml?$setInnerHTML(this$static.element_0, content_0):$setInnerText(this$static.element_0, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element_0, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element_0 = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(351, 1, {}, DirectionalTextHelper_0);\nfunction $doLayout(this$static){\n  var bottom, child, child$iterator, data_0, layer, left, right, top_0;\n  left = 0;\n  top_0 = 0;\n  right = 0;\n  bottom = 0;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this$static.children_0); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_1(child$iterator);\n    data_0 = child.layoutData;\n    layer = data_0.layer;\n    if (data_0.hidden) {\n      layer.visible = false;\n      continue;\n    }\n    switch ($getResolvedDirection(data_0.direction_0).ordinal) {\n      case 0:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setTopHeight(layer, top_0, this$static.unit, data_0.size_0, this$static.unit);\n        top_0 += data_0.size_0;\n        break;\n      case 2:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setBottomHeight(layer, bottom, this$static.unit, data_0.size_0, this$static.unit);\n        bottom += data_0.size_0;\n        break;\n      case 3:\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n        $setLeftWidth(layer, left, this$static.unit, data_0.size_0, this$static.unit);\n        left += data_0.size_0;\n        break;\n      case 1:\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n        $setRightWidth(layer, right, this$static.unit, data_0.size_0, this$static.unit);\n        right += data_0.size_0;\n        break;\n      case 4:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n    }\n    layer.visible = true;\n  }\n  this$static.filledWidth = left + right;\n  this$static.filledHeight = top_0 + bottom;\n}\n\nfunction $forceLayout(this$static){\n  this$static.layoutCmd.canceled = true;\n  $doLayout(this$static);\n  $layout(this$static.layout, 0, null);\n  $onResize(this$static);\n}\n\nfunction $getCenterHeight(this$static){\n  return (($clinit_DOM() , this$static.element_0).clientHeight | 0) / $getUnitSize(this$static.layout, this$static.unit, true) - this$static.filledHeight;\n}\n\nfunction $getCenterWidth(this$static){\n  return (($clinit_DOM() , this$static.element_0).clientWidth | 0) / $getUnitSize(this$static.layout, this$static.unit, false) - this$static.filledWidth;\n}\n\nfunction $getResolvedDirection(direction){\n  if (direction == ($clinit_DockLayoutPanel$Direction() , LINE_START)) {\n    return $clinit_LocaleInfo() , WEST;\n  }\n   else if (direction == LINE_END) {\n    return $clinit_LocaleInfo() , EAST;\n  }\n  return direction;\n}\n\nfunction $insert(this$static, widget, direction, size_0){\n  var children, data_0, layer;\n  $removeFromParent_0(widget);\n  children = this$static.children_0;\n  $insert_1(children, widget, children.size_0);\n  direction == ($clinit_DockLayoutPanel$Direction() , CENTER_0) && (this$static.center = widget);\n  layer = $attachChild(this$static.layout, widget.getElement(), widget);\n  data_0 = new DockLayoutPanel$LayoutData_0(direction, size_0, layer);\n  widget.layoutData = data_0;\n  $setParent(widget, this$static);\n  $schedule_0(this$static.layoutCmd);\n}\n\nfunction $onResize(this$static){\n  var child, child$iterator;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this$static.children_0); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_1(child$iterator);\n    instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_1();\n  }\n}\n\nfunction $remove_3(this$static, w){\n  var data_0, removed;\n  removed = $remove_0(this$static, w);\n  if (removed) {\n    w == this$static.center && (this$static.center = null);\n    data_0 = w.layoutData;\n    $removeChild_0(this$static.layout, data_0.layer);\n  }\n  return removed;\n}\n\nfunction $setWidgetHidden(this$static, widget, hidden){\n  var data_0;\n  data_0 = widget.layoutData;\n  if (data_0.hidden == hidden) {\n    return;\n  }\n  data_0.hidden = hidden;\n  $schedule_0(this$static.layoutCmd);\n}\n\nfunction $setWidgetSize(this$static, widget, size_0){\n  var data_0;\n  data_0 = widget.layoutData;\n  data_0.size_0 = size_0;\n  $schedule_0(this$static.layoutCmd);\n}\n\nfunction DockLayoutPanel_0(unit){\n  ComplexPanel_0.call(this);\n  this.unit = unit;\n  $setElement(this, $doc.createElement('div'));\n  this.layout = new Layout_0(($clinit_DOM() , this.element_0));\n  this.layoutCmd = new DockLayoutPanel$DockAnimateCommand_0(this, this.layout);\n}\n\ndefineSeed(352, 324, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), DockLayoutPanel_0);\n_.insert = function insert(widget, direction, size_0, before){\n  $insert(this, widget, direction, size_0);\n}\n;\n_.onAttach = function onAttach_3(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_2(){\n  $onDetach(this);\n  $removeLayerRefs(this.layout.parentElem);\n}\n;\n_.onResize_1 = function onResize_2(){\n  $onResize(this);\n}\n;\n_.remove_0 = function remove_4(w){\n  return $remove_3(this, w);\n}\n;\n_.filledHeight = 0;\n_.filledWidth = 0;\nfunction $clinit_DockLayoutPanel$Direction(){\n  $clinit_DockLayoutPanel$Direction = nullMethod;\n  NORTH = new DockLayoutPanel$Direction_0('NORTH', 0);\n  EAST = new DockLayoutPanel$Direction_0('EAST', 1);\n  SOUTH = new DockLayoutPanel$Direction_0('SOUTH', 2);\n  WEST = new DockLayoutPanel$Direction_0('WEST', 3);\n  CENTER_0 = new DockLayoutPanel$Direction_0('CENTER', 4);\n  LINE_START = new DockLayoutPanel$Direction_0('LINE_START', 5);\n  LINE_END = new DockLayoutPanel$Direction_0('LINE_END', 6);\n  $VALUES_9 = initValues(_3Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$DockLayoutPanel$Direction, [NORTH, EAST, SOUTH, WEST, CENTER_0, LINE_START, LINE_END]);\n}\n\nfunction DockLayoutPanel$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_10(){\n  $clinit_DockLayoutPanel$Direction();\n  return $VALUES_9;\n}\n\ndefineSeed(353, 54, makeCastMap([Q$DockLayoutPanel$Direction, Q$Serializable, Q$Comparable, Q$Enum]), DockLayoutPanel$Direction_0);\nvar $VALUES_9, CENTER_0, EAST, LINE_END, LINE_START, NORTH, SOUTH, WEST;\nfunction $schedule_0(this$static){\n  this$static.duration = 0;\n  this$static.canceled = false;\n  if (!this$static.scheduled) {\n    this$static.scheduled = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), this$static);\n  }\n}\n\ndefineSeed(355, 1, {});\n_.doBeforeLayout = function doBeforeLayout(){\n}\n;\n_.execute_1 = function execute_9(){\n  this.scheduled = false;\n  if (this.canceled) {\n    return;\n  }\n  this.doBeforeLayout();\n  $layout(this.layout, this.duration, new LayoutCommand$1_0);\n}\n;\n_.canceled = false;\n_.duration = 0;\n_.scheduled = false;\nfunction DockLayoutPanel$DockAnimateCommand_0(this$0, layout){\n  this.this$0 = this$0;\n  this.layout = layout;\n}\n\ndefineSeed(354, 355, {}, DockLayoutPanel$DockAnimateCommand_0);\n_.doBeforeLayout = function doBeforeLayout_0(){\n  $doLayout(this.this$0);\n}\n;\nfunction DockLayoutPanel$LayoutData_0(direction, size_0, layer){\n  this.direction_0 = direction;\n  this.size_0 = size_0;\n  this.layer = layer;\n}\n\ndefineSeed(356, 1, {}, DockLayoutPanel$LayoutData_0);\n_.hidden = false;\n_.size_0 = 0;\nfunction $setName(this$static){\n  ($clinit_DOM() , this$static.element_0).name = 'uploadFormElement';\n}\n\nfunction FileUpload_0(){\n  FileUpload_1.call(this, $createInputElement($doc, 'file'));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-FileUpload');\n}\n\nfunction FileUpload_1(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n}\n\ndefineSeed(357, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), FileUpload_0);\n_.onBrowserEvent = function onBrowserEvent_3(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\nfunction $addCells(tbody, row, num){\n  var i, rowElem, tdElement;\n  rowElem = tbody.children[row];\n  for (i = 0; i < num; i++) {\n    tdElement = $doc.createElement('td');\n    rowElem.appendChild(tdElement);\n  }\n}\n\nfunction $checkCellBounds(this$static, row, column){\n  var cellSize;\n  $checkRowBounds(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Column ' + column + ' must be non-negative: ' + column);\n  }\n  cellSize = this$static.numColumns;\n  if (cellSize <= column) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = this$static.getRowCount();\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $cleanCell(this$static, row, column, clearInnerHTML){\n  var td;\n  td = $getRawElement(this$static.cellFormatter, row, column);\n  $internalClearCell(this$static, ($clinit_DOM() , td), clearInnerHTML);\n  return td;\n}\n\nfunction $getDOMCellCount(tableBody, row){\n  var rowElement;\n  rowElement = tableBody.children[row];\n  return rowElement.children.length;\n}\n\nfunction $getWidget(this$static, column){\n  var e, child;\n  $checkCellBounds(this$static, 0, column);\n  return e = $getRawElement(this$static.cellFormatter, 0, column) , child = ($clinit_DOM() , $getFirstChildElement(e)) , !child?null:dynamicCast($get_1(this$static.widgetMap, child), Q$Widget);\n}\n\nfunction $internalClearCell(this$static, td, clearInnerHTML){\n  var maybeChild, widget;\n  maybeChild = ($clinit_DOM() , $getFirstChildElement(td));\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get_1(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_4(this$static, widget);\n    return true;\n  }\n   else {\n    clearInnerHTML && $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $remove_4(this$static, widget){\n  var elem;\n  if (widget.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(widget, null);\n  }\n   finally {\n    elem = widget.getElement();\n    $removeChild(($clinit_DOM() , $getParentElement(elem)), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $removeRow(this$static, row){\n  var column, columnCount;\n  columnCount = this$static.numColumns;\n  for (column = 0; column < columnCount; ++column) {\n    $cleanCell(this$static, row, column, false);\n  }\n  $removeChild(this$static.bodyElem, $getRow(this$static.bodyElem, row));\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setWidget_2(this$static, row, column, widget){\n  var td;\n  this$static.prepareCell(row, column);\n  td = $cleanCell(this$static, row, column, true);\n  if (widget) {\n    $removeFromParent_0(widget);\n    $put_0(this$static.widgetMap, widget);\n    appendChild(td, widget.getElement());\n    $setParent(widget, this$static);\n  }\n}\n\nfunction HTMLTable_0(){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = ($clinit_DOM() , $doc.createElement('table'));\n  this.bodyElem = $doc.createElement('tbody');\n  appendChild(this.tableElem, this.bodyElem);\n  $setElement(this, this.tableElem);\n}\n\ndefineSeed(359, 325, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_4(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove_0 = function remove_5(widget){\n  return $remove_4(this, widget);\n}\n;\nfunction $prepareRow(this$static, row){\n  var i, rowCount, tr;\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a row with a negative index: ' + row);\n  }\n  rowCount = ($clinit_DOM() , this$static.bodyElem).children.length;\n  for (i = rowCount; i <= row; i++) {\n    i != this$static.bodyElem.children.length && $checkRowBounds(this$static, i);\n    tr = $doc.createElement('tr');\n    insertChild(this$static.bodyElem, tr, i);\n  }\n}\n\nfunction FlexTable_0(){\n  HTMLTable_0.call(this);\n  $setCellFormatter(this, new FlexTable$FlexCellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n}\n\ndefineSeed(358, 359, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlexTable_0);\n_.getRowCount = function getRowCount(){\n  return ($clinit_DOM() , this.bodyElem).children.length;\n}\n;\n_.prepareCell = function prepareCell(row, column){\n  var cellCount, required;\n  $prepareRow(this, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a column with a negative index: ' + column);\n  }\n  cellCount = ($checkRowBounds(this, row) , $getDOMCellCount(($clinit_DOM() , this.bodyElem), row));\n  required = column + 1 - cellCount;\n  required > 0 && $addCells(this.bodyElem, row, required);\n}\n;\nfunction $getCellElement_0(tbody, row, col){\n  return $getCells(tbody.children[row])[col];\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement_0(this$static.this$0.bodyElem, row, column);\n}\n\nfunction HTMLTable$CellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(361, 1, {}, HTMLTable$CellFormatter_0);\nfunction FlexTable$FlexCellFormatter_0(this$0){\n  HTMLTable$CellFormatter_0.call(this, this$0);\n}\n\ndefineSeed(360, 361, {}, FlexTable$FlexCellFormatter_0);\nfunction FlowPanel_0(){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\ndefineSeed(362, 324, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlowPanel_0);\nfunction $fireSubmitEvent(this$static){\n  var event_0;\n  event_0 = new FormPanel$SubmitEvent_0;\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n  return true;\n}\n\nfunction $setEncoding(this$static){\n  $setEncoding_0(($clinit_DOM() , this$static.element_0), 'multipart/form-data');\n}\n\nfunction $setMethod(this$static){\n  ($clinit_DOM() , this$static.element_0).method = 'post';\n}\n\nfunction $setTarget_0(this$static, target){\n  $setTarget(($clinit_DOM() , this$static.element_0), target);\n}\n\nfunction $submit(this$static){\n  if (!$fireSubmitEvent(this$static)) {\n    return;\n  }\n  $submit_0(($clinit_DOM() , this$static.element_0), this$static.synthesizedFrame);\n}\n\nfunction FormPanel_0(){\n  FormPanel_1.call(this, $doc.createElement('form'));\n}\n\nfunction FormPanel_1(element){\n  SimplePanel_1.call(this, element);\n  this.frameName = 'FormPanel_' + $moduleName + '_' + ++formId;\n  $setTarget_0(this, this.frameName);\n  this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element_0), 32768 | (this.element_0.__eventBits || 0)):(this.eventsToSink |= 32768);\n}\n\ndefineSeed(363, 342, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FormPanel_0);\n_.onAttach = function onAttach_4(){\n  var dummy;\n  $onAttach(this);\n  if (this.frameName != null) {\n    dummy = $doc.createElement('div');\n    $setInnerHTML(dummy, $get_2(this.frameName).html);\n    this.synthesizedFrame = $getFirstChildElement(dummy);\n    $appendChild($doc.body, this.synthesizedFrame);\n  }\n  $hookEvents(this.synthesizedFrame, ($clinit_DOM() , this.element_0), this);\n}\n;\n_.onDetach = function onDetach_3(){\n  $onDetach(this);\n  $unhookEvents(this.synthesizedFrame, ($clinit_DOM() , this.element_0));\n  if (this.synthesizedFrame) {\n    $removeChild($doc.body, this.synthesizedFrame);\n    this.synthesizedFrame = null;\n  }\n}\n;\n_.onFormSubmit = function onFormSubmit(){\n  return $fireSubmitEvent(this);\n}\n;\n_.onFrameLoad = function onFrameLoad(){\n  $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new FormPanel$1_0(this));\n}\n;\nvar formId = 0;\nfunction FormPanel$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(364, 1, {}, FormPanel$1_0);\n_.execute_1 = function execute_10(){\n  $fireEvent_0(this.this$0, new FormPanel$SubmitCompleteEvent_0($getContents(this.this$0.synthesizedFrame)));\n}\n;\nfunction FormPanel$SubmitCompleteEvent_0(){\n}\n\ndefineSeed(365, 184, {}, FormPanel$SubmitCompleteEvent_0);\n_.dispatch = function dispatch_18(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_19(){\n  return !TYPE_18 && (TYPE_18 = new GwtEvent$Type_0) , TYPE_18;\n}\n;\nvar TYPE_18;\nfunction FormPanel$SubmitEvent_0(){\n}\n\ndefineSeed(366, 184, {}, FormPanel$SubmitEvent_0);\n_.dispatch = function dispatch_19(handler){\n  $onSubmit(dynamicCast(handler, Q$FormPanel$SubmitHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_20(){\n  return !TYPE_19 && (TYPE_19 = new GwtEvent$Type_0) , TYPE_19;\n}\n;\nvar TYPE_19;\nfunction $get_2(arg0){\n  var sb;\n  sb = new StringBuilder_0;\n  $append_1(sb.impl, \"<iframe src=\\\"javascript:''\\\" name='\");\n  $append_5(sb, htmlEscape(arg0));\n  $append_1(sb.impl, \"' style='position:absolute;width:0;height:0;border:0'>\");\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string);\n}\n\nfunction $prepareCell(this$static, row, column){\n  $prepareRow_0(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a column with a negative index: ' + column);\n  }\n  if (column >= this$static.numColumns) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $prepareRow_0(this$static, row){\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a row with a negative index: ' + row);\n  }\n  if (row >= this$static.numRows) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + this$static.numRows);\n  }\n}\n\nfunction $removeRow_0(this$static, row){\n  $removeRow(this$static, row);\n  --this$static.numRows;\n}\n\nfunction $resizeColumns(this$static, columns){\n  var i, j, td, tr, tr_0, td_0, td_1;\n  if (this$static.numColumns == columns) {\n    return;\n  }\n  if (columns < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot set number of columns to ' + columns);\n  }\n  if (this$static.numColumns > columns) {\n    for (i = 0; i < this$static.numRows; i++) {\n      for (j = this$static.numColumns - 1; j >= columns; j--) {\n        $checkCellBounds(this$static, i, j);\n        td = $cleanCell(this$static, i, j, false);\n        tr = $getRow(this$static.bodyElem, i);\n        tr.removeChild(td);\n      }\n    }\n  }\n   else {\n    for (i = 0; i < this$static.numRows; i++) {\n      for (j = this$static.numColumns; j < columns; j++) {\n        tr_0 = $getRow(this$static.bodyElem, i);\n        td_0 = (td_1 = ($clinit_DOM() , $doc.createElement('td')) , $setInnerHTML(td_1, '&nbsp;') , $clinit_DOM() , td_1);\n        $insertChild(tr_0, ($clinit_PotentialElement() , $resolve(td_0)), j);\n      }\n    }\n  }\n  this$static.numColumns = columns;\n  $resizeColumnGroup(this$static.columnFormatter, columns, false);\n}\n\nfunction $resizeRows(this$static, rows_0){\n  if (this$static.numRows == rows_0) {\n    return;\n  }\n  if (rows_0 < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot set number of rows to ' + rows_0);\n  }\n  if (this$static.numRows < rows_0) {\n    addRows(($clinit_DOM() , this$static.bodyElem), rows_0 - this$static.numRows, this$static.numColumns);\n    this$static.numRows = rows_0;\n  }\n   else {\n    while (this$static.numRows > rows_0) {\n      $removeRow_0(this$static, this$static.numRows - 1);\n    }\n  }\n}\n\nfunction Grid_0(rows_0, columns){\n  HTMLTable_0.call(this);\n  $setCellFormatter(this, new HTMLTable$CellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n  $resizeColumns(this, columns);\n  $resizeRows(this, rows_0);\n}\n\nfunction addRows(table, rows_0, columns){\n  var td = $doc.createElement('td');\n  td.innerHTML = '&nbsp;';\n  var row = $doc.createElement('tr');\n  for (var cellNum = 0; cellNum < columns; cellNum++) {\n    var cell = td.cloneNode(true);\n    row.appendChild(cell);\n  }\n  table.appendChild(row);\n  for (var rowNum = 1; rowNum < rows_0; rowNum++) {\n    table.appendChild(row.cloneNode(true));\n  }\n}\n\ndefineSeed(368, 359, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$Grid, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), Grid_0);\n_.getRowCount = function getRowCount_0(){\n  return this.numRows;\n}\n;\n_.prepareCell = function prepareCell_0(row, column){\n  $prepareCell(this, row, column);\n}\n;\n_.numColumns = 0;\n_.numRows = 0;\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size_0) {\n    if ($get_5(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get_5(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  this$static.lastIndex_0 = this$static.nextIndex;\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\ndefineSeed(369, 1, {}, HTMLTable$1_0);\n_.hasNext = function hasNext(){\n  return this.nextIndex < this.widgetList.size_0;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.remove_1 = function remove_6(){\n  var w;\n  if (this.lastIndex_0 < 0) {\n    throw new IllegalStateException_0;\n  }\n  w = dynamicCast($get_5(this.widgetList, this.lastIndex_0), Q$Widget);\n  $removeFromParent_0(w);\n  this.lastIndex_0 = -1;\n}\n;\n_.lastIndex_0 = -1;\n_.nextIndex = -1;\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = ($clinit_DOM() , $doc.createElement('colgroup'));\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);\n    appendChild(this$static.columnGroup, $doc.createElement('col'));\n  }\n}\n\nfunction $resizeColumnGroup(this$static, columns, growOnly){\n  var i, num;\n  columns = columns > 1?columns:1;\n  num = this$static.columnGroup.childNodes.length;\n  if (num < columns) {\n    for (i = num; i < columns; i++) {\n      $appendChild(this$static.columnGroup, $doc.createElement('col'));\n    }\n  }\n   else if (!growOnly && num > columns) {\n    for (i = num; i > columns; i--) {\n      $removeChild(this$static.columnGroup, this$static.columnGroup.lastChild);\n    }\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(370, 1, {}, HTMLTable$ColumnFormatter_0);\nfunction $getCells(row){\n  return row.children;\n}\n\nfunction $getRow(tbody, row){\n  return $getRow_0(($clinit_DOM() , tbody), row);\n}\n\nfunction $getRow_0(tbody, row){\n  return $clinit_DOM() , tbody.children[row];\n}\n\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , 'center'));\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ($clinit_LocaleInfo() , ALIGN_LEFT);\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_START, ALIGN_RIGHT;\ndefineSeed(373, 1, {});\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\ndefineSeed(374, 373, {}, HasHorizontalAlignment$HorizontalAlignmentConstant_0);\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_MIDDLE, ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\ndefineSeed(375, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);\nfunction $add_1(this$static, w){\n  var td, td_0;\n  td = (td_0 = ($clinit_DOM() , $doc.createElement('td')) , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(this$static.tableRow, ($clinit_PotentialElement() , $resolve(td)));\n  $add(this$static, w, td);\n}\n\nfunction $setHorizontalAlignment(this$static, align_0){\n  this$static.horzAlign = align_0;\n}\n\nfunction $setVerticalAlignment(this$static, align_0){\n  this$static.vertAlign = align_0;\n}\n\nfunction HorizontalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.tableRow = ($clinit_DOM() , $doc.createElement('tr'));\n  $appendChild(this.body_0, ($clinit_PotentialElement() , $resolve(this.tableRow)));\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(376, 335, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HorizontalPanel_0);\n_.remove_0 = function remove_7(w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.getElement()));\n  removed = $remove_0(this, w);\n  removed && $removeChild(this.tableRow, td);\n  return removed;\n}\n;\nfunction LayoutCommand$1_0(){\n}\n\ndefineSeed(377, 1, {}, LayoutCommand$1_0);\nfunction $addItem(this$static, item_0){\n  $insertItem_0(this$static, item_0, item_0, -1);\n}\n\nfunction $checkIndex(this$static, index_0){\n  if (index_0 < 0 || index_0 >= ($clinit_DOM() , this$static.element_0).options.length) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $insertItem(this$static, item_0){\n  $insertItem_0(this$static, item_0, item_0, -1);\n}\n\nfunction $insertItem_0(this$static, item_0, value_0, index_0){\n  var before, itemCount, option, select;\n  select = ($clinit_DOM() , this$static.element_0);\n  option = $doc.createElement('option');\n  $setText(option, item_0);\n  $removeAttribute(option, 'bidiwrapped');\n  option.value = value_0;\n  itemCount = select.options.length;\n  (index_0 < 0 || index_0 > itemCount) && (index_0 = itemCount);\n  if (index_0 == itemCount) {\n    $selectAdd(select, option, null);\n  }\n   else {\n    before = select.options[index_0];\n    $selectAdd(select, option, before);\n  }\n}\n\nfunction $setItemText(this$static, index_0, text_0){\n  $checkIndex(this$static, index_0);\n  if (text_0 == null) {\n    throw new NullPointerException_1('Cannot set an option to have null text');\n  }\n  $setOptionText(($clinit_DOM() , this$static.element_0).options[index_0], text_0);\n}\n\nfunction $setOptionText(option, text_0){\n  $setText(option, text_0);\n  $removeAttribute(option, 'bidiwrapped');\n}\n\nfunction $setSelectedIndex_0(this$static, index_0){\n  $setSelectedIndex(($clinit_DOM() , this$static.element_0), index_0);\n}\n\nfunction $setVisibleItemCount(this$static, visibleItems){\n  $setSize(($clinit_DOM() , this$static.element_0), visibleItems);\n}\n\nfunction ListBox_0(){\n  FocusWidget_0.call(this, $doc.createElement('select'));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-ListBox');\n}\n\ndefineSeed(378, 329, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ListBox_0);\nfunction $onResize_0(this$static){\n  var height, style, width_0, winHeight, winWidth;\n  style = this$static.this$0.glass.style;\n  winWidth = $getClientWidth($doc);\n  winHeight = $getClientHeight($doc);\n  $setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  style['width'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['height'] = '0px';\n  width_0 = $getScrollWidth($doc);\n  height = $getScrollHeight($doc);\n  style['width'] = (width_0 > winWidth?width_0:winWidth) + 'px';\n  style['height'] = (height > winHeight?height:winHeight) + 'px';\n  $setPropertyImpl(style, 'display', 'block');\n}\n\nfunction PopupPanel$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(379, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), PopupPanel$1_0);\n_.onResize_0 = function onResize_3(event_0){\n  $onResize_0(this);\n}\n;\nfunction PopupPanel$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(380, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), PopupPanel$3_0);\n_.onPreviewNativeEvent = function onPreviewNativeEvent_2(event_0){\n  $previewNativeEvent(this.this$0, event_0);\n}\n;\nfunction PopupPanel$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(381, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), PopupPanel$4_0);\nfunction $maybeShowGlass(this$static){\n  if (this$static.showing) {\n    if (this$static.curPanel.isGlassEnabled) {\n      $appendChild($doc.body, this$static.curPanel.glass);\n      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);\n      $onResize_0(this$static.curPanel.glassResizer);\n      this$static.glassShowing = true;\n    }\n  }\n   else if (this$static.glassShowing) {\n    $removeChild($doc.body, this$static.curPanel.glass);\n    $removeHandler(this$static.resizeRegistration.real);\n    this$static.resizeRegistration = null;\n    this$static.glassShowing = false;\n  }\n}\n\nfunction $onComplete(this$static){\n  if (!this$static.showing) {\n    $maybeShowGlass(this$static);\n    this$static.isUnloading || $remove_1(($clinit_RootPanel() , get_0(null)), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n  $setClip($getElement(this$static.curPanel), 'rect(auto, auto, auto, auto)');\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onInstantaneousRun(this$static){\n  $maybeShowGlass(this$static);\n  if (this$static.showing) {\n    $setPropertyImpl($getElement(this$static.curPanel).style, 'position', 'absolute');\n    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n    $add_0(($clinit_RootPanel() , get_0(null)), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n   else {\n    this$static.isUnloading || $remove_1(($clinit_RootPanel() , get_0(null)), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onUpdate(this$static, progress){\n  var bottom, height, left, right, top_0, width_0;\n  this$static.showing || (progress = 1 - progress);\n  top_0 = 0;\n  left = 0;\n  right = 0;\n  bottom = 0;\n  height = round_int(progress * this$static.offsetHeight_0);\n  width_0 = round_int(progress * this$static.offsetWidth_0);\n  switch (0) {\n    case 2:\n    case 0:\n      top_0 = this$static.offsetHeight_0 - height >> 1;\n      left = this$static.offsetWidth_0 - width_0 >> 1;\n      right = left + width_0;\n      bottom = top_0 + height;\n  }\n  $setClip($getElement(this$static.curPanel), 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)');\n}\n\nfunction $setState(this$static, showing, isUnloading){\n  var animate;\n  this$static.isUnloading = isUnloading;\n  $cancel(this$static);\n  if (this$static.showTimer) {\n    $cancel_0(this$static.showTimer);\n    this$static.showTimer = null;\n    $onComplete(this$static);\n  }\n  this$static.curPanel.showing = showing;\n  $updateHandlers(this$static.curPanel);\n  animate = !isUnloading && this$static.curPanel.isAnimationEnabled;\n  this$static.showing = showing;\n  if (animate) {\n    if (showing) {\n      $maybeShowGlass(this$static);\n      $setPropertyImpl($getElement(this$static.curPanel).style, 'position', 'absolute');\n      this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n      $setClip($getElement(this$static.curPanel), 'rect(0px, 0px, 0px, 0px)');\n      $add_0(($clinit_RootPanel() , get_0(null)), this$static.curPanel);\n      $getElement(this$static.curPanel);\n      this$static.showTimer = new PopupPanel$ResizeAnimation$1_0(this$static);\n      $schedule(this$static.showTimer, 1);\n    }\n     else {\n      $run(this$static, 200, currentTimeMillis());\n    }\n  }\n   else {\n    $onInstantaneousRun(this$static);\n  }\n}\n\nfunction PopupPanel$ResizeAnimation_0(panel){\n  Animation_0.call(this);\n  this.curPanel = null;\n  this.offsetWidth_0 = -1;\n  this.curPanel = panel;\n}\n\ndefineSeed(382, 3, {}, PopupPanel$ResizeAnimation_0);\n_.onComplete = function onComplete_1(){\n  $onComplete(this);\n}\n;\n_.onStart = function onStart_0(){\n  this.offsetHeight_0 = $getPropertyInt($getElement(this.curPanel), 'offsetHeight');\n  this.offsetWidth_0 = $getPropertyInt($getElement(this.curPanel), 'offsetWidth');\n  $setPropertyImpl($getElement(this.curPanel).style, 'overflow', 'hidden');\n  $onUpdate(this, (1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.onUpdate = function onUpdate_0(progress){\n  $onUpdate(this, progress);\n}\n;\n_.glassShowing = false;\n_.isUnloading = false;\n_.offsetHeight_0 = 0;\n_.offsetWidth_0 = 0;\n_.showing = false;\nfunction PopupPanel$ResizeAnimation$1_0(this$1){\n  this.this$1 = this$1;\n  Timer_0.call(this);\n}\n\ndefineSeed(383, 10, {}, PopupPanel$ResizeAnimation$1_0);\n_.run = function run_0(){\n  this.this$1.showTimer = null;\n  $run(this.this$1, 200, currentTimeMillis());\n}\n;\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_14(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_0(id_0){\n  $clinit_RootPanel();\n  var elem, rp;\n  rp = dynamicCast($get_4(rootPanels, id_0), Q$RootPanel);\n  elem = null;\n  if (id_0 != null) {\n    if (!(elem = $getElementById($doc, id_0))) {\n      return null;\n    }\n  }\n  if (rp) {\n    if (!elem || ($clinit_DOM() , rp.element_0) == elem) {\n      return rp;\n    }\n  }\n  if (rootPanels.size_0 == 0) {\n    addCloseHandler(new RootPanel$3_0);\n    $clinit_LocaleInfo();\n  }\n  !elem?(rp = new RootPanel$DefaultRootPanel_0):(rp = new RootPanel_0(elem));\n  $put_1(rootPanels, id_0, rp);\n  $add_6(widgetsToDetach, rp);\n  return rp;\n}\n\ndefineSeed(385, 323, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel_0);\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(386, 1, {}, RootPanel$1_0);\n_.execute_2 = function execute_11(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(387, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, $doc.body);\n}\n\ndefineSeed(388, 385, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $getMaximumHorizontalScrollPosition(scrollable){\n  return $isRtl(scrollable)?0:($getSubPixelScrollWidth(scrollable) | 0) - (scrollable.clientWidth | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition(scrollable){\n  return $isRtl(scrollable)?(scrollable.clientWidth | 0) - ($getSubPixelScrollWidth(scrollable) | 0):0;\n}\n\ndefineSeed(389, 1, {});\nvar impl_3;\nfunction $initialize(scrollable, container){\n  scrollable.__lastScrollTop = scrollable.__lastScrollLeft = 0;\n  scrollable.attachEvent('onscroll', scrollHandler);\n  scrollable.attachEvent('onresize', resizeHandler);\n  container.attachEvent('onresize', resizeHandler);\n  container.__isScrollContainer = true;\n}\n\nfunction $isRtl(scrollable){\n  return scrollable.currentStyle.direction == 'rtl';\n}\n\nfunction ScrollImpl$ScrollImplTrident_0(){\n  initStaticHandlers();\n}\n\nfunction initStaticHandlers(){\n  scrollHandler = function(){\n    var scrollableElem = $wnd.event.srcElement;\n    scrollableElem.__lastScrollTop = scrollableElem.scrollTop;\n    scrollableElem.__lastScrollLeft = scrollableElem.scrollLeft;\n  }\n  ;\n  resizeHandler = function(){\n    var scrollableElem = $wnd.event.srcElement;\n    scrollableElem.__isScrollContainer && (scrollableElem = scrollableElem.parentNode);\n    setTimeout($entry(function(){\n      if (scrollableElem.scrollTop != scrollableElem.__lastScrollTop || scrollableElem.scrollLeft != scrollableElem.__lastScrollLeft) {\n        scrollableElem.__lastScrollTop = scrollableElem.scrollTop;\n        scrollableElem.__lastScrollLeft = scrollableElem.scrollLeft;\n        triggerScrollEvent(scrollableElem);\n      }\n    }\n    ), 1);\n  }\n  ;\n}\n\nfunction triggerScrollEvent(elem){\n  var evt;\n  $dispatchEvent(elem, (evt = $doc.createEvent('HTMLEvents') , evt.initEvent('scroll', false, false) , evt));\n}\n\ndefineSeed(390, 389, {}, ScrollImpl$ScrollImplTrident_0);\nvar resizeHandler, scrollHandler;\nfunction $getHorizontalScrollPosition(this$static){\n  return $getScrollLeft(($clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumHorizontalScrollPosition_0(this$static){\n  return $getMaximumHorizontalScrollPosition((!impl_3 && (impl_3 = new ScrollImpl$ScrollImplTrident_0) , $clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumVerticalScrollPosition(this$static){\n  return ((($clinit_DOM() , this$static.scrollableElem).scrollHeight || 0) | 0) - (this$static.scrollableElem.clientHeight | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition_0(this$static){\n  return $getMinimumHorizontalScrollPosition((!impl_3 && (impl_3 = new ScrollImpl$ScrollImplTrident_0) , $clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getVerticalScrollPosition(this$static){\n  return (($clinit_DOM() , this$static.scrollableElem).scrollTop || 0) | 0;\n}\n\nfunction $setHorizontalScrollPosition(this$static, position){\n  $setScrollLeft(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction $setTouchScrollingDisabled(this$static){\n  var scroller, ua;\n  if (this$static.touchScroller) {\n    return false;\n  }\n  this$static.touchScroller = (scroller = (!isSupported && (isSupported = ($clinit_Boolean() , !impl_0 && (impl_0 = new TouchEvent$TouchSupportDetector_0) , impl_0.isSupported && !(ua = navigator.userAgent.toLowerCase() , /android ([3-9]+)\\.([0-9]+)/.exec(ua) != null)?TRUE_1:FALSE_1)) , isSupported.value_0?new TouchScroller_0:null) , !!scroller && $setTargetWidget(scroller, this$static) , scroller);\n  return !this$static.touchScroller;\n}\n\nfunction $setVerticalScrollPosition(this$static, position){\n  $setScrollTop(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction ScrollPanel_0(child){\n  SimplePanel_0.call(this);\n  this.scrollableElem = ($clinit_DOM() , this.element_0);\n  this.containerElem = $doc.createElement('div');\n  $appendChild(this.scrollableElem, this.containerElem);\n  this.scrollableElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n  this.scrollableElem.style['position'] = ($clinit_Style$Position() , 'relative');\n  this.containerElem.style['position'] = 'relative';\n  $setPropertyImpl(this.scrollableElem.style, 'zoom', '1');\n  $setPropertyImpl(this.containerElem.style, 'zoom', '1');\n  $setTouchScrollingDisabled(this);\n  !impl_3 && (impl_3 = new ScrollImpl$ScrollImplTrident_0);\n  $initialize(this.scrollableElem, this.containerElem);\n  $setWidget(this, child);\n}\n\ndefineSeed(391, 342, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), ScrollPanel_0);\n_.getContainerElement = function getContainerElement_2(){\n  return $clinit_DOM() , this.containerElem;\n}\n;\n_.onAttach = function onAttach_5(){\n  $onAttach(this);\n  setEventListener(($clinit_DOM() , this.scrollableElem), this);\n}\n;\n_.onDetach = function onDetach_4(){\n  setEventListener(($clinit_DOM() , this.scrollableElem), null);\n  $onDetach(this);\n}\n;\n_.onResize_1 = function onResize_4(){\n  var child;\n  child = this.widget;\n  !!child && instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_1();\n}\n;\n_.setHeight_0 = function setHeight_1(height){\n  ($clinit_DOM() , this.element_0).style['height'] = height;\n}\n;\n_.setWidth_0 = function setWidth_1(width_0){\n  ($clinit_DOM() , this.element_0).style['width'] = width_0;\n}\n;\nfunction $next_0(this$static){\n  if (!this$static.hasElement || !this$static.this$0.widget) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.hasElement = false;\n  return this$static.returned = this$static.this$0.widget;\n}\n\nfunction SimplePanel$1_0(this$0){\n  this.this$0 = this$0;\n  this.hasElement = !!this.this$0.widget;\n}\n\ndefineSeed(392, 1, {}, SimplePanel$1_0);\n_.hasNext = function hasNext_0(){\n  return this.hasElement;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0(this);\n}\n;\n_.remove_1 = function remove_8(){\n  !!this.returned && this.this$0.remove_0(this.returned);\n}\n;\n_.hasElement = false;\n_.returned = null;\nfunction $getAssociatedSplitter(this$static, child){\n  var idx, splitter;\n  idx = $indexOf(this$static.children_0, child);\n  if (idx > -1 && idx < this$static.children_0.size_0 - 1) {\n    splitter = $get_3(this$static.children_0, idx + 1);\n    return dynamicCast(splitter, Q$SplitLayoutPanel$Splitter);\n  }\n  return null;\n}\n\nfunction $insert_0(this$static, child, direction, size_0, before){\n  $insert(this$static, child, direction, size_0);\n  direction != ($clinit_DockLayoutPanel$Direction() , CENTER_0) && $insertSplitter(this$static, child, before);\n}\n\nfunction $insertSplitter(this$static, widget, before){\n  var layout, splitter;\n  layout = widget.layoutData;\n  splitter = null;\n  switch ($getResolvedDirection(layout.direction_0).ordinal) {\n    case 3:\n      splitter = new SplitLayoutPanel$HSplitter_0(this$static, widget, false);\n      break;\n    case 1:\n      splitter = new SplitLayoutPanel$HSplitter_0(this$static, widget, true);\n      break;\n    case 0:\n      splitter = new SplitLayoutPanel$VSplitter_0(this$static, widget, false);\n      break;\n    case 2:\n      splitter = new SplitLayoutPanel$VSplitter_0(this$static, widget, true);\n  }\n  $insert(this$static, splitter, layout.direction_0, this$static.splitterSize);\n}\n\nfunction $remove_5(this$static, child){\n  var idx;\n  idx = $indexOf(this$static.children_0, child);\n  if ($remove_3(this$static, child)) {\n    idx < this$static.children_0.size_0 && $remove_3(this$static, $get_3(this$static.children_0, idx));\n    return true;\n  }\n  return false;\n}\n\nfunction $setWidgetHidden_0(this$static, widget, hidden){\n  var splitter;\n  $setWidgetHidden(this$static, widget, hidden);\n  splitter = $getAssociatedSplitter(this$static, widget);\n  !!splitter && $setWidgetHidden(this$static, splitter, hidden);\n}\n\nfunction SplitLayoutPanel_0(){\n  SplitLayoutPanel_1.call(this);\n}\n\nfunction SplitLayoutPanel_1(){\n  DockLayoutPanel_0.call(this, ($clinit_Style$Unit() , PX));\n  this.splitterSize = 8;\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-SplitLayoutPanel');\n  if (!glassElem) {\n    glassElem = $doc.createElement('div');\n    $setPropertyImpl(glassElem.style, 'position', ($clinit_Style$Position() , 'absolute'));\n    glassElem.style['top'] = '0px';\n    glassElem.style['left'] = '0px';\n    glassElem.style['margin'] = '0px';\n    glassElem.style['padding'] = '0px';\n    glassElem.style['borderWidth'] = '0px';\n    $setPropertyImpl(glassElem.style, 'background', 'white');\n    glassElem.style.opacity = 0;\n  }\n}\n\ndefineSeed(393, 352, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), SplitLayoutPanel_0);\n_.insert = function insert_0(child, direction, size_0, before){\n  $insert_0(this, child, direction, size_0, before);\n}\n;\n_.remove_0 = function remove_9(child){\n  return $remove_5(this, child);\n}\n;\n_.splitterSize = 0;\nvar glassElem = null;\nfunction $getMaxSize(this$static){\n  var newCenterSize;\n  newCenterSize = this$static.getCenterSize();\n  if (this$static.syncedCenterSize != newCenterSize) {\n    this$static.syncedCenterSize = newCenterSize;\n    this$static.centerSize = newCenterSize;\n  }\n  return max_1(this$static.target_0.layoutData.size_0 + this$static.centerSize, 0);\n}\n\nfunction $setAssociatedWidgetSize(this$static, size_0){\n  var layout, maxSize;\n  maxSize = $getMaxSize(this$static);\n  size_0 > maxSize && (size_0 = maxSize);\n  size_0 < this$static.minSize && (size_0 = this$static.minSize);\n  layout = this$static.target_0.layoutData;\n  if (size_0 == layout.size_0) {\n    return;\n  }\n  this$static.centerSize += layout.size_0 - size_0;\n  layout.size_0 = size_0;\n  if (!this$static.layoutCommand) {\n    this$static.layoutCommand = new SplitLayoutPanel$Splitter$1_0(this$static);\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static.layoutCommand);\n  }\n}\n\nfunction SplitLayoutPanel$Splitter_0(this$0, target, reverse){\n  this.this$0_0 = this$0;\n  this.target_0 = target;\n  this.reverse = reverse;\n  $setElement(this, $doc.createElement('div'));\n  this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element_0), 78 | (this.element_0.__eventBits || 0)):(this.eventsToSink |= 78);\n}\n\ndefineSeed(395, 326, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SplitLayoutPanel$Splitter, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_4(event_0){\n  var height, size_0, width_0;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 4:\n      this.mouseDown = true;\n      width_0 = max_2($getClientWidth($doc), $getScrollWidth($doc));\n      height = max_2($getClientHeight($doc), $getScrollHeight($doc));\n      glassElem.style['height'] = height + ($clinit_Style$Unit() , 'px');\n      glassElem.style['width'] = width_0 + 'px';\n      $appendChild($doc.body, glassElem);\n      this.offset = this.getEventPosition(event_0) - this.getAbsolutePosition();\n      setCapture(this.element_0);\n      $eventPreventDefault(event_0);\n      break;\n    case 8:\n      this.mouseDown = false;\n      $removeFromParent(glassElem);\n      releaseCapture(this.element_0);\n      $eventPreventDefault(event_0);\n      break;\n    case 64:\n      if (this.mouseDown) {\n        this.reverse?(size_0 = this.getTargetPosition() + this.getTargetSize() - this.this$0_0.splitterSize - this.getEventPosition(event_0) + this.offset):(size_0 = this.getEventPosition(event_0) - this.getTargetPosition() - this.offset);\n        this.target_0.layoutData.hidden = false;\n        $setAssociatedWidgetSize(this, size_0);\n        $eventPreventDefault(event_0);\n      }\n\n  }\n}\n;\n_.centerSize = 0;\n_.minSize = 0;\n_.mouseDown = false;\n_.offset = 0;\n_.reverse = false;\n_.syncedCenterSize = 0;\nfunction SplitLayoutPanel$HSplitter_0(this$0, target, reverse){\n  this.this$0 = this$0;\n  SplitLayoutPanel$Splitter_0.call(this, this$0, target, reverse);\n  ($clinit_DOM() , this.element_0).style['width'] = this$0.splitterSize + ($clinit_Style$Unit() , 'px');\n  $setClassName(this.element_0, 'gwt-SplitLayoutPanel-HDragger');\n}\n\ndefineSeed(394, 395, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SplitLayoutPanel$Splitter, Q$UIObject, Q$Widget]), SplitLayoutPanel$HSplitter_0);\n_.getAbsolutePosition = function getAbsolutePosition(){\n  return $getAbsoluteLeft(($clinit_DOM() , this.element_0));\n}\n;\n_.getCenterSize = function getCenterSize(){\n  return $getCenterWidth(this.this$0);\n}\n;\n_.getEventPosition = function getEventPosition(event_0){\n  return $eventGetSubPixelClientX(event_0) | 0;\n}\n;\n_.getTargetPosition = function getTargetPosition(){\n  return $getAbsoluteLeft(this.target_0.getElement());\n}\n;\n_.getTargetSize = function getTargetSize(){\n  return this.target_0.getOffsetWidth();\n}\n;\nfunction SplitLayoutPanel$Splitter$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(396, 1, {}, SplitLayoutPanel$Splitter$1_0);\n_.execute_1 = function execute_12(){\n  this.this$1.layoutCommand = null;\n  $forceLayout(this.this$1.this$0_0);\n}\n;\nfunction SplitLayoutPanel$VSplitter_0(this$0, target, reverse){\n  this.this$0 = this$0;\n  SplitLayoutPanel$Splitter_0.call(this, this$0, target, reverse);\n  ($clinit_DOM() , this.element_0).style['height'] = this$0.splitterSize + ($clinit_Style$Unit() , 'px');\n  $setClassName(this.element_0, 'gwt-SplitLayoutPanel-VDragger');\n}\n\ndefineSeed(397, 395, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SplitLayoutPanel$Splitter, Q$UIObject, Q$Widget]), SplitLayoutPanel$VSplitter_0);\n_.getAbsolutePosition = function getAbsolutePosition_0(){\n  return $getBoundingClientRectTop(($clinit_DOM() , this.element_0)) + $wnd.pageYOffset | 0;\n}\n;\n_.getCenterSize = function getCenterSize_0(){\n  return $getCenterHeight(this.this$0);\n}\n;\n_.getEventPosition = function getEventPosition_0(event_0){\n  return $eventGetSubPixelClientY(event_0) | 0;\n}\n;\n_.getTargetPosition = function getTargetPosition_0(){\n  return $getBoundingClientRectTop(this.target_0.getElement()) + $wnd.pageYOffset | 0;\n}\n;\n_.getTargetSize = function getTargetSize_0(){\n  return this.target_0.getOffsetHeight();\n}\n;\nfunction $cancelKey(this$static){\n  !!this$static.currentEvent && $eventPreventDefault(this$static.currentEvent);\n}\n\nfunction $getValueOrThrow(this$static){\n  var text_0;\n  text_0 = $getPropertyString(($clinit_DOM() , this$static.element_0), 'value');\n  if ($equals('', text_0)) {\n    return null;\n  }\n  return text_0;\n}\n\nfunction $setText_3(this$static, text_0){\n  ($clinit_DOM() , this$static.element_0)['value'] = text_0 != null?text_0:'';\n}\n\nfunction ValueBoxBase_0(elem){\n  FocusWidget_0.call(this, elem);\n  addTo($clinit_LocaleInfo());\n}\n\ndefineSeed(400, 329, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_5(event_0){\n  var type_0;\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(event_0.type));\n  if ((type_0 & 896) != 0) {\n    this.currentEvent = event_0;\n    $onBrowserEvent(this, event_0);\n    this.currentEvent = null;\n  }\n   else {\n    $onBrowserEvent(this, event_0);\n  }\n}\n;\n_.onLoad = function onLoad_0(){\n}\n;\nfunction $clinit_TextBoxBase(){\n  $clinit_TextBoxBase = nullMethod;\n  $clinit_ValueBoxBase$TextAlignment();\n}\n\nfunction $getValue(this$static){\n  var raw;\n  raw = $getValueOrThrow(this$static);\n  return raw == null?'':raw;\n}\n\ndefineSeed(399, 400, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $setMaxLength_0(this$static, length_0){\n  $setMaxLength(($clinit_DOM() , this$static.element_0), length_0);\n}\n\nfunction TextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'text'));\n}\n\nfunction TextBox_1(element){\n  ValueBoxBase_0.call(this, element, (!INSTANCE_2 && (INSTANCE_2 = new PassthroughRenderer_0) , !INSTANCE_1 && (INSTANCE_1 = new PassthroughParser_0)));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-TextBox');\n}\n\ndefineSeed(398, 399, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextBox_0);\nfunction $onClick(this$static){\n  var evt;\n  $toggleDown(this$static);\n  this$static.allowClick = true;\n  evt = $createMouseEvent($doc, 'click', true, true, 1, 0, 0, 0, 0, false, false, false, false, 1, null);\n  $dispatchEvent(($clinit_DOM() , this$static.element_0), evt);\n  this$static.allowClick = false;\n  fire_3(this$static, ($clinit_Boolean() , (1 & (!this$static.curFace && $setCurrentFace_0(this$static, this$static.up) , this$static.curFace.val$faceID)) > 0?TRUE_1:FALSE_1));\n}\n\nfunction ToggleButton_0(handler){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('div') , $setTabIndex(e, 0) , e));\n  this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element_0), 7165 | (this.element_0.__eventBits || 0)):(this.eventsToSink |= 7165);\n  $setUpFace(this, new CustomButton$2_0(this, null, 'up', 0));\n  $setClassName(($clinit_DOM() , this.element_0), 'gwt-CustomButton');\n  $clinit_Roles();\n  $set(BUTTON, this.element_0);\n  $setText_0(this.up);\n  $addDomHandler(this, handler, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $setClassName(this.element_0, 'gwt-ToggleButton');\n}\n\ndefineSeed(401, 337, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ToggleButton_0);\nfunction $clinit_ValueBoxBase$TextAlignment(){\n  $clinit_ValueBoxBase$TextAlignment = nullMethod;\n  CENTER_1 = new ValueBoxBase$TextAlignment$1_0;\n  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0;\n  LEFT_0 = new ValueBoxBase$TextAlignment$3_0;\n  RIGHT_0 = new ValueBoxBase$TextAlignment$4_0;\n  $VALUES_10 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$ValueBoxBase$TextAlignment, [CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0]);\n}\n\nfunction ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_11(){\n  $clinit_ValueBoxBase$TextAlignment();\n  return $VALUES_10;\n}\n\ndefineSeed(402, 54, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_10, CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0;\nfunction ValueBoxBase$TextAlignment$1_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(403, 402, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);\nfunction ValueBoxBase$TextAlignment$2_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(404, 402, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);\nfunction ValueBoxBase$TextAlignment$3_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(405, 402, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);\nfunction ValueBoxBase$TextAlignment$4_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(406, 402, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);\nfunction $add_2(this$static, w){\n  var td, tr, td_0;\n  tr = ($clinit_DOM() , $doc.createElement('tr'));\n  td = (td_0 = $doc.createElement('td') , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(tr, ($clinit_PotentialElement() , $resolve(td)));\n  $appendChild(this$static.body_0, $resolve(tr));\n  $add(this$static, w, td);\n}\n\nfunction $remove_6(this$static, w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.getElement()));\n  removed = $remove_0(this$static, w);\n  removed && $removeChild(this$static.body_0, $getParentElement(td));\n  return removed;\n}\n\nfunction $setVerticalAlignment_0(this$static, align_0){\n  this$static.vertAlign = align_0;\n}\n\nfunction VerticalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyString(($clinit_DOM() , this.table), 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(407, 335, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), VerticalPanel_0);\n_.remove_0 = function remove_10(w){\n  return $remove_6(this, w);\n}\n;\nfunction $add_3(this$static, w){\n  $insert_1(this$static, w, this$static.size_0);\n}\n\nfunction $get_3(this$static, index_0){\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  return this$static.array[index_0];\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert_1(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, this$static.array.length * 2, 0);\n    for (i0 = 0; i0 < this$static.array.length; ++i0) {\n      setCheck(newArray, i0, this$static.array[i0]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i = this$static.size_0 - 1; i > beforeIndex; --i) {\n    setCheck(this$static.array, i, this$static.array[i - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_7(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_8(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_7(this$static, index_0);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, 4, 0);\n}\n\ndefineSeed(408, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_5(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_1(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(409, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_1(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_1 = function remove_11(){\n  if (!this.currentWidget) {\n    throw new IllegalStateException_0;\n  }\n  this.this$0.parent_0.remove_0(this.currentWidget);\n  --this.index_0;\n  this.currentWidget = null;\n}\n;\n_.index_0 = 0;\nfunction $focus(elem){\n  try {\n    elem.focus();\n  }\n   catch (e) {\n    if (!elem || !elem.focus) {\n      throw e;\n    }\n  }\n}\n\nfunction $getContents(iframe){\n  try {\n    if (!iframe.contentWindow || !iframe.contentWindow.document)\n      return null;\n    return iframe.contentWindow.document.body.innerHTML;\n  }\n   catch (e) {\n    return null;\n  }\n}\n\nfunction $hookEvents(iframe, form_0, listener){\n  iframe && (iframe.onload = $entry(function(){\n    if (!iframe.__formAction)\n      return;\n    listener.onFrameLoad();\n  }\n  ));\n  form_0.onsubmit = $entry(function(){\n    iframe && (iframe.__formAction = form_0.action);\n    return listener.onFormSubmit();\n  }\n  );\n}\n\nfunction $setEncoding_0(form_0, encoding){\n  form_0.enctype = encoding;\n  form_0.encoding = encoding;\n}\n\nfunction $submit_0(form_0, iframe){\n  iframe && (iframe.__formAction = form_0.action);\n  form_0.submit();\n}\n\nfunction $unhookEvents(iframe, form_0){\n  iframe && (iframe.onload = null);\n  form_0.onsubmit = null;\n}\n\nfunction $setClip(popup, rect){\n  $setPropertyImpl(popup.style, 'clip', rect);\n}\n\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction $clearOnReadyStateChange(this$static){\n  var self_0 = this$static;\n  setTimeout_0(function(){\n    self_0.onreadystatechange = new Function;\n  }\n  , 0);\n}\n\nfunction $open(this$static, httpMethod, url_0){\n  this$static.open(httpMethod, url_0, true);\n}\n\nfunction $setOnReadyStateChange(this$static, handler){\n  var _this = this$static;\n  this$static.onreadystatechange = $entry(function(){\n    handler.onReadyStateChange(_this);\n  }\n  );\n}\n\nfunction $setRequestHeader(this$static, header, value_0){\n  this$static.setRequestHeader(header, value_0);\n}\n\nfunction create_2(){\n  var xhr;\n  if ($wnd.XMLHttpRequest) {\n    xhr = new $wnd.XMLHttpRequest;\n  }\n   else {\n    try {\n      xhr = new $wnd.ActiveXObject('MSXML2.XMLHTTP.3.0');\n    }\n     catch (e) {\n      xhr = new $wnd.ActiveXObject('Microsoft.XMLHTTP');\n    }\n  }\n  return xhr;\n}\n\nfunction $removeHandler(this$static){\n  $doRemove(this$static.this$0, this$static.val$type, this$static.val$handler);\n}\n\nfunction SimpleEventBus$1_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(417, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(418, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\n_.execute_1 = function execute_13(){\n  $doAddNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nfunction SimpleEventBus$3_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(419, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$3_0);\n_.execute_1 = function execute_14(){\n  $doRemoveNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nvar compileTimeSupport;\nfunction TypedArray$TypedArrayCompileTimeSupport_0(){\n}\n\ndefineSeed(423, 1, {}, TypedArray$TypedArrayCompileTimeSupport_0);\nfunction $attachShader(this$static, program, shader){\n  this$static.attachShader(program, shader);\n}\n\nfunction $bindAttribLocation(this$static, program, index_0, name_0){\n  this$static.bindAttribLocation(program, index_0, name_0);\n}\n\nfunction $bindBuffer(this$static, target, buffer){\n  this$static.bindBuffer(target, buffer);\n}\n\nfunction $bindTexture(this$static, target, texture){\n  this$static.bindTexture(target, texture);\n}\n\nfunction $bufferData(this$static, target, dta, usage){\n  this$static.bufferData(target, dta, usage);\n}\n\nfunction $disableVertexAttribArray(this$static, index_0){\n  this$static.disableVertexAttribArray(index_0);\n}\n\nfunction $drawArrays(this$static, mode, first, count){\n  this$static.drawArrays(mode, first, count);\n}\n\nfunction $enable(this$static, param){\n  this$static.enable(param);\n}\n\nfunction $enableVertexAttribArray(this$static, index_0){\n  this$static.enableVertexAttribArray(index_0);\n}\n\nfunction $flush(this$static){\n  this$static.flush();\n}\n\nfunction $getAttribLocation(this$static, program, name_0){\n  return this$static.getAttribLocation(program, name_0);\n}\n\nfunction $getProgramInfoLog(this$static, program){\n  return this$static.getProgramInfoLog(program);\n}\n\nfunction $getProgramParameterb(this$static, program, pname){\n  return this$static.getProgramParameter(program, pname);\n}\n\nfunction $getUniformLocation(this$static, program, name_0){\n  return this$static.getUniformLocation(program, name_0);\n}\n\nfunction $linkProgram(this$static, program){\n  this$static.linkProgram(program);\n}\n\nfunction $texImage2D(this$static, target, level, internalformat, format, type_0, data_0){\n  this$static.texImage2D(target, level, internalformat, format, type_0, data_0);\n}\n\nfunction $texParameteri(this$static, target, pname, value_0){\n  this$static.texParameteri(target, pname, value_0);\n}\n\nfunction $uniform1f(this$static, location_0, v0){\n  this$static.uniform1f(location_0, v0);\n}\n\nfunction $uniform1i(this$static, location_0, v0){\n  this$static.uniform1i(location_0, v0);\n}\n\nfunction $uniform4f(this$static, location_0, v0, v1, v2, v3){\n  this$static.uniform4f(location_0, v0, v1, v2, v3);\n}\n\nfunction $uniform4fv(this$static, location_0, v){\n  this$static.uniform4fv(location_0, v);\n}\n\nfunction $uniformMatrix4fv(this$static, location_0, transpose, value_0){\n  this$static.uniformMatrix4fv(location_0, transpose, value_0);\n}\n\nfunction $useProgram(this$static, program){\n  this$static.useProgram(program);\n}\n\nfunction $vertexAttribPointer(this$static, index_0, size_0, type_0, normalized, stride, offset){\n  this$static.vertexAttribPointer(index_0, size_0, type_0, normalized, stride, offset);\n}\n\nfunction ArithmeticException_0(){\n  RuntimeException_1.call(this, 'divide by zero');\n}\n\ndefineSeed(430, 90, makeCastMap([Q$Serializable, Q$Throwable]), ArithmeticException_0);\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(431, 90, makeCastMap([Q$Serializable, Q$Throwable]), ArrayStoreException_0);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  FALSE_1 = new Boolean_1(false);\n  TRUE_1 = new Boolean_1(true);\n}\n\nfunction $compareTo_0(this$static, b){\n  return compare(this$static.value_0, b.value_0);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\nfunction compare(x_0, y_0){\n  return x_0 == y_0?0:x_0?1:-1;\n}\n\ndefineSeed(432, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.compareTo$ = function compareTo_0(b){\n  return $compareTo_0(this, dynamicCast(b, Q$Boolean));\n}\n;\n_.equals$ = function equals_9(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_17(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nvar FALSE_1, TRUE_1;\nfunction digit_0(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(434, 1, {}, Class_0);\n_.toString$ = function toString_18(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(435, 90, makeCastMap([Q$Serializable, Q$Throwable]), ClassCastException_0);\nfunction __parseAndValidateDouble(s){\n  var floatRegex;\n  if (!(floatRegex = floatRegex_0 , !floatRegex && (floatRegex = floatRegex_0 = /^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$/) , floatRegex.test(s))) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return parseFloat(s);\n}\n\nfunction __parseAndValidateInt(s){\n  var i, isTooLow, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_0('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;\n  for (i = startIndex; i < length_0; i++) {\n    if (digit_0(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_0('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  isTooLow = toReturn < -2147483648;\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n   else if (isTooLow || toReturn > 2147483647) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\ndefineSeed(437, 1, makeCastMap([Q$Serializable, Q$Number]));\nvar floatRegex_0;\nfunction $compareTo_1(this$static, b){\n  return compare_0(this$static.value_0, b.value_0);\n}\n\nfunction Double_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction compare_0(x_0, y_0){\n  if (x_0 < y_0) {\n    return -1;\n  }\n  if (x_0 > y_0) {\n    return 1;\n  }\n  if (x_0 == y_0) {\n    return 0;\n  }\n  return isNaN(x_0)?isNaN(y_0)?0:1:-1;\n}\n\ndefineSeed(436, 437, makeCastMap([Q$Serializable, Q$Comparable, Q$Double, Q$Number]), Double_0);\n_.compareTo$ = function compareTo_1(b){\n  return $compareTo_1(this, dynamicCast(b, Q$Double));\n}\n;\n_.equals$ = function equals_10(o){\n  return instanceOf(o, Q$Double) && dynamicCast(o, Q$Double).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  return round_int(this.value_0);\n}\n;\n_.toString$ = function toString_19(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction IllegalArgumentException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalArgumentException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(438, 90, makeCastMap([Q$Serializable, Q$IllegalArgumentException, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);\nfunction IllegalStateException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(439, 90, makeCastMap([Q$Serializable, Q$IllegalStateException, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(440, 90, makeCastMap([Q$Serializable, Q$IndexOutOfBoundsException, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction $compareTo_2(this$static, b){\n  return compare_1(this$static.value_0, b.value_0);\n}\n\nfunction Integer_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction compare_1(x_0, y_0){\n  return x_0 < y_0?-1:x_0 > y_0?1:0;\n}\n\nfunction numberOfLeadingZeros_0(i){\n  var m_0, n, y_0;\n  if (i < 0) {\n    return 0;\n  }\n   else if (i == 0) {\n    return 32;\n  }\n   else {\n    y_0 = -(i >> 16);\n    m_0 = y_0 >> 16 & 16;\n    n = 16 - m_0;\n    i = i >> m_0;\n    y_0 = i - 256;\n    m_0 = y_0 >> 16 & 8;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 4096;\n    m_0 = y_0 >> 16 & 4;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 16384;\n    m_0 = y_0 >> 16 & 2;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i >> 14;\n    m_0 = y_0 & ~(y_0 >> 1);\n    return n + 2 - m_0;\n  }\n}\n\nfunction numberOfTrailingZeros(i){\n  var r, rtn;\n  if (i == 0) {\n    return 32;\n  }\n   else {\n    rtn = 0;\n    for (r = 1; (r & i) == 0; r <<= 1) {\n      ++rtn;\n    }\n    return rtn;\n  }\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction valueOf(i){\n  var rebase, result;\n  if (i > -129 && i < 128) {\n    rebase = i + 128;\n    result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase];\n    !result && (result = boxedValues_0[rebase] = new Integer_0(i));\n    return result;\n  }\n  return new Integer_0(i);\n}\n\ndefineSeed(441, 437, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);\n_.compareTo$ = function compareTo_2(b){\n  return $compareTo_2(this, dynamicCast(b, Q$Integer));\n}\n;\n_.equals$ = function equals_11(o){\n  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_13(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_20(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction $clinit_Integer$BoxedValues(){\n  $clinit_Integer$BoxedValues = nullMethod;\n  boxedValues_0 = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Integer, 256, 0);\n}\n\nvar boxedValues_0;\nfunction signum(i){\n  return eq_0(i, P0_longLit)?0:lt(i, P0_longLit)?-1:1;\n}\n\nfunction abs_0(x_0){\n  return x_0 <= 0?0 - x_0:x_0;\n}\n\nfunction abs_1(x_0){\n  return x_0 < 0?-x_0:x_0;\n}\n\nfunction ceil_0(x_0){\n  return Math.ceil(x_0);\n}\n\nfunction cos_0(x_0){\n  return Math.cos(x_0);\n}\n\nfunction floor_0(x_0){\n  return Math.floor(x_0);\n}\n\nfunction log10(x_0){\n  return Math.log(x_0) * Math.LOG10E;\n}\n\nfunction max_1(x_0, y_0){\n  return x_0 > y_0?x_0:y_0;\n}\n\nfunction max_2(x_0, y_0){\n  return x_0 > y_0?x_0:y_0;\n}\n\nfunction min_1(x_0, y_0){\n  return x_0 < y_0?x_0:y_0;\n}\n\nfunction min_2(x_0, y_0){\n  return x_0 < y_0?x_0:y_0;\n}\n\nfunction pow_0(x_0, exp_0){\n  return Math.pow(x_0, exp_0);\n}\n\nfunction round0(x_0){\n  return Math.round(x_0);\n}\n\nfunction sin_0(x_0){\n  return Math.sin(x_0);\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(445, 90, makeCastMap([Q$Serializable, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(message){\n  IllegalArgumentException_1.call(this, message);\n}\n\ndefineSeed(447, 438, makeCastMap([Q$Serializable, Q$IllegalArgumentException, Q$NumberFormatException, Q$Throwable]), NumberFormatException_0);\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(448, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_21(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $endsWith(this$static, suffix){\n  return this$static.lastIndexOf(suffix) != -1 && this$static.lastIndexOf(suffix) == this$static.length - suffix.length;\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $indexOf_0(this$static, startIndex){\n  return $indexOf_2(this$static, fromCodePoint(10), startIndex);\n}\n\nfunction $indexOf_1(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $indexOf_2(this$static, str, startIndex){\n  return this$static.indexOf(str, startIndex);\n}\n\nfunction $matches(this$static, regex){\n  return (new RegExp('^(' + regex + ')$')).test(this$static);\n}\n\nfunction $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, numElements, 0);\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction compareTo_4(thisStr, otherStr){\n  thisStr = String(thisStr);\n  if (thisStr == otherStr) {\n    return 0;\n  }\n  return thisStr < otherStr?-1:1;\n}\n\nfunction fromCharCode(ch_0){\n  return String.fromCharCode(ch_0);\n}\n\nfunction fromCodePoint(codePoint){\n  var hiSurrogate, loSurrogate;\n  if (codePoint >= 65536) {\n    hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;\n    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);\n  }\n   else {\n    return String.fromCharCode(codePoint & 65535);\n  }\n}\n\nfunction valueOf_0(x_0){\n  return String.fromCharCode(x_0);\n}\n\nfunction valueOf_1(x_0){\n  return String.fromCharCode.apply(null, x_0);\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.compareTo$ = function compareTo_3(other){\n  return compareTo_4(this, dynamicCast(other, Q$String));\n}\n;\n_.equals$ = function equals_12(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_14(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction $$init(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_2(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $append_3(this$static, x_0){\n  $append_1(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $append_4(this$static, x_0){\n  $appendNonNull(this$static.impl, valueOf_1(x_0));\n  return this$static;\n}\n\nfunction $delete(this$static, end){\n  return $replace(this$static.impl, 0, end, '') , this$static;\n}\n\nfunction StringBuffer_0(){\n  $$init(this);\n}\n\nfunction StringBuffer_1(){\n  $$init(this);\n}\n\ndefineSeed(450, 1, makeCastMap([Q$CharSequence]), StringBuffer_0, StringBuffer_1);\n_.toString$ = function toString_22(){\n  return this.impl.string;\n}\n;\nfunction $$init_0(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_5(this$static, x_0){\n  $append_1(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $charAt_0(this$static, index_0){\n  return $charAt(this$static.impl.string, index_0);\n}\n\nfunction $delete_0(this$static, start_0, end){\n  return $replace(this$static.impl, start_0, end, '') , this$static;\n}\n\nfunction $insert_2(this$static, index_0, x_0){\n  return $replace(this$static.impl, index_0, index_0, x_0) , this$static;\n}\n\nfunction $replace_1(this$static, start_0, end, toInsert){\n  $replace(this$static.impl, start_0, end, toInsert);\n  return this$static;\n}\n\nfunction $setCharAt(this$static, index_0, x_0){\n  $replace_1(this$static, index_0, index_0 + 1, valueOf_0(x_0));\n}\n\nfunction StringBuilder_0(){\n  $$init_0(this);\n}\n\nfunction StringBuilder_1(s){\n  $$init_0(this);\n  $append_1(this.impl, s);\n}\n\ndefineSeed(451, 1, makeCastMap([Q$CharSequence]), StringBuilder_0, StringBuilder_1);\n_.toString$ = function toString_23(){\n  return this.impl.string;\n}\n;\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(452, 90, makeCastMap([Q$Serializable, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $keySet_0(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(454, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_13(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_0) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_3(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue_0();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_15(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_3(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.put = function put(key, value_0){\n  throw new UnsupportedOperationException_1('Put not supported on this map');\n}\n;\n_.toString$ = function toString_24(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_3(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue_0();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey_0(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_4(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue_0();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put_1(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue_0();\n        entry.setValue_0(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_9(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue_0();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size_0;\n    delete stringMap[key];\n  }\n  return result;\n}\n\nfunction AbstractHashMap_0(ignored){\n  $clearImpl(this);\n  if (ignored < 0) {\n    throw new IllegalArgumentException_1('initial capacity was negative or load factor was non-positive');\n  }\n}\n\ndefineSeed(453, 454, makeCastMap([Q$Map]));\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.put = function put_0(key, value_0){\n  return $put_1(this, key, value_0);\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey_0(this$static.this$0, key)) {\n      value_0 = $get_4(this$static.this$0, key);\n      return $equals_1(entry.getValue_0(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(455, 257, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains_0 = function contains_1(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_6(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.remove = function remove_12(entry){\n  var key;\n  if ($contains(this, entry)) {\n    key = dynamicCast(entry, Q$Map$Entry).getKey();\n    $remove_9(this.this$0, key);\n    return true;\n  }\n  return false;\n}\n;\n_.size_1 = function size_2(){\n  return this.this$0.size_0;\n}\n;\nfunction $next_2(this$static){\n  return this$static.last = dynamicCast($next_3(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_10(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_11(this$static.iter);\n    $remove_9(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_5(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(456, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this.iter);\n}\n;\n_.next_0 = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_1 = function remove_13(){\n  $remove_10(this);\n}\n;\n_.last = null;\ndefineSeed(458, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_14(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue_0(), entry.getValue_0())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_16(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue_0() != null && (valueHash = hashCode__devirtual$(this.getValue_0()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_25(){\n  return this.getKey() + '=' + this.getValue_0();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(457, 458, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue_0 = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue_0 = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(459, 458, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue_0 = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue_0 = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction $equals_0(this$static, o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this$static) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this$static.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = new AbstractList$IteratorImpl_0(this$static);\n  iterOther = other.iterator();\n  while (iter.i < iter.this$0_0.size_1()) {\n    elem = $next_3(iter);\n    elemOther = $next_3(iterOther);\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction $hashCode(this$static){\n  var iter, k, obj;\n  k = 1;\n  iter = new AbstractList$IteratorImpl_0(this$static);\n  while (iter.i < iter.this$0_0.size_1()) {\n    obj = $next_3(iter);\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n\nfunction $indexOf_3(this$static, toFind){\n  var i, n;\n  for (i = 0 , n = this$static.array.length; i < n; ++i) {\n    if (toFind == null?(checkIndex(i, this$static.array.length) , this$static.array[i]) == null:equals__devirtual$(toFind, (checkIndex(i, this$static.array.length) , this$static.array[i]))) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(460, 258, makeCastMap([Q$List]));\n_.add_1 = function add_3(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_0 = function add_4(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_15(o){\n  return $equals_0(this, o);\n}\n;\n_.hashCode$ = function hashCode_17(){\n  return $hashCode(this);\n}\n;\n_.iterator = function iterator_7(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return new AbstractList$ListIteratorImpl_0(this, 0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_2 = function remove_14(index_0){\n  throw new UnsupportedOperationException_1('Remove not supported on this list');\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_3(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.last = this$static.i++);\n}\n\nfunction $remove_11(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_2(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(461, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this);\n}\n;\n_.next_0 = function next_4(){\n  return $next_3(this);\n}\n;\n_.remove_1 = function remove_15(){\n  $remove_11(this);\n}\n;\n_.i = 0;\n_.last = -1;\nfunction $previous(this$static){\n  if (this$static.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0.get_0(this$static.last = --this$static.i);\n}\n\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(462, 461, {}, AbstractList$ListIteratorImpl_0);\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(463, 257, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains_0 = function contains_2(key){\n  return $containsKey_0(this.this$0, key);\n}\n;\n_.iterator = function iterator_8(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_3(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction $next_4(this$static){\n  var entry;\n  entry = $next_2(this$static.val$outerIter);\n  return entry.getKey();\n}\n\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(464, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_4(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_5(){\n  return $next_4(this);\n}\n;\n_.remove_1 = function remove_16(){\n  $remove_10(this.val$outerIter);\n}\n;\nfunction $add_4(this$static, index_0, o){\n  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);\n  splice_0(this$static.array, index_0, 0, o);\n  ++this$static.size_0;\n}\n\nfunction $add_5(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $clear(this$static){\n  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n  this$static.size_0 = 0;\n}\n\nfunction $get_5(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf_4(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $remove_12(this$static, index_0){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  splice(this$static.array, index_0, 1);\n  --this$static.size_0;\n  return previous;\n}\n\nfunction $remove_13(this$static, o){\n  var i;\n  i = $indexOf_4(this$static, o, 0);\n  if (i == -1) {\n    return false;\n  }\n  $remove_12(this$static, i);\n  return true;\n}\n\nfunction $set_2(this$static, index_0, o){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  setCheck(this$static.array, index_0, o);\n  return previous;\n}\n\nfunction $toArray(this$static, out){\n  var i;\n  out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));\n  for (i = 0; i < this$static.size_0; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size_0 && setCheck(out, this$static.size_0, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n}\n\nfunction splice(array, index_0, deleteCount){\n  array.splice(index_0, deleteCount);\n}\n\nfunction splice_0(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(465, 460, makeCastMap([Q$Serializable, Q$ArrayList, Q$List]), ArrayList_0);\n_.add_1 = function add_5(index_0, o){\n  $add_4(this, index_0, o);\n}\n;\n_.add_0 = function add_6(o){\n  return $add_5(this, o);\n}\n;\n_.contains_0 = function contains_3(o){\n  return $indexOf_4(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_1(index_0){\n  return $get_5(this, index_0);\n}\n;\n_.isEmpty = function isEmpty_0(){\n  return this.size_0 == 0;\n}\n;\n_.remove_2 = function remove_17(index_0){\n  return $remove_12(this, index_0);\n}\n;\n_.remove = function remove_18(o){\n  return $remove_13(this, o);\n}\n;\n_.size_1 = function size_4(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction insertionSort(array, low, high){\n  var i, j, t;\n  for (i = low + 1; i < high; ++i) {\n    for (j = i; j > low && $compare(array[j - 1], array[j]) > 0; --j) {\n      t = array[j];\n      setCheck(array, j, array[j - 1]);\n      setCheck(array, j - 1, t);\n    }\n  }\n}\n\nfunction merge_0(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh){\n  var topIdx;\n  topIdx = srcMid;\n  while (destLow < destHigh) {\n    topIdx >= srcHigh || srcLow < srcMid && $compare(src_0[srcLow], src_0[topIdx]) <= 0?setCheck(dest, destLow++, src_0[srcLow++]):setCheck(dest, destLow++, src_0[topIdx++]);\n  }\n}\n\nfunction mergeSort(x_0, fromIndex, toIndex){\n  var temp, a, result;\n  temp = (a = x_0 , result = a.slice(fromIndex, toIndex) , initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result) , result);\n  mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex);\n}\n\nfunction mergeSort_0(temp, array, low, high, ofs){\n  var length_0, tempHigh, tempLow, tempMid;\n  length_0 = high - low;\n  if (length_0 < 7) {\n    insertionSort(array, low, high);\n    return;\n  }\n  tempLow = low + ofs;\n  tempHigh = high + ofs;\n  tempMid = tempLow + (tempHigh - tempLow >> 1);\n  mergeSort_0(array, temp, tempLow, tempMid, -ofs);\n  mergeSort_0(array, temp, tempMid, tempHigh, -ofs);\n  if ($compare(temp[tempMid - 1], temp[tempMid]) <= 0) {\n    while (low < high) {\n      setCheck(array, low++, temp[tempLow++]);\n    }\n    return;\n  }\n  merge_0(temp, tempLow, tempMid, tempHigh, array, low, high);\n}\n\nfunction Arrays$ArrayList_0(array){\n  this.array = array;\n}\n\ndefineSeed(467, 460, makeCastMap([Q$Serializable, Q$List]), Arrays$ArrayList_0);\n_.contains_0 = function contains_4(o){\n  return $indexOf_3(this, o) != -1;\n}\n;\n_.get_0 = function get_2(index_0){\n  return checkIndex(index_0, this.array.length) , this.array[index_0];\n}\n;\n_.size_1 = function size_5(){\n  return this.array.length;\n}\n;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(469, 460, makeCastMap([Q$Serializable, Q$List]), Collections$EmptyList_0);\n_.contains_0 = function contains_5(object){\n  return false;\n}\n;\n_.get_0 = function get_3(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_6(){\n  return 0;\n}\n;\nfunction $compare(o1, o2){\n  return dynamicCast(o1, Q$Comparable).compareTo$(o2);\n}\n\nfunction $compareTo_3(this$static, other){\n  return signum(sub_0(fromDouble(this$static.jsdate.getTime()), fromDouble(other.jsdate.getTime())));\n}\n\nfunction Date_1(){\n  this.jsdate = new Date;\n}\n\nfunction Date_2(date){\n  this.jsdate = create(toDouble(date));\n}\n\nfunction padTwo(number){\n  return number < 10?'0' + number:'' + number;\n}\n\ndefineSeed(471, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Date]), Date_1, Date_2);\n_.compareTo$ = function compareTo_5(other){\n  return $compareTo_3(this, dynamicCast(other, Q$Date));\n}\n;\n_.equals$ = function equals_16(obj){\n  return instanceOf(obj, Q$Date) && eq_0(fromDouble(this.jsdate.getTime()), fromDouble(dynamicCast(obj, Q$Date).jsdate.getTime()));\n}\n;\n_.hashCode$ = function hashCode_18(){\n  var time;\n  time = fromDouble(this.jsdate.getTime());\n  return toInt(xor(time, shru(time, 32)));\n}\n;\n_.toString$ = function toString_26(){\n  var hourOffset, minuteOffset, offset;\n  offset = -this.jsdate.getTimezoneOffset();\n  hourOffset = (offset >= 0?'+':'') + ~~(offset / 60);\n  minuteOffset = (offset < 0?-offset:offset) % 60 < 10?'0' + (offset < 0?-offset:offset) % 60:'' + (offset < 0?-offset:offset) % 60;\n  return ($clinit_Date$StringData() , DAYS)[this.jsdate.getDay()] + ' ' + MONTHS[this.jsdate.getMonth()] + ' ' + padTwo(this.jsdate.getDate()) + ' ' + padTwo(this.jsdate.getHours()) + ':' + padTwo(this.jsdate.getMinutes()) + ':' + padTwo(this.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this.jsdate.getFullYear();\n}\n;\nfunction $clinit_Date$StringData(){\n  $clinit_Date$StringData = nullMethod;\n  DAYS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);\n  MONTHS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n}\n\nvar DAYS, MONTHS;\nfunction $equals_1(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\nfunction HashMap_1(ignored){\n  AbstractHashMap_0.call(this, ignored);\n}\n\ndefineSeed(473, 453, makeCastMap([Q$Serializable, Q$Map]), HashMap_0, HashMap_1);\nfunction $add_6(this$static, o){\n  var old;\n  old = $put_1(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey_0(this$static.map_0, o);\n}\n\nfunction $remove_14(this$static, o){\n  return $remove_9(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(474, 257, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_7(o){\n  return $add_6(this, o);\n}\n;\n_.contains_0 = function contains_6(o){\n  return $contains_0(this, o);\n}\n;\n_.isEmpty = function isEmpty_1(){\n  return this.map_0.size_0 == 0;\n}\n;\n_.iterator = function iterator_9(){\n  return $iterator($keySet_0(this.map_0));\n}\n;\n_.remove = function remove_19(o){\n  return $remove_14(this, o);\n}\n;\n_.size_1 = function size_7(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_27(){\n  return $toString_1($keySet_0(this.map_0));\n}\n;\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(475, 458, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue_0 = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue_0 = function setValue_1(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(476, 90, makeCastMap([Q$Serializable, Q$Throwable]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction $createGUI(this$static, containingelement){\n  var container, rp, st;\n  this$static.locale = new Locale_0;\n  this$static.split_0 = new SplitLayoutPanel_0;\n  this$static.dock = new DockLayoutPanel_0(($clinit_Style$Unit() , EM));\n  this$static.compute = new Button_2($_(this$static.locale, 'StudentPanel.Compute'), 0, 'compute');\n  $addActionListener_0(this$static.compute, this$static);\n  this$static.undo_0 = new Button_3('edit-undo.png', $_(this$static.locale, 'StudentPanel.undo'), -1, 'undo');\n  this$static.redo_0 = new Button_3('edit-redo.png', $_(this$static.locale, 'StudentPanel.redo'), 1, 'redo');\n  this$static.loadsavebutton = new Button_3('loadsave.png', $_(this$static.locale, 'StudentPanel.loadsave'), 3, 'loadsave');\n  $addActionListener_0(this$static.undo_0, this$static);\n  $addActionListener_0(this$static.redo_0, this$static);\n  $addActionListener_0(this$static.loadsavebutton, this$static);\n  this$static.loadsavedialog = new LoadSaveDialog_0;\n  st = $getElement(this$static.dock).style;\n  $setPropertyImpl(st, 'position', 'absolute');\n  $setPropertyImpl(st, 'left', '0');\n  $setPropertyImpl(st, 'top', '0');\n  $setPropertyImpl(st, 'width', '100%');\n  $setPropertyImpl(st, 'height', '100%');\n  this$static.source = new UnitTabPane_0;\n  this$static.output = new VerticalMultiSplit_0;\n  container = new HorizontalPanel_0;\n  $setHorizontalAlignment(container, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  $setVerticalAlignment(container, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));\n  $add_1(container, this$static.undo_0);\n  $add_1(container, this$static.redo_0);\n  $add_1(container, this$static.loadsavebutton);\n  $getElement(this$static.undo_0.button_0).style['width'] = '100%';\n  $getElement(this$static.redo_0.button_0).style['width'] = '100%';\n  $add_1(container, this$static.compute);\n  $setCellWidth(container, this$static.compute);\n  ($clinit_DOM() , container.element_0).style['width'] = '100%';\n  $insert_0(this$static.split_0, this$static.output, ($clinit_DockLayoutPanel$Direction() , EAST), 100, null);\n  $insert_0(this$static.split_0, this$static.source, CENTER_0, 0, null);\n  this$static.dock.insert(container, SOUTH, 3, null);\n  this$static.dock.insert(this$static.split_0, CENTER_0, 0, null);\n  if (containingelement == null || $equals('', containingelement)) {\n    rp = ($clinit_RootPanel() , get_0(null));\n  }\n   else {\n    rp = get_0(containingelement);\n    !rp && (rp = ($clinit_RootPanel() , get_0(null)));\n  }\n  $add_0(rp, this$static.dock);\n  this$static.lang_0 = new LanguageSelector_0;\n}\n\nfunction $getParameter(parameter){\n  var i, meta, metas, name_0, name_1;\n  name_0 = 'viplab:' + parameter;\n  metas = $doc.getElementsByTagName('meta');\n  for (i = 0; i < metas.length; i++) {\n    meta = metas[i];\n    if ($equals(name_0, meta.name)) {\n      return meta.content;\n    }\n  }\n  return null;\n}\n\nfunction $getResult(this$static){\n  return this$static.latestResult?ZipContent($toString_0(this$static.latestResult.json)):'';\n}\n\nfunction $getSolution(this$static){\n  var solution;\n  if (!!this$static.server && !!this$static.loadedExercise) {\n    try {\n      solution = new Solution_0(this$static.server.baseURL + '/exercises/' + this$static.loadedExercise.source, this$static.source);\n      $put(solution.body_0, 'ID', new JSONNumber_0(0));\n      return ZipContent($toString_0(solution.solution));\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$JSONException)) {\n        return '';\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  return '';\n}\n\nfunction $loadExercise(this$static, location_0){\n  var idx, re;\n  if (!this$static.loadedExercise) {\n    idx = location_0.lastIndexOf('/');\n    idx >= 0 && (location_0 = $substring(location_0, idx + 1));\n    try {\n      $loadExercise_0(this$static.loader, location_0);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RestException)) {\n        re = $e0;\n        re.httpCode != 0?alert_0($__0(this$static.locale, 'StudentPanel.http_status', '' + re.httpCode)):alert_0($getLocalizedMessage(re));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n\nfunction $loadResult(this$static, res){\n  var body_0, io, pp, r, r$iterator, splitout, stderr, width_0;\n  if (res) {\n    splitout = false;\n    io = null;\n    stderr = null;\n    this$static.latestResult = res;\n    $removeAll_0(this$static.output);\n    for (r$iterator = new AbstractList$IteratorImpl_0(res.elements); r$iterator.i < r$iterator.this$0_0.size_1();) {\n      r = dynamicCast($next_3(r$iterator), Q$ResultElement);\n      if ($equals('text/plain', r.mimeType)) {\n        body_0 = r.body_0;\n        if (body_0 != null && !$equals('', body_0)) {\n          io = new InteractiveOutput_0(this$static.source, r.body_0);\n          r.identifier != null && r.identifier.indexOf('stderr') >= 0 && (stderr = io);\n          $add_7(this$static.output, io);\n          splitout = true;\n        }\n      }\n       else if ($equals('application/x-vgf', r.mimeType) || $equals('application/x-vgf3', r.mimeType) || $equals('application/x-vgfc', r.mimeType)) {\n        pp = new PlotterPanel_0;\n        $loadPlot(pp, r);\n        $add_7(this$static.output, pp);\n        splitout = true;\n      }\n    }\n    if (res.errors) {\n      !stderr && (stderr = io);\n      if (!stderr) {\n        stderr = new InteractiveOutput_0(this$static.source, '');\n        $add_7(this$static.output, stderr);\n      }\n      $showErrors(stderr, res.errors);\n      splitout = true;\n    }\n    if (splitout) {\n      width_0 = $getElement(this$static.dock).clientWidth | 0;\n      $setWidgetHidden_0(this$static.split_0, this$static.output, false);\n      width_0 > 0?$setWidgetSize(this$static.split_0, this$static.output, ~~(width_0 / 2)):$setWidgetSize(this$static.split_0, this$static.output, 480);\n      $enableLineNumbering_1(this$static.output, false);\n      $rethinkContent_0(this$static.output);\n    }\n     else {\n      $setWidgetHidden_0(this$static.split_0, this$static.output, true);\n      $setWidgetSize(this$static.split_0, this$static.output, 0);\n    }\n  }\n}\n\nfunction $setupNetworkInterfaces(this$static, ecs, cookie, compid, auth){\n  var hdrs, header;\n  header = null;\n  if (cookie != null && !$equals('', cookie)) {\n    cookie.indexOf('ecs_subparticipant') == 0 || (cookie = 'ecs_subparticipant=' + cookie);\n    $endsWith(cookie, ';') || (cookie = cookie + ';');\n  }\n   else {\n    auth != null?(header = new HTTPHeader_0('Authorization', 'Basic ' + auth)):(header = new HTTPHeader_0('X-EcsAnonymous', 'true'));\n  }\n  if (header) {\n    hdrs = initValues(_3Lviplab_client_net_HTTPHeader_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$HTTPHeader, [header]);\n    this$static.server = new RestPrimitives_0(ecs, cookie, compid, hdrs);\n  }\n   else {\n    this$static.server = new RestPrimitives_0(ecs, cookie, compid, null);\n  }\n  this$static.ecsEvents = new EventPoller_0(this$static.server);\n  this$static.loader = new ExerciseLoader_0(this$static.server, this$static.ecsEvents);\n  this$static.poster = new SolutionSender_0(this$static.ecsEvents);\n  $addActionListener_4(this$static.loader, this$static);\n  $addActionListener_5(this$static.poster, this$static);\n}\n\nfunction $showExercise(this$static, ex){\n  var count, e, e$iterator, haselements, idx, name_0, u, u$iterator, vms, vms$iterator;\n  count = 0;\n  idx = 0;\n  $removeAll(this$static.source);\n  $removeAll_0(this$static.output);\n  for (u$iterator = new AbstractList$IteratorImpl_0(ex.units); u$iterator.i < u$iterator.this$0_0.size_1();) {\n    u = dynamicCast($next_3(u$iterator), Q$TranslationUnit);\n    haselements = false;\n    for (e$iterator = new AbstractList$IteratorImpl_0(u.elements); e$iterator.i < e$iterator.this$0_0.size_1();) {\n      e = dynamicCast($next_3(e$iterator), Q$ExerciseElement);\n      $equals('text/plain', e.mimeType) && (haselements = true);\n    }\n    if (haselements) {\n      $addUnit(this$static.source, u);\n      ++count;\n    }\n  }\n  $setLanguage(this$static.lang_0, ex.chaintype);\n  for (vms$iterator = new AbstractList$IteratorImpl_0(this$static.source.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    if (vms.name_0 == null || $equals('', vms.name_0)) {\n      count > 1?(name_0 = $__0(this$static.locale, 'StudentPanel.default_unit_name_n', '' + ++idx)):(name_0 = $_(this$static.locale, 'StudentPanel.default_unit_name'));\n      $setName_0(vms, $fixUnitName(this$static.lang_0, name_0, vms.tabtype));\n    }\n  }\n  $rethinkContent(this$static.source);\n  $enableLineNumbering_0(this$static.source, this$static.showLines);\n  $setWidgetHidden_0(this$static.split_0, this$static.output, true);\n  $setWidgetSize(this$static.split_0, this$static.output, 0);\n  this$static.loadedExercise = ex;\n}\n\nfunction $start(this$static){\n  var ecs, exercise, re;\n  ecs = $getParameter('ecslocation');\n  this$static.showLines = true;\n  $createGUI(this$static, $getParameter('container'));\n  $rethinkContent(this$static.source);\n  if (ecs != null) {\n    try {\n      $setupNetworkInterfaces(this$static, ecs, $getParameter('cookie'), $getParameter('compmid'), $getParameter('authorization'));\n      exercise = $getParameter('exercise');\n      exercise != null && $loadExercise(this$static, exercise);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RestException)) {\n        re = $e0;\n        re.httpCode != 0?alert_0($__0(this$static.locale, 'StudentPanel.http_status', '' + re.httpCode)):alert_0($getLocalizedMessage(re));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n    instance_1 = this$static;\n    $wnd.ViPLab = new Object;\n    $wnd.ViPLab.loadExercise = $entry(loadExerciseToInstance);\n    $wnd.ViPLab.getSolution = $entry(getSolutionFromInstance);\n    $wnd.ViPLab.getResult = $entry(getResultFromInstance);\n  }\n}\n\nfunction ViPLab_0(){\n}\n\nfunction getResultFromInstance(){\n  if (instance_1)\n    return $getResult(instance_1);\n  return '';\n}\n\nfunction getSolutionFromInstance(){\n  if (instance_1)\n    return $getSolution(instance_1);\n  return '';\n}\n\nfunction loadExerciseToInstance(location_0){\n  !!instance_1 && $loadExercise(instance_1, location_0);\n}\n\ndefineSeed(478, 1, makeCastMap([Q$ActionListener]), ViPLab_0);\n_.actionPerformed = function actionPerformed(ev){\n  var ex, re, res;\n  if (maskUndefined(ev.source) === maskUndefined(this.compute)) {\n    try {\n      !!this.loadedExercise && $postSolution(this.poster, this.server, this.loadedExercise, this.source, ~~(Math.floor(Math.random() * 4294967296) - 2147483648));\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RestException)) {\n        re = $e0;\n        re.httpCode != 0?alert_0($__0(this.locale, 'StudentPanel.http_status', '' + re.httpCode)):alert_0($getLocalizedMessage(re));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.undo_0)) {\n    $undo(this.source);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.redo_0)) {\n    $redo(this.source);\n  }\n   else if (!!this.loadsavebutton && maskUndefined(ev.source) === maskUndefined(this.loadsavebutton) && !!this.loadsavedialog && !!this.source) {\n    $show_1(this.loadsavedialog, this.source);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.loader)) {\n    try {\n      ex = $getLoadedExercise(this.loader);\n      $showExercise(this, ex);\n    }\n     catch ($e1) {\n      $e1 = wrap($e1);\n      if (instanceOf($e1, Q$RestException)) {\n        re = $e1;\n        re.httpCode != 0?alert_0($__0(this.locale, 'StudentPanel.http_status', '' + re.httpCode)):alert_0($getLocalizedMessage(re));\n      }\n       else \n        throw unwrap_5($e1);\n    }\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.poster)) {\n    try {\n      res = $getResult_0(this.poster);\n      ev.id_0 >= 0?$loadResult(this, res):($setWidgetHidden_0(this.split_0, this.output, true) , $setWidgetSize(this.split_0, this.output, 0));\n    }\n     catch ($e2) {\n      $e2 = wrap($e2);\n      if (instanceOf($e2, Q$RestException)) {\n        re = $e2;\n        $setWidgetHidden_0(this.split_0, this.output, true);\n        $setWidgetSize(this.split_0, this.output, 0);\n        re.httpCode != 0?alert_0($__0(this.locale, 'StudentPanel.http_status', '' + re.httpCode)):alert_0($getLocalizedMessage(re));\n      }\n       else \n        throw unwrap_5($e2);\n    }\n  }\n}\n;\n_.showLines = false;\nvar instance_1;\nfunction $addOnChangeHandler(this$static, callback){\n  var editor = this$static.editor;\n  var callme = function(e){\n    callback.invokeAceCallback(e);\n  }\n  ;\n  editor.getSession().on('change', callme);\n  return callme;\n}\n\nfunction $getLength(this$static){\n  var editor = this$static.editor;\n  return editor.getSession().getLength();\n}\n\nfunction $getText(this$static){\n  var editor = this$static.editor;\n  return editor.getSession().getValue();\n}\n\nfunction $gotoLine(this$static, line, column){\n  var editor = this$static.editor;\n  editor.gotoLine(line, column);\n}\n\nfunction $redisplay(this$static){\n  var editor = this$static.editor;\n  editor.renderer.onResize(true);\n  editor.renderer.updateFull();\n  editor.resize();\n  editor.focus();\n}\n\nfunction $setFirstLineNumber(this$static, number){\n  var editor = this$static.editor;\n  editor.setOption('firstLineNumber', number);\n}\n\nfunction $setHighlightActiveLine(this$static, highlight){\n  var editor = this$static.editor;\n  editor.setHighlightActiveLine(highlight);\n}\n\nfunction $setModeByName(this$static, shortModeName){\n  var editor = this$static.editor;\n  var modeName = 'ace/mode/' + shortModeName;\n  var TheMode = $wnd.require(modeName).Mode;\n  editor.getSession().setMode(new TheMode);\n}\n\nfunction $setReadOnly(this$static, readOnly){\n  var editor = this$static.editor;\n  editor.setReadOnly(readOnly);\n}\n\nfunction $setShowGutter(this$static, showGutter){\n  var editor = this$static.editor;\n  editor.renderer.setShowGutter(showGutter);\n}\n\nfunction $setText_4(this$static, text_0){\n  var editor = this$static.editor;\n  editor.getSession().setValue(text_0);\n}\n\nfunction $setThemeByName(this$static, themeName){\n  var editor = this$static.editor;\n  editor.setTheme('ace/theme/' + themeName);\n}\n\nfunction $startEditor(this$static){\n  var editor = $wnd.ace.edit(this$static.divElement);\n  editor.getSession().setUseWorker(false);\n  this$static.editor = editor;\n  editor.resize();\n  this$static.redisplay;\n}\n\nfunction AceEditor_0(){\n  var div;\n  this.elementId = '_aceGWT' + nextId;\n  ++nextId;\n  div = new FlowPanel_0;\n  $setId(($clinit_DOM() , div.element_0), this.elementId);\n  $initWidget(this, div);\n  this.divElement = div.element_0;\n}\n\ndefineSeed(479, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), AceEditor_0);\n_.onResize_1 = function onResize_5(){\n  $redisplay(this);\n}\n;\n_.redisplay = function redisplay(){\n  $redisplay(this);\n}\n;\nvar nextId = 0;\nfunction $clinit_AceEditorMode(){\n  $clinit_AceEditorMode = nullMethod;\n  ABAP = new AceEditorMode_0('ABAP', 0, 'abap');\n  ACTIONSCRIPT = new AceEditorMode_0('ACTIONSCRIPT', 1, 'actionscript');\n  ADA = new AceEditorMode_0('ADA', 2, 'ada');\n  APACHE_CONF = new AceEditorMode_0('APACHE_CONF', 3, 'apache_conf');\n  ASCIIDOC = new AceEditorMode_0('ASCIIDOC', 4, 'asciidoc');\n  ASSEMBLY_X86 = new AceEditorMode_0('ASSEMBLY_X86', 5, 'assembly_x86');\n  AUTOHOTKEY = new AceEditorMode_0('AUTOHOTKEY', 6, 'autohotkey');\n  BATCHFILE = new AceEditorMode_0('BATCHFILE', 7, 'batchfile');\n  C9SEARCH = new AceEditorMode_0('C9SEARCH', 8, 'c9search');\n  C_CPP = new AceEditorMode_0('C_CPP', 9, 'c_cpp');\n  CIRRU = new AceEditorMode_0('CIRRU', 10, 'cirru');\n  CLOJURE = new AceEditorMode_0('CLOJURE', 11, 'clojure');\n  COBOL = new AceEditorMode_0('COBOL', 12, 'cobol');\n  COFFEE = new AceEditorMode_0('COFFEE', 13, 'coffee');\n  COLDFUSION = new AceEditorMode_0('COLDFUSION', 14, 'coldfusion');\n  CSHARP = new AceEditorMode_0('CSHARP', 15, 'csharp');\n  CSS_0 = new AceEditorMode_0('CSS', 16, 'css');\n  CURLY = new AceEditorMode_0('CURLY', 17, 'curly');\n  DART = new AceEditorMode_0('DART', 18, 'Dart');\n  DIFF = new AceEditorMode_0('DIFF', 19, 'diff');\n  DJANGO = new AceEditorMode_0('DJANGO', 20, 'django');\n  D = new AceEditorMode_0('D', 21, 'd');\n  DOT = new AceEditorMode_0('DOT', 22, 'dot');\n  EJS = new AceEditorMode_0('EJS', 23, 'ejs');\n  ERLANG = new AceEditorMode_0('ERLANG', 24, 'erlang');\n  FORTH = new AceEditorMode_0('FORTH', 25, 'forth');\n  FTL = new AceEditorMode_0('FTL', 26, 'ftl');\n  GHERKIN = new AceEditorMode_0('GHERKIN', 27, 'gherkin');\n  GLSL = new AceEditorMode_0('GLSL', 28, 'glsl');\n  GOLANG = new AceEditorMode_0('GOLANG', 29, 'golang');\n  GROOVY = new AceEditorMode_0('GROOVY', 30, 'groovy');\n  HAML = new AceEditorMode_0('HAML', 31, 'haml');\n  HANDLEBARS = new AceEditorMode_0('HANDLEBARS', 32, 'handlebars');\n  HASKELL = new AceEditorMode_0('HASKELL', 33, 'haskell');\n  HAXE = new AceEditorMode_0('HAXE', 34, 'haxe');\n  HTML_2 = new AceEditorMode_0('HTML', 35, 'html');\n  HTML_COMPLETIONS = new AceEditorMode_0('HTML_COMPLETIONS', 36, 'html_completions');\n  HTML_RUBY = new AceEditorMode_0('HTML_RUBY', 37, 'html_ruby');\n  INI = new AceEditorMode_0('INI', 38, 'ini');\n  JADE = new AceEditorMode_0('JADE', 39, 'jade');\n  JACK = new AceEditorMode_0('JACK', 40, 'jack');\n  JAVA = new AceEditorMode_0('JAVA', 41, 'java');\n  JAVASCRIPT = new AceEditorMode_0('JAVASCRIPT', 42, 'javascript');\n  JSONIQ = new AceEditorMode_0('JSONIQ', 43, 'jsoniq');\n  JSON_0 = new AceEditorMode_0('JSON', 44, 'json');\n  JSP = new AceEditorMode_0('JSP', 45, 'jsp');\n  JSX = new AceEditorMode_0('JSX', 46, 'jsx');\n  JULIA = new AceEditorMode_0('JULIA', 47, 'julia');\n  LATEX = new AceEditorMode_0('LATEX', 48, 'latex');\n  LESS = new AceEditorMode_0('LESS', 49, 'less');\n  LIQUID = new AceEditorMode_0('LIQUID', 50, 'liquid');\n  LISP = new AceEditorMode_0('LISP', 51, 'lisp');\n  LIVESCRIPT = new AceEditorMode_0('LIVESCRIPT', 52, 'livescript');\n  LOGIQL = new AceEditorMode_0('LOGIQL', 53, 'logiql');\n  LSL = new AceEditorMode_0('LSL', 54, 'lsl');\n  LUA = new AceEditorMode_0('LUA', 55, 'lua');\n  LUAPAGE = new AceEditorMode_0('LUAPAGE', 56, 'luapage');\n  LUCENE = new AceEditorMode_0('LUCENE', 57, 'lucene');\n  MAKEFILE = new AceEditorMode_0('MAKEFILE', 58, 'makefile');\n  MARKDOWN = new AceEditorMode_0('MARKDOWN', 59, 'markdown');\n  MATLAB = new AceEditorMode_0('MATLAB', 60, 'matlab');\n  MEL = new AceEditorMode_0('MEL', 61, 'mel');\n  MUSHCODE_HIGH_RULES = new AceEditorMode_0('MUSHCODE_HIGH_RULES', 62, 'mushcode_high_rules');\n  MUSHCODE = new AceEditorMode_0('MUSHCODE', 63, 'mushcode');\n  MYSQL = new AceEditorMode_0('MYSQL', 64, 'mysql');\n  NIX = new AceEditorMode_0('NIX', 65, 'nix');\n  OBJECTIVEC = new AceEditorMode_0('OBJECTIVEC', 66, 'objectivec');\n  OCAML = new AceEditorMode_0('OCAML', 67, 'ocaml');\n  PASCAL = new AceEditorMode_0('PASCAL', 68, 'pascal');\n  PERL = new AceEditorMode_0('PERL', 69, 'perl');\n  PGSQL = new AceEditorMode_0('PGSQL', 70, 'pgsql');\n  PHP = new AceEditorMode_0('PHP', 71, 'php');\n  PLAIN_TEXT = new AceEditorMode_0('PLAIN_TEXT', 72, 'plain_text');\n  POWERSHELL = new AceEditorMode_0('POWERSHELL', 73, 'powershell');\n  PROLOG = new AceEditorMode_0('PROLOG', 74, 'prolog');\n  PROPERTIES = new AceEditorMode_0('PROPERTIES', 75, 'properties');\n  PROTOBUF = new AceEditorMode_0('PROTOBUF', 76, 'protobuf');\n  PYTHON = new AceEditorMode_0('PYTHON', 77, 'python');\n  RDOC = new AceEditorMode_0('RDOC', 78, 'rdoc');\n  RHTML = new AceEditorMode_0('RHTML', 79, 'rhtml');\n  R = new AceEditorMode_0('R', 80, 'r');\n  RUBY = new AceEditorMode_0('RUBY', 81, 'ruby');\n  RUST = new AceEditorMode_0('RUST', 82, 'rust');\n  SASS = new AceEditorMode_0('SASS', 83, 'sass');\n  SCAD = new AceEditorMode_0('SCAD', 84, 'scad');\n  SCALA = new AceEditorMode_0('SCALA', 85, 'scala');\n  SCHEME = new AceEditorMode_0('SCHEME', 86, 'scheme');\n  SCSS = new AceEditorMode_0('SCSS', 87, 'scss');\n  SH = new AceEditorMode_0('SH', 88, 'sh');\n  SJS = new AceEditorMode_0('SJS', 89, 'sjs');\n  SMARTY = new AceEditorMode_0('SMARTY', 90, 'smarty');\n  SNIPPETS = new AceEditorMode_0('SNIPPETS', 91, 'snippets');\n  SOY_TEMPLATE = new AceEditorMode_0('SOY_TEMPLATE', 92, 'soy_template');\n  SPACE = new AceEditorMode_0('SPACE', 93, 'space');\n  SQL = new AceEditorMode_0('SQL', 94, 'sql');\n  STYLUS = new AceEditorMode_0('STYLUS', 95, 'stylus');\n  SVG = new AceEditorMode_0('SVG', 96, 'svg');\n  TCL = new AceEditorMode_0('TCL', 97, 'tcl');\n  TEX = new AceEditorMode_0('TEX', 98, 'tex');\n  TEXT_0 = new AceEditorMode_0('TEXT', 99, 'text');\n  TEXTILE = new AceEditorMode_0('TEXTILE', 100, 'textile');\n  TOML = new AceEditorMode_0('TOML', 101, 'toml');\n  TWIG = new AceEditorMode_0('TWIG', 102, 'twig');\n  TYPESCRIPT = new AceEditorMode_0('TYPESCRIPT', 103, 'typescript');\n  VBSCRIPT = new AceEditorMode_0('VBSCRIPT', 104, 'vbscript');\n  VELOCITY = new AceEditorMode_0('VELOCITY', 105, 'velocity');\n  VERILOG = new AceEditorMode_0('VERILOG', 106, 'verilog');\n  VHDL = new AceEditorMode_0('VHDL', 107, 'vhdl');\n  XML = new AceEditorMode_0('XML', 108, 'xml');\n  XQUERY = new AceEditorMode_0('XQUERY', 109, 'xquery');\n  YAML = new AceEditorMode_0('YAML', 110, 'yaml');\n  $VALUES_11 = initValues(_3Lviplab_client_ace_AceEditorMode_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$AceEditorMode, [ABAP, ACTIONSCRIPT, ADA, APACHE_CONF, ASCIIDOC, ASSEMBLY_X86, AUTOHOTKEY, BATCHFILE, C9SEARCH, C_CPP, CIRRU, CLOJURE, COBOL, COFFEE, COLDFUSION, CSHARP, CSS_0, CURLY, DART, DIFF, DJANGO, D, DOT, EJS, ERLANG, FORTH, FTL, GHERKIN, GLSL, GOLANG, GROOVY, HAML, HANDLEBARS, HASKELL, HAXE, HTML_2, HTML_COMPLETIONS, HTML_RUBY, INI, JADE, JACK, JAVA, JAVASCRIPT, JSONIQ, JSON_0, JSP, JSX, JULIA, LATEX, LESS, LIQUID, LISP, LIVESCRIPT, LOGIQL, LSL, LUA, LUAPAGE, LUCENE, MAKEFILE, MARKDOWN, MATLAB, MEL, MUSHCODE_HIGH_RULES, MUSHCODE, MYSQL, NIX, OBJECTIVEC, OCAML, PASCAL, PERL, PGSQL, PHP, PLAIN_TEXT, POWERSHELL, PROLOG, PROPERTIES, PROTOBUF, PYTHON, RDOC, RHTML, R, RUBY, RUST, SASS, SCAD, SCALA, SCHEME, SCSS, SH, SJS, SMARTY, SNIPPETS, SOY_TEMPLATE, SPACE, SQL, STYLUS, SVG, TCL, TEX, TEXT_0, TEXTILE, TOML, TWIG, TYPESCRIPT, VBSCRIPT, VELOCITY, VERILOG, VHDL, XML, XQUERY, YAML]);\n}\n\nfunction AceEditorMode_0(enum$name, enum$ordinal, name_0){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.name_0 = name_0;\n}\n\nfunction values_12(){\n  $clinit_AceEditorMode();\n  return $VALUES_11;\n}\n\ndefineSeed(480, 54, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$AceEditorMode]), AceEditorMode_0);\nvar $VALUES_11, ABAP, ACTIONSCRIPT, ADA, APACHE_CONF, ASCIIDOC, ASSEMBLY_X86, AUTOHOTKEY, BATCHFILE, C9SEARCH, CIRRU, CLOJURE, COBOL, COFFEE, COLDFUSION, CSHARP, CSS_0, CURLY, C_CPP, D, DART, DIFF, DJANGO, DOT, EJS, ERLANG, FORTH, FTL, GHERKIN, GLSL, GOLANG, GROOVY, HAML, HANDLEBARS, HASKELL, HAXE, HTML_2, HTML_COMPLETIONS, HTML_RUBY, INI, JACK, JADE, JAVA, JAVASCRIPT, JSON_0, JSONIQ, JSP, JSX, JULIA, LATEX, LESS, LIQUID, LISP, LIVESCRIPT, LOGIQL, LSL, LUA, LUAPAGE, LUCENE, MAKEFILE, MARKDOWN, MATLAB, MEL, MUSHCODE, MUSHCODE_HIGH_RULES, MYSQL, NIX, OBJECTIVEC, OCAML, PASCAL, PERL, PGSQL, PHP, PLAIN_TEXT, POWERSHELL, PROLOG, PROPERTIES, PROTOBUF, PYTHON, R, RDOC, RHTML, RUBY, RUST, SASS, SCAD, SCALA, SCHEME, SCSS, SH, SJS, SMARTY, SNIPPETS, SOY_TEMPLATE, SPACE, SQL, STYLUS, SVG, TCL, TEX, TEXT_0, TEXTILE, TOML, TWIG, TYPESCRIPT, VBSCRIPT, VELOCITY, VERILOG, VHDL, XML, XQUERY, YAML;\nfunction $clinit_AceEditorTheme(){\n  $clinit_AceEditorTheme = nullMethod;\n  AMBIANCE = new AceEditorTheme_0('AMBIANCE', 0, 'ambiance');\n  CHAOS = new AceEditorTheme_0('CHAOS', 1, 'chaos');\n  CHROME = new AceEditorTheme_0('CHROME', 2, 'chrome');\n  CLOUDS = new AceEditorTheme_0('CLOUDS', 3, 'clouds');\n  CLOUDS_MIDNIGHT = new AceEditorTheme_0('CLOUDS_MIDNIGHT', 4, 'clouds_midnight');\n  COBALT = new AceEditorTheme_0('COBALT', 5, 'cobalt');\n  CRIMSON_EDITOR = new AceEditorTheme_0('CRIMSON_EDITOR', 6, 'crimson_editor');\n  DAWN = new AceEditorTheme_0('DAWN', 7, 'dawn');\n  DREAMWEAVER = new AceEditorTheme_0('DREAMWEAVER', 8, 'dreamweaver');\n  ECLIPSE = new AceEditorTheme_0('ECLIPSE', 9, 'eclipse');\n  GITHUB = new AceEditorTheme_0('GITHUB', 10, 'github');\n  IDLE_FINGERS = new AceEditorTheme_0('IDLE_FINGERS', 11, 'idle_fingers');\n  KATZENMILCH = new AceEditorTheme_0('KATZENMILCH', 12, 'katzenmilch');\n  KR_THEME = new AceEditorTheme_0('KR_THEME', 13, 'kr_theme');\n  KR = new AceEditorTheme_0('KR', 14, 'kr');\n  KUROIR = new AceEditorTheme_0('KUROIR', 15, 'kuroir');\n  MERBIVORE = new AceEditorTheme_0('MERBIVORE', 16, 'merbivore');\n  MERBIVORE_SOFT = new AceEditorTheme_0('MERBIVORE_SOFT', 17, 'merbivore_soft');\n  MONO_INDUSTRIAL = new AceEditorTheme_0('MONO_INDUSTRIAL', 18, 'mono_industrial');\n  MONOKAI = new AceEditorTheme_0('MONOKAI', 19, 'monokai');\n  PASTEL_ON_DARK = new AceEditorTheme_0('PASTEL_ON_DARK', 20, 'pastel_on_dark');\n  SOLARIZED_DARK = new AceEditorTheme_0('SOLARIZED_DARK', 21, 'solarized_dark');\n  SOLARIZED_LIGHT = new AceEditorTheme_0('SOLARIZED_LIGHT', 22, 'solarized_light');\n  TERMINAL = new AceEditorTheme_0('TERMINAL', 23, 'terminal');\n  TEXTMATE = new AceEditorTheme_0('TEXTMATE', 24, 'textmate');\n  TOMORROW_NIGHT_BLUE = new AceEditorTheme_0('TOMORROW_NIGHT_BLUE', 25, 'tomorrow_night_blue');\n  TOMORROW_NIGHT_BRIGHT = new AceEditorTheme_0('TOMORROW_NIGHT_BRIGHT', 26, 'tomorrow_night_bright');\n  TOMORROW_NIGHT_EIGHTIES = new AceEditorTheme_0('TOMORROW_NIGHT_EIGHTIES', 27, 'tomorrow_night_eighties');\n  TOMORROW_NIGHT = new AceEditorTheme_0('TOMORROW_NIGHT', 28, 'tomorrow_night');\n  TOMORROW = new AceEditorTheme_0('TOMORROW', 29, 'tomorrow');\n  TWILIGHT = new AceEditorTheme_0('TWILIGHT', 30, 'twilight');\n  VIBRANT_INK = new AceEditorTheme_0('VIBRANT_INK', 31, 'vibrant_ink');\n  XCODE = new AceEditorTheme_0('XCODE', 32, 'xcode');\n  $VALUES_12 = initValues(_3Lviplab_client_ace_AceEditorTheme_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$AceEditorTheme, [AMBIANCE, CHAOS, CHROME, CLOUDS, CLOUDS_MIDNIGHT, COBALT, CRIMSON_EDITOR, DAWN, DREAMWEAVER, ECLIPSE, GITHUB, IDLE_FINGERS, KATZENMILCH, KR_THEME, KR, KUROIR, MERBIVORE, MERBIVORE_SOFT, MONO_INDUSTRIAL, MONOKAI, PASTEL_ON_DARK, SOLARIZED_DARK, SOLARIZED_LIGHT, TERMINAL, TEXTMATE, TOMORROW_NIGHT_BLUE, TOMORROW_NIGHT_BRIGHT, TOMORROW_NIGHT_EIGHTIES, TOMORROW_NIGHT, TOMORROW, TWILIGHT, VIBRANT_INK, XCODE]);\n}\n\nfunction AceEditorTheme_0(enum$name, enum$ordinal, name_0){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.name_0 = name_0;\n}\n\nfunction values_13(){\n  $clinit_AceEditorTheme();\n  return $VALUES_12;\n}\n\ndefineSeed(481, 54, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$AceEditorTheme]), AceEditorTheme_0);\nvar $VALUES_12, AMBIANCE, CHAOS, CHROME, CLOUDS, CLOUDS_MIDNIGHT, COBALT, CRIMSON_EDITOR, DAWN, DREAMWEAVER, ECLIPSE, GITHUB, IDLE_FINGERS, KATZENMILCH, KR, KR_THEME, KUROIR, MERBIVORE, MERBIVORE_SOFT, MONOKAI, MONO_INDUSTRIAL, PASTEL_ON_DARK, SOLARIZED_DARK, SOLARIZED_LIGHT, TERMINAL, TEXTMATE, TOMORROW, TOMORROW_NIGHT, TOMORROW_NIGHT_BLUE, TOMORROW_NIGHT_BRIGHT, TOMORROW_NIGHT_EIGHTIES, TWILIGHT, VIBRANT_INK, XCODE;\nfunction ActionEvent_0(src_0, id_0, cmd){\n  this.source = src_0;\n  this.id_0 = id_0;\n  this.command = cmd;\n}\n\ndefineSeed(482, 1, {}, ActionEvent_0);\n_.id_0 = 0;\nfunction $addActionListener(this$static, ev){\n  $add_5(this$static.listener, ev);\n}\n\nfunction $removeActionListener(this$static, ev){\n  $remove_13(this$static.listener, ev);\n}\n\nfunction $triggerActionEvent(this$static, e){\n  var al, al$iterator;\n  for (al$iterator = new AbstractList$IteratorImpl_0(this$static.listener); al$iterator.i < al$iterator.this$0_0.size_1();) {\n    al = dynamicCast($next_3(al$iterator), Q$ActionListener);\n    al.actionPerformed(e);\n  }\n}\n\nfunction ActionEventSource_0(){\n  this.listener = new ArrayList_0;\n}\n\ndefineSeed(483, 1, {}, ActionEventSource_0);\nfunction $triggerChangeEvent(this$static){\n  var cl$iterator;\n  for (cl$iterator = new AbstractList$IteratorImpl_0(this$static.listener); cl$iterator.i < cl$iterator.this$0_0.size_1();) {\n    throwClassCastExceptionUnlessNull($next_3(cl$iterator));\n    null.nullMethod();\n  }\n}\n\nfunction ChangeEventSource_0(){\n  this.listener = new ArrayList_0;\n}\n\ndefineSeed(484, 1, {}, ChangeEventSource_0);\nfunction ECSEvent_0(json){\n  var left, slidx, state;\n  try {\n    this.resource = getString(json, 'ressource');\n    state = getString(json, 'status');\n    slidx = this.resource.indexOf('/');\n    if (slidx > 0) {\n      left = $substring_0(this.resource, 0, slidx);\n      if ($equals('numlab', left)) {\n        this.resource = $substring(this.resource, slidx + 1);\n        slidx = this.resource.indexOf('/');\n        if (slidx > 0) {\n          this.queue = $substring_0(this.resource, 0, slidx);\n          this.resource = $substring(this.resource, slidx + 1);\n          try {\n            this.index_0 = new Integer_0(__parseAndValidateInt(this.resource));\n          }\n           catch ($e0) {\n            $e0 = wrap($e0);\n            if (!instanceOf($e0, Q$NumberFormatException))\n              throw unwrap_5($e0);\n          }\n        }\n      }\n    }\n    if ($equals('created', state))\n    ;\n    else if ($equals('deleted', state))\n    ;\n    else if ($equals('destroyed', state))\n    ;\n    else {\n      new JSONException_3('invalid ECS event with unknown state change received');\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (!instanceOf($e1, Q$JSONException))\n      throw unwrap_5($e1);\n  }\n}\n\nfunction ECSEvent_1(){\n  this.resource = null;\n}\n\ndefineSeed(485, 1, {}, ECSEvent_0, ECSEvent_1);\nfunction $addECSListener(this$static, ev){\n  $add_5(this$static.listener, ev);\n}\n\nfunction $triggerEvent(this$static, e){\n  var al, al$iterator;\n  for (al$iterator = new AbstractList$IteratorImpl_0(this$static.listener); al$iterator.i < al$iterator.this$0_0.size_1();) {\n    al = dynamicCast($next_3(al$iterator), Q$ECSListener);\n    $receivedEvent(al, e);\n  }\n}\n\nfunction ECSEventSource_0(){\n  this.listener = new ArrayList_0;\n}\n\ndefineSeed(486, 1, {}, ECSEventSource_0);\nfunction DataSet_0(w, h_0, xmin, xmax, ymin, ymax, time, label_0){\n  this.data_0 = initDims([_3_3D_classLit, _3D_classLit], [makeCastMap([Q$Serializable, Q$Object_$1]), makeCastMap([Q$double_$1, Q$Serializable])], [Q$double_$1, -1], [w, h_0], 2, 1);\n  this.width_0 = w;\n  this.height_0 = h_0;\n  this.xmin = xmin;\n  this.xmax = xmax;\n  this.ymin = ymin;\n  this.ymax = ymax;\n  this.time = time;\n  this.label_0 = label_0;\n}\n\ndefineSeed(487, 1, makeCastMap([Q$DataSet]), DataSet_0);\n_.height_0 = 0;\n_.time = 0;\n_.width_0 = 0;\n_.xmax = 0;\n_.xmin = 0;\n_.ymax = 0;\n_.ymin = 0;\nfunction $fitInto(this$static, width_0, height, xmin, ymin, xmax, ymax, cwidth, cheight){\n  var d_height, d_width, ext_xmax, ext_ymax, mx, my, scale, x_scale, y_scale;\n  ext_xmax = width_0 - 1 + 0.5;\n  ext_ymax = height - 1 + 0.5;\n  x_scale = (xmax - xmin) / width_0;\n  y_scale = (ymax - ymin) / height;\n  d_width = (ext_xmax - -0.5) * x_scale;\n  d_height = (ext_ymax - -0.5) * y_scale;\n  this$static.xscale = cwidth / d_width;\n  this$static.yscale = cheight / d_height;\n  scale = this$static.xscale < this$static.yscale?this$static.xscale:this$static.yscale;\n  this$static.xscale = scale * d_width / (ext_xmax - -0.5);\n  this$static.yscale = -scale * d_height / (ext_ymax - -0.5);\n  mx = cwidth - 1 - this$static.xscale * (ext_xmax - -0.5);\n  my = cheight - 1 - this$static.xscale * (ext_xmax - -0.5);\n  mx < 0 && (mx = 0);\n  my < 0 && (my = 0);\n  this$static.xoffset = 0.5 * this$static.xscale + mx / 2;\n  this$static.yoffset = 0.5 * this$static.yscale + cheight - 1 - my / 2;\n}\n\nfunction $render(this$static, ctx, d){\n  var data_0, height, v, width_0, x_0, x1, x2, xmax, xmin, y_0, y1, y2, ymax, ymin;\n  width_0 = d.width_0;\n  height = d.height_0;\n  data_0 = d.data_0;\n  !this$static.map_0 && $setFillStyleWeb(ctx, 'Gray');\n  for (y_0 = 0; y_0 < height; y_0++) {\n    for (x_0 = 0; x_0 < width_0; x_0++) {\n      x1 = (x_0 - 0.5) * this$static.xscale + this$static.xoffset;\n      x2 = (x_0 + 0.5) * this$static.xscale + this$static.xoffset;\n      y1 = (y_0 - 0.5) * this$static.yscale + this$static.yoffset;\n      y2 = (y_0 + 0.5) * this$static.yscale + this$static.yoffset;\n      xmin = x1 < x2?x1:x2;\n      ymin = y1 < y2?y1:y2;\n      xmax = x1 < x2?x2:x1;\n      ymax = y1 < y2?y2:y1;\n      v = data_0[x_0][y_0];\n      !!this$static.map_0 && $setFillStyleWeb(ctx, $toColor(this$static.map_0, v).color_0);\n      ctx.fillRect(xmin, ymin, xmax - xmin, ymax - ymin);\n    }\n  }\n  if (this$static.framecolor) {\n    $setStrokeStyleWeb(ctx, this$static.framecolor.color_0);\n    $beginPath(ctx);\n    for (y_0 = 0; y_0 < height; y_0++) {\n      for (x_0 = 0; x_0 < width_0; x_0++) {\n        x1 = (x_0 - 0.5) * this$static.xscale + this$static.xoffset;\n        x2 = (x_0 + 0.5) * this$static.xscale + this$static.xoffset;\n        y1 = (y_0 - 0.5) * this$static.yscale + this$static.yoffset;\n        y2 = (y_0 + 0.5) * this$static.yscale + this$static.yoffset;\n        xmin = x1 < x2?x1:x2;\n        ymin = y1 < y2?y1:y2;\n        xmax = x1 < x2?x2:x1;\n        ymax = y1 < y2?y2:y1;\n        ctx.rect(xmin, ymin, xmax - xmin, ymax - ymin);\n      }\n    }\n    $stroke(ctx);\n  }\n}\n\nfunction $scale(this$static, factor){\n  this$static.xscale *= factor;\n  this$static.yscale *= factor;\n}\n\nfunction $setColormap(this$static, m_0){\n  this$static.map_0 = m_0;\n}\n\nfunction $setFrameColor(this$static, fc){\n  this$static.framecolor = fc;\n}\n\nfunction $shift(this$static, dx, dy){\n  this$static.xoffset += dx;\n  this$static.yoffset += dy;\n}\n\nfunction DataSetView_0(){\n}\n\ndefineSeed(488, 1, {}, DataSetView_0);\n_.xoffset = 0;\n_.xscale = 0;\n_.yoffset = 0;\n_.yscale = 0;\nfunction $onResize_1(this$static){\n  this$static.resize_0 = true;\n  $paint(this$static);\n}\n\nfunction $paint(this$static){\n  var ctx;\n  if (this$static.width_0 > 0 && this$static.height_0 > 0 && !!this$static.data_0) {\n    ctx = $getElement(this$static.canvas).getContext('2d');\n    if (this$static.resize_0) {\n      $fitInto(this$static.view, this$static.data_0.width_0, this$static.data_0.height_0, this$static.data_0.xmin, this$static.data_0.ymin, this$static.data_0.xmax, this$static.data_0.ymax, this$static.width_0, this$static.height_0);\n      this$static.resize_0 = false;\n    }\n    $save(ctx);\n    $beginPath(ctx);\n    $setStrokeStyleWeb(ctx, 'White');\n    $setGlobalAlpha(ctx, 0);\n    $rect(ctx, 0, 0, this$static.width_0, this$static.height_0);\n    $stroke(ctx);\n    $closePath(ctx);\n    $clip(ctx);\n    $setGlobalAlpha(ctx, 1);\n    $setFillStyleWeb(ctx, 'White');\n    $fillRect(ctx, 0, 0, this$static.width_0, this$static.height_0);\n    $render(this$static.view, ctx, this$static.data_0);\n    $restore(ctx);\n  }\n}\n\nfunction $render_0(this$static, width_0, height){\n  this$static.width_0 = width_0;\n  this$static.height_0 = height;\n  $paint(this$static);\n}\n\nfunction $setData(this$static, d){\n  this$static.data_0 = d;\n}\n\nfunction GridPanel_0(c, d, v){\n  this.data_0 = d;\n  this.view = v;\n  this.canvas = c;\n  this.resize_0 = true;\n  $addDomHandler(c, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_2));\n  $addDomHandler(c, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_6));\n  $addDomHandler(c, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_3));\n  $addDomHandler(c, this, ($clinit_MouseWheelEvent() , $clinit_MouseWheelEvent() , TYPE_7));\n}\n\ndefineSeed(489, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$MouseWheelHandler, Q$EventHandler]), GridPanel_0);\n_.execute = function execute_15(timestamp){\n  $paint(this);\n}\n;\n_.onMouseDown = function onMouseDown_0(event_0){\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons = $eventGetButton(event_0.nativeEvent);\n  this.sx = $getX(event_0);\n  this.sy = $getY(event_0);\n}\n;\n_.onMouseMove = function onMouseMove_0(event_0){\n  var nx, ny;\n  nx = $getX(event_0);\n  ny = $getY(event_0);\n  $eventPreventDefault(event_0.nativeEvent);\n  if (nx != this.sx || ny != this.sy) {\n    if ((this.buttons & 3) != 0) {\n      $shift(this.view, nx - this.sx, ny - this.sy);\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n      this.sx = nx;\n      this.sy = ny;\n    }\n  }\n}\n;\n_.onMouseUp = function onMouseUp_0(event_0){\n  var up;\n  up = $eventGetButton(event_0.nativeEvent);\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons &= ~up;\n}\n;\n_.onMouseWheel = function onMouseWheel(event_0){\n  var notches;\n  $eventPreventDefault(event_0.nativeEvent);\n  notches = getNotches(event_0.nativeEvent);\n  if (notches > 0) {\n    while (notches > 0) {\n      $scale(this.view, 1.1);\n      --notches;\n    }\n  }\n   else {\n    while (notches < 0) {\n      $scale(this.view, 0.9090909090909091);\n      ++notches;\n    }\n  }\n  $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n}\n;\n_.buttons = 0;\n_.height_0 = 0;\n_.resize_0 = false;\n_.sx = 0;\n_.sy = 0;\n_.width_0 = 0;\nfunction $buildColormap(this$static, label_0){\n  var cmax, cmin, d, d$iterator, dt, height, map_0, max_0, min_0, v, width_0, x_0, y_0;\n  min_0 = 1.7976931348623157E308;\n  max_0 = -1.7976931348623157E308;\n  cmin = null;\n  cmax = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (label_0 == null || $equals(label_0, d.label_0)) {\n      width_0 = d.width_0;\n      height = d.height_0;\n      dt = d.data_0;\n      if (!cmin && !cmax && 0 < this$static.colorMin.size_0 && 0 < this$static.colorMax.size_0) {\n        cmin = dynamicCast($get_5(this$static.colorMin, 0), Q$Color);\n        cmax = dynamicCast($get_5(this$static.colorMax, 0), Q$Color);\n      }\n      for (y_0 = 0; y_0 < height; y_0++) {\n        for (x_0 = 0; x_0 < width_0; x_0++) {\n          v = dt[x_0][y_0];\n          v < min_0 && (min_0 = v);\n          v > max_0 && (max_0 = v);\n        }\n      }\n    }\n  }\n  !!cmin & !!cmax?(map_0 = new RGBInterpolatingMap_0(cmin, cmax)):(map_0 = new DefaultMap_0);\n  map_0.min_0 = min_0;\n  map_0.max_0 = max_0;\n  return map_0;\n}\n\nfunction $findLabels(this$static){\n  var d, d$iterator, label_0;\n  this$static.labels = new ArrayList_0;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    label_0 = d.label_0;\n    label_0 == null && (label_0 = '');\n    $indexOf_4(this$static.labels, label_0, 0) != -1 || $add_5(this$static.labels, label_0);\n  }\n  this$static.labels.size_0 < 1 && (this$static.labels = null);\n}\n\nfunction $findTimes(this$static){\n  var d, d$iterator, max_0, min_0, time;\n  min_0 = 1.7976931348623157E308;\n  max_0 = -1.7976931348623157E308;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    time = d.time;\n    time < min_0 && (min_0 = time);\n    time > max_0 && (max_0 = time);\n  }\n  if (min_0 <= max_0) {\n    this$static.start_time = min_0;\n    this$static.end_time = max_0;\n    this$static.current_time = min_0;\n  }\n}\n\nfunction $getFirstSet(this$static){\n  var d, d$iterator, min_0, minarg;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (this$static.current_label == null || $equals(this$static.current_label, d.label_0)) {\n      if (d.time < min_0) {\n        min_0 = d.time;\n        minarg = d;\n      }\n    }\n  }\n  return minarg;\n}\n\nfunction $getLastSet(this$static){\n  var d, d$iterator, max_0, maxarg;\n  max_0 = -1.7976931348623157E308;\n  maxarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (this$static.current_label == null || $equals(this$static.current_label, d.label_0)) {\n      if (d.time > max_0) {\n        max_0 = d.time;\n        maxarg = d;\n      }\n    }\n  }\n  return maxarg;\n}\n\nfunction $getNamedSet(this$static, label_0){\n  var d, d$iterator, min_0, minarg, time;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (label_0 == null || $equals(label_0, d.label_0)) {\n      time = d.time;\n      time >= this$static.current_time?(time = time - this$static.current_time):(time = this$static.current_time - time);\n      if (time < min_0) {\n        min_0 = time;\n        minarg = d;\n      }\n    }\n  }\n  return minarg;\n}\n\nfunction $getNextSet(this$static){\n  var d, d$iterator, min_0, minarg;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (this$static.current_label == null || $equals(this$static.current_label, d.label_0)) {\n      if (d.time < min_0 && d.time > this$static.current_time) {\n        min_0 = d.time;\n        minarg = d;\n      }\n    }\n  }\n  return minarg;\n}\n\nfunction $getPrevSet(this$static){\n  var d, d$iterator, max_0, maxarg;\n  max_0 = -1.7976931348623157E308;\n  maxarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet);\n    if (this$static.current_label == null || $equals(this$static.current_label, d.label_0)) {\n      if (d.time > max_0 && d.time < this$static.current_time) {\n        max_0 = d.time;\n        maxarg = d;\n      }\n    }\n  }\n  return maxarg;\n}\n\nfunction $paintPlot(this$static, canvas){\n  var ctx, h_0, lwidth, w;\n  w = ($clinit_DOM() , canvas.element_0).clientWidth | 0;\n  h_0 = canvas.element_0.clientHeight | 0;\n  if (w > 0 && h_0 > 0 && !!this$static.data_0) {\n    ctx = canvas.element_0.getContext('2d');\n    $setWidth(canvas.element_0, w);\n    $setHeight(canvas.element_0, h_0);\n    $setFillStyleWeb(ctx, 'White');\n    $fillRect(ctx, 0, 0, w, h_0);\n    if (this$static.label_0) {\n      lwidth = 64;\n      w < 256 && (lwidth = ~~(w / 8));\n      if (lwidth > 8) {\n        $render_2(this$static.label_0, ctx, lwidth - 4, h_0, w - lwidth + 4);\n        w -= lwidth;\n      }\n    }\n    !!this$static.panel && $render_0(this$static.panel, w, h_0);\n  }\n}\n\nfunction $replotDataSet(this$static, nd){\n  if (nd) {\n    this$static.current_time = nd.time;\n    this$static.current_label = nd.label_0;\n    $setTime(this$static.timectrl, this$static.current_time);\n    $setData(this$static.panel, nd);\n    $paintPlot(this$static, this$static.canvas);\n  }\n}\n\nfunction GridPlot_0(c, d, min_0, max_0){\n  var label_0, label$iterator;\n  this.canvas = c;\n  this.data_0 = d;\n  this.colorMin = min_0;\n  this.colorMax = max_0;\n  $findLabels(this);\n  $findTimes(this);\n  this.animation = new GridPlotAnimation_0(this);\n  this.vpanel = new VerticalPanel_0;\n  $setWidth_0(this.vpanel, '100%');\n  $setHeight_0(this.vpanel, '100%');\n  $setPropertyImpl($getElement(this.vpanel).style, 'backgroundColor', 'LightGray');\n  $add_2(this.vpanel, c);\n  if (d.size_0 > 0) {\n    this.current_time = (checkIndex(0, d.size_0) , dynamicCast(d.array[0], Q$DataSet)).time;\n    this.current_label = (checkIndex(0, d.size_0) , dynamicCast(d.array[0], Q$DataSet)).label_0;\n    this.view = new DataSetView_0;\n    $setColormap(this.view, $buildColormap(this, this.current_label));\n    $setFrameColor(this.view, new Color_0(0, 0, 0));\n    this.panel = new GridPanel_0(this.canvas, (checkIndex(0, d.size_0) , dynamicCast(d.array[0], Q$DataSet)), this.view);\n    this.label_0 = new ColorLabelPanel_0;\n    $setOutlineColormap(this.label_0, this.view.map_0);\n  }\n   else {\n    this.label_0 = null;\n  }\n  if (this.labels) {\n    this.labelbox = new ListBox_0;\n    for (label$iterator = new AbstractList$IteratorImpl_0(this.labels); label$iterator.i < label$iterator.this$0_0.size_1();) {\n      label_0 = dynamicCast($next_3(label$iterator), Q$String);\n      $addItem(this.labelbox, label_0);\n    }\n    $setVisibleItemCount(this.labelbox, 1);\n    $addDomHandler(this.labelbox, this, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n    $add_2(this.vpanel, this.labelbox);\n  }\n  if (this.start_time < this.end_time) {\n    this.timectrl = new TimeControl_0(this.current_time);\n    $addActionListener_6(this.timectrl, this);\n    $add_2(this.vpanel, this.timectrl);\n  }\n   else {\n    this.timectrl = null;\n  }\n}\n\ndefineSeed(490, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler, Q$ActionListener]), GridPlot_0);\n_.actionPerformed = function actionPerformed_0(ae){\n  if ($equals('play', ae.command)) {\n    this.animation.running?(this.animation.running = false):$startAnimation(this.animation);\n  }\n   else {\n    this.animation.running = false;\n    $equals('first', ae.command)?$replotDataSet(this, $getFirstSet(this)):$equals('prev', ae.command)?$replotDataSet(this, $getPrevSet(this)):$equals('next', ae.command)?$replotDataSet(this, $getNextSet(this)):$equals('last', ae.command) && $replotDataSet(this, $getLastSet(this));\n  }\n}\n;\n_.getGUI = function getGUI(){\n  return this.vpanel;\n}\n;\n_.getLegendWidth = function getLegendWidth(){\n  return 0;\n}\n;\n_.getMinimumRequiredHeight = function getMinimumRequiredHeight(){\n  var h_0, height;\n  if (this.vpanel) {\n    height = 0;\n    if (this.timectrl) {\n      h_0 = $getElement(this.timectrl).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    if (this.labelbox) {\n      h_0 = $getElement(this.labelbox).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    return height;\n  }\n   else {\n    return -1;\n  }\n}\n;\n_.onChange = function onChange(ch_0){\n  var data_0, idx, newlbl;\n  idx = $getElement(this.labelbox).selectedIndex;\n  newlbl = dynamicCast($get_5(this.labels, idx), Q$String);\n  data_0 = $getNamedSet(this, newlbl);\n  this.animation.running = false;\n  if (data_0) {\n    $setColormap(this.view, $buildColormap(this, newlbl));\n    $replotDataSet(this, data_0);\n  }\n}\n;\n_.onResize_1 = function onResize_6(){\n  !!this.panel && $onResize_1(this.panel);\n}\n;\n_.paintLegend = function paintLegend(g){\n}\n;\n_.paintPlot = function paintPlot(canvas){\n  $paintPlot(this, canvas);\n}\n;\n_.current_time = 0;\n_.end_time = 0;\n_.start_time = 0;\nfunction $startAnimation(this$static){\n  if (!this$static.running) {\n    this$static.running = true;\n    $schedule(this$static, 1000);\n  }\n}\n\nfunction GridPlotAnimation_0(p){\n  Timer_0.call(this);\n  this.parent_0 = p;\n  this.running = false;\n}\n\ndefineSeed(491, 10, {}, GridPlotAnimation_0);\n_.run = function run_1(){\n  var next;\n  if (this.running) {\n    next = $getNextSet(this.parent_0);\n    if (next) {\n      $replotDataSet(this.parent_0, next);\n      $schedule(this, 1000);\n    }\n  }\n}\n;\n_.running = false;\nfunction $parseFile(this$static, reader){\n  var args, b, blank, cmax, cmin, d, g, height, idx, label_0, r, raw, s, time, tl, v, width_0, x_0, xmax, xmin, y_0, ymax, ymin, z_0;\n  width_0 = 0;\n  height = 0;\n  x_0 = 0;\n  y_0 = 0;\n  xmin = 0;\n  ymin = 0;\n  xmax = 0;\n  ymax = 0;\n  tl = new ArrayList_0;\n  d = null;\n  label_0 = null;\n  time = 0;\n  cmin = null;\n  cmax = null;\n  this$static.min_0 = new ArrayList_0;\n  this$static.max_0 = new ArrayList_0;\n  do {\n    s = $readLine(reader);\n    if (s != null && !$equals(s, '\\n') && s.indexOf('##') != 0) {\n      if (s.indexOf('#') == 0) {\n        s = $trim($substring(s, 1));\n        blank = s.indexOf(' ');\n        if (blank >= 0) {\n          raw = $trim($substring(s, blank + 1));\n          args = $split(raw, '\\\\s', 0);\n          s = $substring_0(s, 0, blank);\n        }\n         else {\n          args = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0);\n          raw = '';\n        }\n        d = null;\n        x_0 = 0;\n        y_0 = 0;\n        if ($equalsIgnoreCase(s, 'x-range')) {\n          xmin = __parseAndValidateDouble(args[0]);\n          xmax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-range')) {\n          ymin = __parseAndValidateDouble(args[0]);\n          ymax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'x-count')) {\n          width_0 = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-count')) {\n          height = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'min-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          cmin = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'max-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          cmax = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'scale')) {\n          __parseAndValidateDouble(args[0]);\n          __parseAndValidateDouble(args[1]);\n          __parseAndValidateDouble(args[2]);\n        }\n         else \n          $equalsIgnoreCase(s, 'time')?(time = __parseAndValidateDouble(args[0])):$equalsIgnoreCase(s, 'label') && (label_0 = raw);\n      }\n       else {\n        v = $split(s, '\\\\s', 0);\n        if (width_0 <= 1 || height <= 1)\n          throw new IOException_0('invalid input format, width and height of the array are missing');\n        if (xmax <= xmin || ymax <= ymin)\n          throw new IOException_0('invalid input format, plot range is zero or negative');\n        if (!d) {\n          d = new DataSet_0(width_0, height, xmin, xmax, ymin, ymax, time, label_0);\n          setCheck(tl.array, tl.size_0++, d);\n          $add_5(this$static.min_0, cmin);\n          $add_5(this$static.max_0, cmax);\n          cmin = null;\n          cmax = null;\n        }\n        for (idx = 0; idx < v.length; idx++) {\n          z_0 = __parseAndValidateDouble(v[idx]);\n          d.data_0[x_0][y_0] = z_0;\n          ++x_0;\n          if (x_0 >= width_0) {\n            x_0 = 0;\n            ++y_0;\n          }\n        }\n      }\n    }\n  }\n   while (s != null);\n  return tl;\n}\n\nfunction GridPlotParser_0(){\n}\n\ndefineSeed(492, 1, {}, GridPlotParser_0);\nfunction $addActionListener_0(this$static, al){\n  $addActionListener(this$static.listeners, al);\n}\n\nfunction $setEnabled_0(this$static, onoff){\n  $setEnabled(this$static.button_0, onoff);\n}\n\nfunction $setToolTipText(this$static, text_0){\n  $setTitle(this$static.button_0, text_0);\n}\n\nfunction $setVisible_1(this$static, onoff){\n  $setVisible(this$static.button_0, onoff);\n}\n\nfunction Button_2(title_0, id_0, cmd){\n  this.listeners = new ActionEventSource_0;\n  this.command = cmd;\n  this.actionid = id_0;\n  this.button_0 = new Button_0(title_0, this);\n  $initWidget(this, this.button_0);\n}\n\nfunction Button_3(icon, title_0, id_0, cmd){\n  var base;\n  base = getModuleBaseURL() + '../';\n  this.listeners = new ActionEventSource_0;\n  this.command = cmd;\n  this.actionid = id_0;\n  this.button_0 = new Button_0(title_0, this);\n  $setHTML(this.button_0, '<img src=\"' + base + icon + '\" alt=\"' + title_0 + '\">');\n  $setPropertyImpl($getElement(this.button_0).style, 'padding-top', '0ex');\n  $setPropertyImpl($getElement(this.button_0).style, 'padding-bottom', '0ex');\n  $initWidget(this, this.button_0);\n}\n\ndefineSeed(493, 336, makeCastMap([Q$ClickHandler, Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), Button_2, Button_3);\n_.getElement = function getElement_0(){\n  return $getElement(this.button_0);\n}\n;\n_.onClick = function onClick(ev){\n  $triggerActionEvent(this.listeners, new ActionEvent_0(this, this.actionid, this.command));\n}\n;\n_.actionid = 0;\nfunction $registerContextLostEvent(canvas){\n  canvas.addEventListener('webglcontextlost', function(event_0){\n    event_0.preventDefault();\n  }\n  , false);\n}\n\nfunction $setCoordinateSpaceHeight(this$static, height){\n  $setHeight(($clinit_DOM() , this$static.element_0), height);\n}\n\nfunction $setCoordinateSpaceWidth(this$static, width_0){\n  $setWidth(($clinit_DOM() , this$static.element_0), width_0);\n}\n\nfunction Canvas_1(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.eventsToSink == -1?sinkEvents(this.element_0, 393340 | (this.element_0.__eventBits || 0)):(this.eventsToSink |= 393340);\n}\n\nfunction createIfSupported(){\n  var element;\n  element = $doc.createElement('canvas');\n  if (!element.getContext) {\n    return null;\n  }\n  return new Canvas_1(element);\n}\n\nfunction createPreservingContext(canvas, name_0){\n  return canvas.getContext(name_0, {preserveDrawingBuffer:true});\n}\n\nfunction getNotches(event_0){\n  if (event_0.detail) {\n    return event_0.detail / 2;\n  }\n   else if (event_0.wheelDelta) {\n    return -event_0.wheelDelta / 512;\n  }\n   else {\n    return 0;\n  }\n}\n\ndefineSeed(494, 329, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Canvas_1);\n_.onBrowserEvent = function onBrowserEvent_6(event_0){\n  $eventPreventDefault(event_0);\n  $eventStopPropagation(event_0);\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 1:\n    case 8:\n    case 64:\n    case 131072:\n    case 32:\n    case 4:\n      fireNativeEvent(event_0, this, this.element_0);\n      break;\n    case 16:\n      fireNativeEvent(event_0, this, this.element_0);\n  }\n}\n;\nfunction Color_0(red, green, blue){\n  this.r = red;\n  this.g = green;\n  this.b = blue;\n  this.color_0 = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n}\n\ndefineSeed(495, 1, makeCastMap([Q$Color]), Color_0);\n_.b = 0;\n_.g = 0;\n_.r = 0;\nfunction $showErrors(this$static, err){\n  var base, ee, ee$iterator, icon, idx, link_0, msg, text_0;\n  idx = 0;\n  base = getModuleBaseURL() + '../';\n  if ($isError_0(err)) {\n    text_0 = $_(this$static.locale, 'ErrorRequester.ErrorTitle');\n    icon = '<img src=\"' + base + 'errorIcon.png\" alt=\"Error\">';\n  }\n   else {\n    text_0 = $_(this$static.locale, 'ErrorRequester.WarningTitle');\n    icon = '<img src=\"' + base + 'warningIcon.png\" alt=\"Warning\">';\n  }\n  this$static.errors = err;\n  $add_2(this$static.vpanel, new HTML_1('&nbsp' + icon + ' &nbsp ' + text_0));\n  for (ee$iterator = new AbstractList$IteratorImpl_0(this$static.errors.errors); ee$iterator.i < ee$iterator.this$0_0.size_1();) {\n    ee = dynamicCast($next_3(ee$iterator), Q$ErrorElement);\n    msg = ee.message_0;\n    msg == null && ($isError(ee)?(msg = $_(this$static.locale, 'ErrorRequester.GenericErrorMsg')):(msg = $_(this$static.locale, 'ErrorRequester.GenericWarningMsg')));\n    link_0 = new Anchor_1(msg);\n    $add_2(this$static.vpanel, link_0);\n    $addDomHandler(link_0, new InteractiveOutput$ErrorCell_0(this$static.sources, ee), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n    ++idx;\n  }\n}\n\nfunction InteractiveOutput_0(source, initial){\n  var html, linebreak;\n  html = '';\n  while ((linebreak = initial.indexOf('\\n')) >= 0) {\n    linebreak > 0 && (html = html + htmlEscape($substring_0(initial, 0, linebreak)));\n    linebreak + 1 < initial.length?(initial = $substring(initial, linebreak + 1)):(initial = '');\n    html = html + '<br>';\n  }\n  html = html + htmlEscape(initial);\n  this.sources = source;\n  this.locale = new Locale_0;\n  this.content_0 = new HTML_1(html);\n  this.vpanel = new VerticalPanel_0;\n  $add_2(this.vpanel, this.content_0);\n  this.scroller = new ScrollPanel_0(this.vpanel);\n  $initWidget(this, this.scroller);\n}\n\ndefineSeed(496, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), InteractiveOutput_0);\nfunction InteractiveOutput$ErrorCell_0(editor, err){\n  this.editors = editor;\n  this.error = err;\n}\n\ndefineSeed(497, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), InteractiveOutput$ErrorCell_0);\n_.onClick = function onClick_0(event_0){\n  var column, element, line;\n  element = this.error.element_0;\n  line = this.error.line;\n  column = this.error.column;\n  element != null && $gotoLine_0(this.editors, element, line, column);\n}\n;\nfunction $fixTabName(this$static, name_0, isheader){\n  var annex, idx;\n  annex = isheader?$getHeaderAppendix(this$static):$getSourceAppendix(this$static);\n  if (annex == null)\n    return name_0;\n  if ($endsWith(name_0, annex))\n    return name_0;\n  idx = name_0.lastIndexOf('.');\n  if (idx > 0) {\n    return $substring_0(name_0, 0, idx) + annex;\n  }\n   else if (idx == 0) {\n    return 'source' + annex;\n  }\n  return name_0 + annex;\n}\n\nfunction $fixUnitName(this$static, name_0, type_0){\n  switch (type_0) {\n    case 0:\n      return $fixTabName(this$static, name_0, false);\n    case 1:\n      return $fixTabName(this$static, name_0, true);\n    default:return name_0;\n  }\n}\n\nfunction $getHeaderAppendix(this$static){\n  switch (this$static.lang_0) {\n    case 2:\n      return '.h';\n    case 4:\n      return '.hpp';\n    case 5:\n    case 0:\n    case 1:\n    case 3:\n      return null;\n  }\n  return null;\n}\n\nfunction $getSourceAppendix(this$static){\n  switch (this$static.lang_0) {\n    case 2:\n      return '.c';\n    case 4:\n      return '.cpp';\n    case 5:\n      return '.java';\n    case 0:\n    case 1:\n      return '.m';\n    case 3:\n      return null;\n  }\n  return null;\n}\n\nfunction $setLanguage(this$static, chain){\n  $equalsIgnoreCase('Matlab', chain)?(this$static.lang_0 = 1):$equalsIgnoreCase('C', chain)?(this$static.lang_0 = 2):$equalsIgnoreCase('DuMux', chain)?(this$static.lang_0 = 3):$equalsIgnoreCase('Octave', chain)?(this$static.lang_0 = 0):$equalsIgnoreCase('C++', chain)?(this$static.lang_0 = 4):$equalsIgnoreCase('Java', chain)?(this$static.lang_0 = 5):(this$static.lang_0 = 1);\n}\n\nfunction LanguageSelector_0(){\n  this.lang_0 = 1;\n}\n\ndefineSeed(498, 1, {}, LanguageSelector_0);\n_.lang_0 = 0;\nfunction $createDownloadZIP(source){\n  var cnt, entry, folder, sce, vms, vms$iterator, w, w$iterator, zip;\n  zip = new ZIP_0;\n  cnt = 1;\n  for (vms$iterator = new AbstractList$IteratorImpl_0(source.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    folder = vms.name_0;\n    entry = 0;\n    if (folder == null || $equals('', folder)) {\n      folder = 'Source_' + cnt;\n      ++cnt;\n    }\n    for (w$iterator = new AbstractList$IteratorImpl_0(vms.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator), Q$Widget);\n      if (instanceOf(w, Q$EditorInterface)) {\n        sce = dynamicCast(w, Q$EditorInterface);\n        ++entry;\n        sce.editable && new ZIPObject_0($internalFile(zip, folder + '/' + entry, sce.started && !!sce.text_0?$getText(sce.text_0):sce.initial));\n      }\n    }\n  }\n  return zip;\n}\n\nfunction $loadFromZIP(source, zip){\n  var cnt, entry, folder, ok, sce, vms, vms$iterator, w, w$iterator, zob;\n  cnt = 1;\n  ok = false;\n  for (vms$iterator = new AbstractList$IteratorImpl_0(source.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    folder = vms.name_0;\n    entry = 0;\n    if (folder == null || $equals('', folder)) {\n      folder = 'Source_' + cnt;\n      ++cnt;\n    }\n    for (w$iterator = new AbstractList$IteratorImpl_0(vms.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator), Q$Widget);\n      if (instanceOf(w, Q$EditorInterface)) {\n        sce = dynamicCast(w, Q$EditorInterface);\n        ++entry;\n        if (sce.editable) {\n          zob = $openFile(zip, folder + '/' + entry);\n          if (!!zob && !zob.zipobject.dir) {\n            $setText_5(sce, $getTextContent(zob));\n            ok = true;\n          }\n        }\n      }\n    }\n  }\n  return ok;\n}\n\nfunction $onSubmit(this$static){\n  if (isSupported_0()) {\n    loadFile_0(this$static, this$static.upload);\n  }\n   else {\n    $hide_0(this$static.dialog, false);\n    alert_0($_(this$static.locale, 'LoadSaveDialog.not_supported'));\n  }\n}\n\nfunction $show_1(this$static, source){\n  var url_0;\n  if (this$static.link_0) {\n    url_0 = 'data:application/zip;base64,' + $internalGenerate($createDownloadZIP(source));\n    $setHTML_0(this$static.link_0, '<a href=\"' + url_0 + '\" download=\"' + $_(this$static.locale, 'LoadSaveDialog.default_filename') + '\">' + $_(this$static.locale, 'LoadSaveDialog.save') + '<\\/a>');\n  }\n  this$static.project = source;\n  $center(this$static.dialog);\n  $show_0(this$static.dialog);\n}\n\nfunction LoadSaveDialog_0(){\n  this.locale = new Locale_0;\n  this.dialog = new DialogBox_0;\n  this.vpanel = new VerticalPanel_0;\n  $setWidth_0(this.vpanel, '100%');\n  $setHeight_0(this.vpanel, '100%');\n  $setPropertyImpl($getElement(this.vpanel).style, 'backgroundColor', 'LightGray');\n  $setVerticalAlignment_0(this.vpanel, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));\n  this.hpanel = new HorizontalPanel_0;\n  $setWidth_0(this.hpanel, '100%');\n  $setHeight_0(this.hpanel, '4x');\n  $setHorizontalAlignment(this.hpanel, ($clinit_HasHorizontalAlignment() , ALIGN_RIGHT));\n  $setPropertyImpl($getElement(this.hpanel).style, 'backgroundColor', 'white');\n  this.closebutton = new Button_2($_(this.locale, 'LoadSaveDialog.button_close'), 0, 'close');\n  $addActionListener_0(this.closebutton, this);\n  $setWidth_0(this.closebutton, '25%');\n  $setHeight_0(this.closebutton, '4ex');\n  $add_1(this.hpanel, this.closebutton);\n  this.dpanel = new VerticalPanel_0;\n  $setWidth_0(this.dpanel, '100%');\n  $setHeight_0(this.dpanel, '6ex');\n  $setVerticalAlignment_0(this.dpanel, ALIGN_MIDDLE);\n  this.npanel = new HorizontalPanel_0;\n  $setWidth_0(this.npanel, '100%');\n  $setHeight_0(this.npanel, '4ex');\n  $setHorizontalAlignment(this.npanel, ALIGN_RIGHT);\n  if (isSupported_1() || isBlobSupported()) {\n    this.download_0 = new Button_2($_(this.locale, 'LoadSaveDialog.save'), 1, 'download');\n    $addActionListener_0(this.download_0, this);\n    this.filename = new TextBox_0;\n    $setMaxLength_0(this.filename, 64);\n    $setText_3(this.filename, $_(this.locale, 'LoadSaveDialog.default_filename'));\n    $add_1(this.npanel, this.filename);\n    $add_1(this.npanel, this.download_0);\n  }\n   else {\n    this.link_0 = new HTML_0;\n    $add_1(this.npanel, this.link_0);\n  }\n  $add_2(this.dpanel, this.npanel);\n  this.fpanel = new HorizontalPanel_0;\n  $setWidth_0(this.fpanel, '100%');\n  $setHeight_0(this.fpanel, '6ex');\n  $setPropertyImpl($getElement(this.fpanel).style, 'backgroundColor', 'LightGray');\n  this.formpanel = new FormPanel_0;\n  $setEncoding(this.formpanel);\n  $setMethod(this.formpanel);\n  $setWidget(this.formpanel, this.fpanel);\n  $setWidth_0(this.formpanel, '100%');\n  $setHeight_0(this.formpanel, '6ex');\n  if (isSupported_0()) {\n    this.upload = new FileUpload_0;\n    $setName(this.upload);\n    $add_1(this.fpanel, this.upload);\n    $addHandler_0(this.formpanel, this, (!TYPE_19 && (TYPE_19 = new GwtEvent$Type_0) , TYPE_19));\n    this.loadbutton = new Button_2($_(this.locale, 'LoadSaveDialog.load'), 1, 'load');\n    $add_1(this.fpanel, this.loadbutton);\n    $addActionListener_0(this.loadbutton, this);\n  }\n  $add_2(this.vpanel, this.dpanel);\n  !!this.formpanel && $add_2(this.vpanel, this.formpanel);\n  $add_2(this.vpanel, this.hpanel);\n  $setWidget_1(this.dialog, this.vpanel);\n  $setGlassEnabled(this.dialog);\n  $setPropertyImpl($getElement(this.dialog).style, 'zIndex', '127');\n  $setText_1(this.dialog, $_(this.locale, 'LoadSaveDialog.dialog_headline'));\n  $hide_0(this.dialog, false);\n}\n\ndefineSeed(499, 1, makeCastMap([Q$EventHandler, Q$FormPanel$SubmitHandler, Q$ActionListener]), LoadSaveDialog_0);\n_.actionPerformed = function actionPerformed_1(ae){\n  var blob, dataurl, last, name_0, url_0, zip;\n  if (maskUndefined(ae.source) === maskUndefined(this.closebutton)) {\n    $hide_0(this.dialog, false);\n  }\n   else if (maskUndefined(ae.source) === maskUndefined(this.loadbutton)) {\n    $submit(this.formpanel);\n  }\n   else if (maskUndefined(ae.source) === maskUndefined(this.download_0)) {\n    name_0 = $getPropertyString($getElement(this.filename), 'value');\n    if (name_0 == null || $equals('', name_0))\n      return;\n    if (name_0.length < 4) {\n      name_0 = name_0 + '.zip';\n    }\n     else {\n      last = $substring(name_0, name_0.length - 4);\n      $equalsIgnoreCase(last, '.zip') || (name_0 = name_0 + '.zip');\n    }\n    if (isBlobSupported()) {\n      blob = $createDownloadZIP(this.project).jszip.generate({type:'blob'});\n      isBlobSupported() && (window.saveAs?window.saveAs(blob, name_0):navigator.msSaveBlob && navigator.msSaveBlob(blob, name_0) , undefined);\n      $hide_0(this.dialog, false);\n    }\n     else if (isSupported_1()) {\n      url_0 = 'data:application/zip;base64,' + $internalGenerate($createDownloadZIP(this.project));\n      saveURLAs(url_0, name_0);\n      $hide_0(this.dialog, false);\n    }\n  }\n   else if (maskUndefined(ae.source) === maskUndefined(this.upload)) {\n    dataurl = ae.command;\n    try {\n      zip = null;\n      if (dataurl == null)\n        throw new IllegalArgumentException_1('Data URL cannot be NULL');\n      dataurl.indexOf('data:application/x-zip;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 30))):dataurl.indexOf('data:application/zip;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 28))):dataurl.indexOf('data:application/octet-stream;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 37))):dataurl.indexOf('data:application/x-zip-compressed;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 41))):dataurl.indexOf('data:multipart/x-zip;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 28))):dataurl.indexOf('data:application/x-compressed;base64,') == 0?(zip = new ZIP_1($substring(dataurl, 37))):dataurl.indexOf('data:application/x-compress;base64,') == 0 && (zip = new ZIP_1($substring(dataurl, 35)));\n      if (!zip)\n        throw new IllegalArgumentException_1('Invalid MIME type');\n      $loadFromZIP(this.project, zip)?$hide_0(this.dialog, false):alert_0($_(this.locale, 'LoadSaveDialog.not_fitting'));\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IllegalArgumentException)) {\n        $hide_0(this.dialog, false);\n        alert_0($_(this.locale, 'LoadSaveDialog.invalidZIP'));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n;\nfunction $create2DPlot(this$static, c, r){\n  var io, line, start_0;\n  try {\n    start_0 = r.offset;\n    line = $readLine(r);\n    if ($equalsIgnoreCase('GridPlot', line)) {\n      r.offset = start_0;\n      this$static.allowtypeselection = true;\n      return $createContourPlot(this$static, this$static.canvas, r);\n    }\n     else {\n      r.offset = start_0;\n      return new LinePlot_0(c, r);\n    }\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$IOException)) {\n      io = $e0;\n      throw new RestException_4(io);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $create3DBoxPlot(this$static, c, r){\n  var fr, io, line, scanner, start_0, triangles;\n  try {\n    start_0 = r.offset;\n    line = $readLine(r);\n    $equalsIgnoreCase('GridPlot', line) || (r.offset = start_0);\n    scanner = new BoxTriangleScanner_0;\n    triangles = $parseFile_0(scanner, r);\n    try {\n      fr = new GLRenderFrame_0(c, $createLegend(this$static), triangles, scanner.coordinate_type);\n      return fr;\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IOException)) {\n        fr = new RenderFrame_0(c, triangles, scanner.coordinate_type);\n        return fr;\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$IOException)) {\n      io = $e1;\n      throw new RestException_4(io);\n    }\n     else \n      throw unwrap_5($e1);\n  }\n}\n\nfunction $create3DInterpolatedPlot(this$static, c, r){\n  var fr, io, line, scanner, start_0, triangles;\n  try {\n    start_0 = r.offset;\n    line = $readLine(r);\n    $equalsIgnoreCase('GridPlot', line) || (r.offset = start_0);\n    scanner = new InterpolatedTriangleScanner_0;\n    triangles = $parseFile_1(scanner, r);\n    try {\n      fr = new GLRenderFrame_0(c, $createLegend(this$static), triangles, scanner.coordinate_type);\n      return fr;\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IOException)) {\n        fr = new RenderFrame_0(c, triangles, scanner.coordinate_type);\n        return fr;\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$IOException)) {\n      io = $e1;\n      throw new RestException_4(io);\n    }\n     else \n      throw unwrap_5($e1);\n  }\n}\n\nfunction $create3DPlot(this$static, c, r){\n  var fr, io, scanner, triangles;\n  try {\n    scanner = new TriangleScanner_0;\n    triangles = $parseFile_2(scanner, r);\n    try {\n      fr = new GLRenderFrame_0(c, $createLegend(this$static), triangles, scanner.coordinate_type);\n      return fr;\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IOException)) {\n        fr = new RenderFrame_0(c, triangles, scanner.coordinate_type);\n        return fr;\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$IOException)) {\n      io = $e1;\n      throw new RestException_4(io);\n    }\n     else \n      throw unwrap_5($e1);\n  }\n}\n\nfunction $createCanvas(this$static){\n  this$static.canvas = createIfSupported();\n  if (!this$static.canvas)\n    throw new RestException_1($_(this$static.locale, 'PlotterPanel.unsupported'));\n  $getElement(this$static.canvas).style['cursor'] = ($clinit_Style$Cursor() , 'crosshair');\n  $addDomHandler(this$static.canvas, this$static, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_4));\n  this$static.lastwidth = 0;\n  this$static.lastheight = 0;\n  return this$static.canvas;\n}\n\nfunction $createContourPlot(this$static, c, r){\n  var fr, io, line, parser, scanner, start_0, triangles;\n  try {\n    start_0 = r.offset;\n    line = $readLine(r);\n    $equalsIgnoreCase('GridPlot', line) || (r.offset = start_0);\n    start_0 = r.offset;\n    try {\n      scanner = new BoxTriangleScanner_0;\n      triangles = $parseFile_0(scanner, r);\n      fr = new GLRenderFrame_0(c, $createLegend(this$static), triangles, 4);\n      return fr;\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IOException)) {\n        parser = new GridPlotParser_0;\n        r.offset = start_0;\n        return new GridPlot_0(c, $parseFile(parser, r), parser.min_0, parser.max_0);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$IOException)) {\n      io = $e1;\n      throw new RestException_4(io);\n    }\n     else \n      throw unwrap_5($e1);\n  }\n}\n\nfunction $createFrame(this$static){\n  var height, width_0;\n  if (!this$static.frame_0) {\n    width_0 = $getClientWidth($doc);\n    height = $getClientHeight($doc);\n    width_0 < 256 && (width_0 = 256);\n    height < 256 && (height = 256);\n    width_0 -= 32;\n    height -= 32;\n    this$static.frame_0 = new PopupPanel_0;\n    $setTitle_0(this$static.frame_0, $_(this$static.locale, 'PlotterPanel.title'));\n    $setPropertyImpl($getElement(this$static.frame_0).style, 'zIndex', '63');\n    $setPropertyImpl($getElement(this$static.frame_0).style, 'backgroundColor', 'LightGray');\n    $setWidth_1(this$static.frame_0, width_0 + 'px');\n    $setHeight_1(this$static.frame_0, height + 'px');\n    $center(this$static.frame_0);\n    $setGlassEnabled(this$static.frame_0);\n  }\n  return this$static.frame_0;\n}\n\nfunction $createGUI_0(this$static){\n  var buttonpanel, container, gui, plotpanel;\n  container = new VerticalPanel_0;\n  ($clinit_DOM() , container.element_0).style['width'] = '100%';\n  container.element_0.style['height'] = '100%';\n  container.element_0.style['backgroundColor'] = 'LightGray';\n  if (this$static.allowtypeselection && !!this$static.plottype) {\n    plotpanel = new HorizontalPanel_0;\n    plotpanel.element_0.style['width'] = '100%';\n    plotpanel.element_0.style['height'] = '100%';\n    $setHorizontalAlignment(plotpanel, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n    plotpanel.element_0.style['backgroundColor'] = 'LightGray';\n    $add_1(plotpanel, this$static.plottype);\n    $setWidth_0(this$static.plottype, '100%');\n    $add_2(container, plotpanel);\n  }\n  if (this$static.plot) {\n    gui = this$static.plot.getGUI();\n    if (gui) {\n      plotpanel = new HorizontalPanel_0;\n      plotpanel.element_0.style['width'] = '100%';\n      plotpanel.element_0.style['height'] = '100%';\n      plotpanel.element_0.style['backgroundColor'] = 'White';\n      $add_1(plotpanel, gui);\n      gui.setWidth_0('100%');\n      gui.setHeight_0('100%');\n      $add_2(container, plotpanel);\n    }\n  }\n  buttonpanel = new HorizontalPanel_0;\n  $setHorizontalAlignment(buttonpanel, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  buttonpanel.element_0.style['width'] = '100%';\n  buttonpanel.element_0.style['height'] = '100%';\n  buttonpanel.element_0.style['backgroundColor'] = 'LightGray';\n  $add_1(buttonpanel, this$static.download_0);\n  $add_1(buttonpanel, this$static.separate?this$static.close_0:this$static.full);\n  $add_2(container, buttonpanel);\n  return container;\n}\n\nfunction $createLegend(this$static){\n  this$static.legend = createIfSupported();\n  if (!this$static.legend)\n    throw new RestException_1($_(this$static.locale, 'PlotterPanel.unsupported'));\n  return this$static.legend;\n}\n\nfunction $layoutCanvas(this$static){\n  var but, canvasheight, canvasleft, canvaswidth, height, lwidth, required, totalheight, totalwidth, windowwidth;\n  if (!!this$static.graphics && !!this$static.canvas) {\n    totalwidth = $getElement(this$static.graphics).clientWidth | 0;\n    totalheight = $getElement(this$static.graphics).clientHeight | 0;\n    windowwidth = $getClientWidth($doc);\n    !!this$static.plot && (windowwidth -= this$static.plot.getLegendWidth());\n    if (totalwidth > 0 && totalheight > 0 && windowwidth > 0) {\n      canvaswidth = $getElement(this$static.canvas).clientWidth | 0;\n      canvasheight = $getElement(this$static.canvas).clientHeight | 0;\n      canvasleft = $getAbsoluteLeft($getElement(this$static.canvas));\n      if (canvaswidth <= 64 || canvasheight <= 64 || canvasleft != this$static.lastleft || totalwidth != this$static.lastwidth || totalheight != this$static.lastheight) {\n        required = 0;\n        $setWidth_0(this$static.canvas, '64px');\n        $setHeight_0(this$static.canvas, '64px');\n        totalwidth = windowwidth - canvasleft;\n        totalwidth < 64 && (totalwidth = 64);\n        totalheight = $getElement(this$static.graphics).clientHeight | 0;\n        if (this$static.allowtypeselection && !!this$static.plottype) {\n          height = $getElement(this$static.plottype).clientHeight | 0;\n          if (height <= 0)\n            return false;\n          required += height + 6;\n        }\n        if (this$static.plot) {\n          height = this$static.plot.getMinimumRequiredHeight();\n          if (height < 0)\n            return false;\n          required += height + 6;\n        }\n        but = this$static.separate?this$static.close_0:this$static.full;\n        if (but) {\n          height = $getElement(but.button_0).clientHeight | 0;\n          if (height <= 0)\n            return false;\n          required += height + 6;\n        }\n        totalheight -= required;\n        $setWidth_0(this$static.canvas, totalwidth + 'px');\n        $setHeight_0(this$static.canvas, totalheight + 'px');\n        $setCoordinateSpaceWidth(this$static.canvas, totalwidth);\n        $setCoordinateSpaceHeight(this$static.canvas, totalheight);\n        if (!!this$static.plot && !!this$static.legend) {\n          lwidth = this$static.plot.getLegendWidth();\n          $setWidth_0(this$static.legend, lwidth + 'px');\n          $setHeight_0(this$static.legend, totalheight + 'px');\n          $setCoordinateSpaceWidth(this$static.legend, lwidth);\n          $setCoordinateSpaceHeight(this$static.legend, totalheight);\n        }\n        this$static.lastwidth = $getElement(this$static.graphics).clientWidth | 0;\n        this$static.lastheight = $getElement(this$static.graphics).clientHeight | 0;\n        this$static.lastleft = $getAbsoluteLeft($getElement(this$static.canvas));\n        return true;\n      }\n       else {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $loadPlot(this$static, r){\n  var canvas, reader;\n  canvas = $createCanvas(this$static);\n  this$static.result_0 = r;\n  this$static.allowtypeselection = false;\n  this$static.legend = null;\n  if ($equals('application/x-vgf', r.mimeType)) {\n    reader = new StringReader_0(r.body_0);\n    this$static.plot = $create2DPlot(this$static, canvas, reader);\n  }\n   else if ($equals('application/x-vgf3', r.mimeType)) {\n    this$static.plot = $create3DPlot(this$static, canvas, new StringReader_0(r.body_0));\n  }\n   else if ($equals('application/x-vgfc', r.mimeType)) {\n    this$static.plot = $createContourPlot(this$static, canvas, new StringReader_0(r.body_0));\n    this$static.allowtypeselection = true;\n  }\n  if (this$static.plot) {\n    $replaceGraphics(this$static, $createGUI_0(this$static));\n    $redrawPlot(this$static);\n  }\n}\n\nfunction $onResize_2(this$static){\n  if ($layoutCanvas(this$static)) {\n    this$static.plot.onResize_1();\n    $redrawPlot(this$static);\n  }\n   else {\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static);\n  }\n}\n\nfunction $pullIn(this$static){\n  if (this$static.separate) {\n    !!this$static.frame_0 && this$static.frame_0.hide(false);\n    this$static.separate = false;\n    this$static.graphics = $createGUI_0(this$static);\n    $add_2(this$static.inner, this$static.graphics);\n    this$static.lastwidth = 0;\n    this$static.lastheight = 0;\n    $onResize_2(this$static);\n  }\n}\n\nfunction $pullOut(this$static){\n  if (!this$static.separate) {\n    if (this$static.graphics) {\n      $remove_6(this$static.inner, this$static.graphics);\n      this$static.graphics = null;\n    }\n    $createFrame(this$static);\n    this$static.separate = true;\n    this$static.graphics = $createGUI_0(this$static);\n    this$static.frame_0.setWidget(this$static.graphics);\n    $setPopupPositionAndShow(this$static.frame_0, this$static);\n    this$static.lastwidth = 0;\n    this$static.lastheight = 0;\n    $onResize_2(this$static);\n  }\n}\n\nfunction $redrawPlot(this$static){\n  if (!!this$static.plot && !!this$static.canvas) {\n    if ($layoutCanvas(this$static)) {\n      this$static.plot.paintPlot(this$static.canvas);\n      !!this$static.legend && this$static.plot.paintLegend(this$static.legend);\n      !!this$static.canvas && $setHTML_0(this$static.download_0, '<a href=\"' + $getElement(this$static.canvas).toDataURL() + '\" download=\"plot.png\">' + $_(this$static.locale, 'PlotterPanel.save') + '<\\/a>');\n    }\n     else {\n      $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static);\n    }\n  }\n}\n\nfunction $replaceGraphics(this$static, w){\n  if (this$static.separate) {\n    $createFrame(this$static);\n    this$static.frame_0.setWidget(w);\n    this$static.graphics = w;\n  }\n   else {\n    if (this$static.graphics) {\n      $remove_6(this$static.inner, this$static.graphics);\n      this$static.graphics = null;\n    }\n    $add_2(this$static.inner, w);\n    this$static.graphics = w;\n  }\n  this$static.lastwidth = 0;\n  this$static.lastheight = 0;\n  $onResize_2(this$static);\n}\n\nfunction $setPlotType(this$static, type_0){\n  var c, p;\n  if (this$static.result_0) {\n    p = null;\n    try {\n      c = $createCanvas(this$static);\n      switch (type_0) {\n        case 0:\n          p = $create2DPlot(this$static, c, new StringReader_0(this$static.result_0.body_0));\n          break;\n        case 1:\n          p = $create3DBoxPlot(this$static, c, new StringReader_0(this$static.result_0.body_0));\n          break;\n        case 2:\n          p = $create3DInterpolatedPlot(this$static, c, new StringReader_0(this$static.result_0.body_0));\n      }\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (!instanceOf($e0, Q$RestException))\n        throw unwrap_5($e0);\n    }\n    if (p) {\n      this$static.plot = p;\n      $replaceGraphics(this$static, $createGUI_0(this$static));\n    }\n  }\n}\n\nfunction $setPosition_0(this$static, width_0, height){\n  var left, top_0;\n  if (this$static.frame_0) {\n    left = ~~(($getClientWidth($doc) - width_0) / 2);\n    top_0 = ~~(($getClientHeight($doc) - height) / 2);\n    $setPopupPosition(this$static.frame_0, left, top_0);\n    $redrawPlot(this$static);\n  }\n}\n\nfunction PlotterPanel_0(){\n  this.locale = new Locale_0;\n  this.separate = false;\n  this.canvas = null;\n  this.frame_0 = null;\n  this.full = new Button_2($_(this.locale, 'PlotterPanel.extract'), 0, 'pull-out');\n  $addActionListener_0(this.full, this);\n  this.download_0 = new HTML_0;\n  this.close_0 = new Button_2($_(this.locale, 'PlotterPanel.pullin'), 1, 'pull-in');\n  $addActionListener_0(this.close_0, this);\n  this.plottype = new ListBox_0;\n  $addItem(this.plottype, $_(this.locale, 'PlotterPanel.gridplot'));\n  $addItem(this.plottype, $_(this.locale, 'PlotterPanel.box'));\n  $addItem(this.plottype, $_(this.locale, 'PlotterPanel.interpolated'));\n  $setVisibleItemCount(this.plottype, 1);\n  $addDomHandler(this.plottype, this, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  this.inner = new VerticalPanel_0;\n  $setWidth_0(this.inner, '100%');\n  $setHeight_0(this.inner, '100%');\n  $setPropertyImpl($getElement(this.inner).style, 'backgroundColor', 'LightGray');\n  $initWidget(this, this.inner);\n  ($clinit_DOM() , this.element_0).style['backgroundColor'] = 'LightGray';\n}\n\ndefineSeed(500, 336, makeCastMap([Q$ChangeHandler, Q$MouseOutHandler, Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget, Q$ActionListener]), PlotterPanel_0);\n_.actionPerformed = function actionPerformed_2(ev){\n  maskUndefined(ev.source) === maskUndefined(this.close_0)?$pullIn(this):maskUndefined(ev.source) === maskUndefined(this.full) && $pullOut(this);\n}\n;\n_.execute_1 = function execute_16(){\n  $redrawPlot(this);\n}\n;\n_.onChange = function onChange_0(ch_0){\n  this.allowtypeselection && $setPlotType(this, $getElement(this.plottype).selectedIndex);\n}\n;\n_.onMouseOut = function onMouseOut_0(event_0){\n  !!this.canvas && $setHTML_0(this.download_0, '<a href=\"' + $getElement(this.canvas).toDataURL() + '\" download=\"plot.png\">' + $_(this.locale, 'PlotterPanel.save') + '<\\/a>');\n}\n;\n_.onResize_1 = function onResize_7(){\n  $onResize_2(this);\n}\n;\n_.allowtypeselection = false;\n_.lastheight = 0;\n_.lastleft = 0;\n_.lastwidth = 0;\n_.separate = false;\nfunction $addActionListener_1(this$static, ev){\n  $addActionListener(this$static.listeners, ev);\n}\n\nfunction $setProgress(this$static, percent){\n  $setProgress_0(this$static.inner, percent);\n}\n\nfunction $show_2(this$static){\n  $setProgress_0(this$static.inner, 0);\n  $show_0(this$static.dialog);\n}\n\nfunction ProgressBar_0(headline, buttontext){\n  var st;\n  this.dialog = new DialogBox_0;\n  this.listeners = new ActionEventSource_0;\n  $setText_1(this.dialog, headline);\n  this.inner = new ProgressWidget_0(buttontext);\n  $addActionListener_2(this.inner, this);\n  $setWidget_1(this.dialog, this.inner);\n  $setGlassEnabled(this.dialog);\n  st = $getElement(this.dialog).style;\n  $setPropertyImpl(st, 'zIndex', '127');\n  $center(this.dialog);\n  $hide_0(this.dialog, false);\n}\n\ndefineSeed(501, 1, makeCastMap([Q$ActionListener, Q$ProgressBar]), ProgressBar_0);\n_.actionPerformed = function actionPerformed_3(ev){\n  $hide_0(this.dialog, false);\n  $triggerActionEvent(this.listeners, new ActionEvent_0(this, 0, 'abort'));\n}\n;\nfunction $addActionListener_2(this$static, al){\n  $addActionListener(this$static.listeners, al);\n}\n\nfunction $setProgress_0(this$static, percent){\n  var completed, elm, i, st;\n  percent > 100 && (percent = 100);\n  percent < 0 && (percent = 0);\n  completed = ~~(20 * percent / 100);\n  this$static.current = percent;\n  for (i = 0; i < 20; i++) {\n    elm = dynamicCast($getWidget(this$static.elementGrid, i), Q$Grid);\n    st = ($clinit_DOM() , elm.element_0).style;\n    i < completed?$setPropertyImpl(st, 'background', 'blue'):$setPropertyImpl(st, 'background', 'white');\n  }\n}\n\nfunction ProgressWidget_0(buttontext){\n  var elm, i, td;\n  this.listeners = new ActionEventSource_0;\n  new DockLayoutPanel_0(($clinit_Style$Unit() , EM));\n  this.button_0 = new Button_2(buttontext, 0, 'button');\n  $addActionListener_0(this.button_0, this);\n  this.surroundGrid = new Grid_0(2, 1);\n  this.elementGrid = new Grid_0(1, 20);\n  $setPropertyInt(this.elementGrid.tableElem, 'cellPadding', 0);\n  $setPropertyInt(this.elementGrid.tableElem, 'cellSpacing', 0);\n  for (i = 0; i < 20; i++) {\n    elm = new Grid_0(1, 1);\n    $prepareCell(elm, 0, 0);\n    td = $cleanCell(elm, 0, 0, false);\n    $setInnerHTML(td, '');\n    ($clinit_DOM() , elm.element_0).style['width'] = '20px';\n    elm.element_0.style['height'] = '20px';\n    $setWidget_2(this.elementGrid, 0, i, elm);\n  }\n  this.containerGrid = new Grid_0(1, 1);\n  $setPropertyInt(this.containerGrid.tableElem, 'cellPadding', 0);\n  $setPropertyInt(this.containerGrid.tableElem, 'cellSpacing', 0);\n  $setWidget_2(this.containerGrid, 0, 0, this.elementGrid);\n  $setPropertyString(this.containerGrid.tableElem, 'border', '1');\n  this.barFrame = new FlexTable_0;\n  $setWidget_2(this.barFrame, 0, 0, this.containerGrid);\n  $setWidth_0(this.barFrame, '100%');\n  $setWidget_2(this.surroundGrid, 0, 0, this.barFrame);\n  $setWidget_2(this.surroundGrid, 1, 0, this.button_0);\n  $initWidget(this, this.surroundGrid);\n  $setProgress_0(this, 0);\n}\n\ndefineSeed(502, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ActionListener]), ProgressWidget_0);\n_.actionPerformed = function actionPerformed_4(ev){\n  $triggerActionEvent(this.listeners, new ActionEvent_0(this, 0, 'abort'));\n}\n;\n_.current = 0;\nfunction $enableLineNumbering(this$static, onoff){\n  this$static.numbersVisible = onoff;\n  this$static.started && $setShowGutter(this$static.text_0, onoff);\n}\n\nfunction $getFocusTime(this$static){\n  if (this$static.started && !!this$static.text_0) {\n    return this$static.focusTime;\n  }\n  return 0;\n}\n\nfunction $getLineCount(this$static){\n  if (this$static.started) {\n    return $getLength(this$static.text_0);\n  }\n  return 0;\n}\n\nfunction $loadInitial(this$static){\n  if (this$static.started && this$static.initial != null) {\n    $setText_4(this$static.text_0, this$static.initial);\n    this$static.initial = null;\n  }\n}\n\nfunction $setEditable(this$static, onoff){\n  this$static.editable = onoff;\n  this$static.started && !!this$static.text_0 && $setReadOnly(this$static.text_0, !this$static.editable);\n}\n\nfunction $setFirstLine(this$static, offset){\n  this$static.lineoffset = offset;\n  this$static.started && $setFirstLineNumber(this$static.text_0, offset);\n}\n\nfunction $setSyntax(this$static, syntax){\n  this$static.syntax = syntax;\n  this$static.started && !!this$static.text_0 && ($equalsIgnoreCase('C', syntax)?$setModeByName(this$static.text_0, ($clinit_AceEditorMode() , C_CPP).name_0):$equalsIgnoreCase('Matlab', syntax)?$setModeByName(this$static.text_0, ($clinit_AceEditorMode() , MATLAB).name_0):$equalsIgnoreCase('C++', syntax)?$setModeByName(this$static.text_0, ($clinit_AceEditorMode() , C_CPP).name_0):$equalsIgnoreCase('Java', syntax)?$setModeByName(this$static.text_0, ($clinit_AceEditorMode() , JAVA).name_0):$setModeByName(this$static.text_0, ($clinit_AceEditorMode() , R).name_0));\n}\n\nfunction $setText_5(this$static, t){\n  this$static.started && !!this$static.text_0?$setText_4(this$static.text_0, t):(this$static.initial = t);\n}\n\nfunction $startEditor_0(this$static){\n  var editor, editor_0;\n  if (!this$static.started) {\n    $startEditor(this$static.text_0);\n    $addOnChangeHandler(this$static.text_0, this$static);\n    $setShowGutter(this$static.text_0, this$static.numbersVisible);\n    editor = this$static.text_0.editor;\n    editor.renderer.setShowPrintMargin(false);\n    if (this$static.editable) {\n      $setThemeByName(this$static.text_0, this$static.edittheme.name_0);\n      $setHighlightActiveLine(this$static.text_0, true);\n    }\n     else {\n      $setThemeByName(this$static.text_0, this$static.consttheme.name_0);\n      $setHighlightActiveLine(this$static.text_0, false);\n      editor_0 = this$static.text_0.editor;\n      editor_0.renderer.$cursorLayer.element.style.opacity = 0;\n    }\n    this$static.started = true;\n    $setSyntax(this$static, this$static.syntax);\n    $setEditable(this$static, this$static.editable);\n    $setFirstLine(this$static, this$static.lineoffset);\n    $enableLineNumbering(this$static, this$static.numbersVisible);\n    this$static.focusTime = now_1();\n  }\n}\n\nfunction SourceCodeEditor_0(edable, id_0, initial, syntax){\n  $clinit_AceEditorMode();\n  this.edittheme = ($clinit_AceEditorTheme() , ECLIPSE);\n  this.consttheme = KATZENMILCH;\n  this.identifier = id_0;\n  this.listeners = new ActionEventSource_0;\n  this.syntax = syntax;\n  this.editable = edable;\n  this.currentsize = -1;\n  this.initial = initial;\n  this.lineoffset = 0;\n  this.numbersVisible = true;\n  this.changed = false;\n  this.text_0 = new AceEditor_0;\n  $initWidget(this, this.text_0);\n  this.started = false;\n}\n\nfunction now_1(){\n  return Date.now();\n}\n\ndefineSeed(503, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget, Q$EditorInterface, Q$VerticalMultiSplitElement]), SourceCodeEditor_0);\n_.invokeAceCallback = function invokeAceCallback(obj){\n  var newsize, editor;\n  if (this.started && !!this.text_0) {\n    (editor = this.text_0.editor , editor.isFocused()) && (this.focusTime = now_1());\n    newsize = $getLength(this.text_0);\n    this.changed = true;\n    if (newsize != this.currentsize) {\n      $triggerActionEvent(this.listeners, new ActionEvent_0(this, newsize, 'LineModified'));\n      this.currentsize = newsize;\n    }\n  }\n}\n;\n_.onResize_1 = function onResize_8(){\n  !!this.text_0 && this.started && $redisplay(this.text_0);\n}\n;\n_.changed = false;\n_.currentsize = 0;\n_.editable = false;\n_.focusTime = 0;\n_.lineoffset = 0;\n_.numbersVisible = false;\n_.started = false;\nfunction $addActionListener_3(this$static, al){\n  $addActionListener(this$static.listeners, al);\n}\n\nfunction $setToolTipText_0(this$static, text_0){\n  $setTitle(this$static.button_0, text_0);\n}\n\nfunction $setVisible_2(this$static, onoff){\n  $setVisible(this$static.button_0, onoff);\n}\n\nfunction ToggleButton_2(){\n  this.listeners = new ActionEventSource_0;\n  this.command = 'play';\n  this.actionid = 10;\n  this.button_0 = new ToggleButton_0(this);\n  $initWidget(this, this.button_0);\n}\n\ndefineSeed(504, 336, makeCastMap([Q$ClickHandler, Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), ToggleButton_2);\n_.onClick = function onClick_1(ev){\n  $triggerActionEvent(this.listeners, new ActionEvent_0(this, this.actionid, this.command));\n}\n;\n_.actionid = 0;\nfunction $addUnit(this$static, unit){\n  var e, e$iterator, name_0, source, entries;\n  name_0 = unit.name_0;\n  source = null;\n  for (e$iterator = new AbstractList$IteratorImpl_0(unit.elements); e$iterator.i < e$iterator.this$0_0.size_1();) {\n    e = dynamicCast($next_3(e$iterator), Q$ExerciseElement);\n    if (!!e && e.isVisible && $equals('text/plain', e.mimeType)) {\n      !source && (source = $createMultiSplitEditorByName(this$static, name_0));\n      $addUnitHook(source, unit, e);\n    }\n  }\n  entries = this$static.editors.size_0;\n  entries < 2 && (entries = 2);\n  $setVisibleItemCount(this$static.list, entries);\n}\n\nfunction $addUnitHook(source, unit, e){\n  var editor;\n  if (e) {\n    editor = new SourceCodeEditor_0(e.isEditable, e.identifier, e.body_0, unit.tabtype == 2?null:e.syntax);\n    $add_7(source, editor);\n  }\n}\n\nfunction $createMultiSplitEditorByName(this$static, name_0){\n  var source;\n  source = $findEditorByName(this$static, name_0);\n  if (!source) {\n    source = new VerticalMultiSplit_1(name_0);\n    $add_5(this$static.editors, source);\n    name_0 == null && (name_0 = '');\n    $insertItem(this$static.list, name_0);\n  }\n  return source;\n}\n\nfunction $enableLineNumbering_0(this$static, onoff){\n  var vms, vms$iterator;\n  for (vms$iterator = new AbstractList$IteratorImpl_0(this$static.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    $enableLineNumbering_1(vms, onoff);\n  }\n}\n\nfunction $findEditorByElement(this$static, id_0){\n  var e, e$iterator, sce;\n  sce = null;\n  !!this$static.active && (sce = $findEditorByIdentifier(this$static.active, id_0));\n  if (!sce) {\n    for (e$iterator = new AbstractList$IteratorImpl_0(this$static.editors); e$iterator.i < e$iterator.this$0_0.size_1();) {\n      e = dynamicCast($next_3(e$iterator), Q$VerticalMultiSplit);\n      sce = $findEditorByIdentifier(e, id_0);\n      if (sce)\n        break;\n    }\n  }\n  return sce;\n}\n\nfunction $findEditorByName(this$static, name_0){\n  var source, source$iterator;\n  for (source$iterator = new AbstractList$IteratorImpl_0(this$static.editors); source$iterator.i < source$iterator.this$0_0.size_1();) {\n    source = dynamicCast($next_3(source$iterator), Q$VerticalMultiSplit);\n    if (name_0 == null) {\n      if (source.name_0 == null)\n        return source;\n    }\n     else if ($equals(name_0, source.name_0)) {\n      return source;\n    }\n  }\n  return null;\n}\n\nfunction $gotoLine_0(this$static, element, line, column){\n  var sce;\n  $setElementVisible(this$static, element);\n  sce = $findEditorByElement(this$static, element);\n  !!sce && sce.started && !!sce.text_0 && $gotoLine(sce.text_0, line, column);\n}\n\nfunction $redo(this$static){\n  !!this$static.active && $redo_0(this$static.active);\n}\n\nfunction $removeAll(this$static){\n  var e, e$iterator;\n  for (e$iterator = new AbstractList$IteratorImpl_0(this$static.editors); e$iterator.i < e$iterator.this$0_0.size_1();) {\n    e = dynamicCast($next_3(e$iterator), Q$VerticalMultiSplit);\n    $removeAll_0(e);\n  }\n  $clear(this$static.editors);\n  $getElement(this$static.list).options.length = 0;\n  $setActiveUnit(this$static, null);\n}\n\nfunction $rethinkContent(this$static){\n  var idx, vms, vms$iterator, width_0;\n  idx = 0;\n  $setActiveUnit(this$static, null);\n  for (vms$iterator = new AbstractList$IteratorImpl_0(this$static.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    $setItemText(this$static.list, idx, vms.name_0);\n    ++idx;\n  }\n  width_0 = ($getElement(this$static.list).offsetWidth || 0) | 0;\n  width_0 > 0 && $setWidgetSize(this$static.panel, this$static.list, width_0 + 4);\n  this$static.editors.size_0 > 0 && $setActiveUnit(this$static, dynamicCast($get_5(this$static.editors, 0), Q$VerticalMultiSplit));\n}\n\nfunction $setActiveUnit(this$static, unit){\n  var idx;\n  if (unit) {\n    idx = $indexOf_4(this$static.editors, unit, 0);\n    if (idx >= 0) {\n      if (this$static.active) {\n        this$static.panel.remove_0(this$static.active);\n        this$static.active = null;\n      }\n      this$static.active = unit;\n      this$static.panel.insert(this$static.active, ($clinit_DockLayoutPanel$Direction() , CENTER_0), 0, null);\n      $setSelectedIndex_0(this$static.list, idx);\n      $rethinkContent_0(this$static.active);\n    }\n  }\n   else {\n    !!this$static.active && this$static.panel.remove_0(this$static.active);\n    this$static.active = null;\n  }\n}\n\nfunction $setElementVisible(this$static, id_0){\n  var e, e$iterator, sce;\n  if (this$static.active) {\n    sce = $findEditorByIdentifier(this$static.active, id_0);\n    if (sce)\n      return;\n  }\n  for (e$iterator = new AbstractList$IteratorImpl_0(this$static.editors); e$iterator.i < e$iterator.this$0_0.size_1();) {\n    e = dynamicCast($next_3(e$iterator), Q$VerticalMultiSplit);\n    sce = $findEditorByIdentifier(e, id_0);\n    !!sce && $setActiveUnit(this$static, e);\n  }\n}\n\nfunction $undo(this$static){\n  !!this$static.active && $undo_0(this$static.active);\n}\n\nfunction UnitTabPane_0(){\n  new Locale_0;\n  this.panel = new DockLayoutPanel_0(($clinit_Style$Unit() , PX));\n  this.editors = new ArrayList_0;\n  this.changelisteners = new ChangeEventSource_0;\n  this.list = new ListBox_0;\n  this.panel.insert(this.list, ($clinit_DockLayoutPanel$Direction() , WEST), 120, null);\n  this.active = null;\n  $addDomHandler(this.list, this, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  $initWidget(this, this.panel);\n}\n\ndefineSeed(505, 336, makeCastMap([Q$ChangeHandler, Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), UnitTabPane_0);\n_.iterator = function iterator_10(){\n  return new AbstractList$IteratorImpl_0(this.editors);\n}\n;\n_.onChange = function onChange_1(ch_0){\n  var idx, vms;\n  idx = $getElement(this.list).selectedIndex;\n  vms = dynamicCast($get_5(this.editors, idx), Q$VerticalMultiSplit);\n  $setActiveUnit(this, vms);\n  $triggerChangeEvent(this.changelisteners);\n}\n;\nfunction $$init_1(this$static){\n  this$static.contents = new ArrayList_0;\n}\n\nfunction $add_7(this$static, w){\n  var e;\n  if (instanceOf(w, Q$EditorInterface)) {\n    e = dynamicCast(w, Q$EditorInterface);\n    $addActionListener(e.listeners, this$static);\n  }\n  $add_5(this$static.contents, w);\n  return w;\n}\n\nfunction $enableLineNumbering_1(this$static, onoff){\n  var e, w, w$iterator;\n  for (w$iterator = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n    w = dynamicCast($next_3(w$iterator), Q$Widget);\n    if (instanceOf(w, Q$EditorInterface)) {\n      e = dynamicCast(w, Q$EditorInterface);\n      e.numbersVisible = onoff;\n      e.started && $setShowGutter(e.text_0, onoff);\n    }\n  }\n}\n\nfunction $findEditorByIdentifier(this$static, id_0){\n  var sce, w, w$iterator;\n  for (w$iterator = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n    w = dynamicCast($next_3(w$iterator), Q$Widget);\n    if (instanceOf(w, Q$EditorInterface)) {\n      sce = dynamicCast(w, Q$EditorInterface);\n      if ($equals(id_0, sce.identifier))\n        return sce;\n    }\n  }\n  return null;\n}\n\nfunction $redo_0(this$static){\n  var lasteditor, lasttime, sce, w, w$iterator, editor;\n  lasttime = 0;\n  lasteditor = null;\n  for (w$iterator = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n    w = dynamicCast($next_3(w$iterator), Q$Widget);\n    if (instanceOf(w, Q$EditorInterface)) {\n      sce = dynamicCast(w, Q$EditorInterface);\n      if ($getFocusTime(sce) > lasttime) {\n        lasttime = $getFocusTime(sce);\n        lasteditor = sce;\n      }\n    }\n  }\n  !!lasteditor && lasteditor.started && !!lasteditor.text_0 && lasteditor.changed && (editor = lasteditor.text_0.editor , editor.getSession().getUndoManager().redo(true) , undefined);\n}\n\nfunction $remove_15(this$static, w){\n  var e;\n  if ($remove_13(this$static.contents, w)) {\n    if (instanceOf(w, Q$EditorInterface)) {\n      e = dynamicCast(w, Q$EditorInterface);\n      $removeActionListener(e.listeners, this$static);\n    }\n  }\n}\n\nfunction $removeAll_0(this$static){\n  while (this$static.contents.size_0 != 0) {\n    $remove_15(this$static, dynamicCast($get_5(this$static.contents, 0), Q$Widget));\n  }\n}\n\nfunction $rethinkContent_0(this$static){\n  var count, e, height, i, s, size_0, total, w, w$iterator, w$iterator0, w$iterator1, w$iterator2, w$iterator3, w$iterator4;\n  height = $getElement(this$static.split_0).clientHeight | 0;\n  i = 0;\n  while (this$static.visible > 0) {\n    $remove(this$static.split_0, --this$static.visible);\n  }\n  if (height > 0) {\n    total = this$static.contents.size_0;\n    count = 0;\n    this$static.heightmissing = false;\n    total > 1 && height > this$static.split_0.splitterSize * (total - 1) && (height -= this$static.split_0.splitterSize * (total - 1));\n    for (w$iterator0 = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator0.i < w$iterator0.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator0), Q$Widget);\n      if (instanceOf(w, Q$VerticalMultiSplitElement)) {\n        dynamicCast(w, Q$VerticalMultiSplitElement);\n        ++count;\n      }\n       else {\n        ++count;\n      }\n    }\n    for (w$iterator1 = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator1.i < w$iterator1.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator1), Q$Widget);\n      if (i < total - 1) {\n        size_0 = ~~(height / count);\n        instanceOf(w, Q$VerticalMultiSplitElement) && dynamicCast(w, Q$VerticalMultiSplitElement);\n        $insert_0(this$static.split_0, w, ($clinit_DockLayoutPanel$Direction() , NORTH), size_0, null);\n      }\n       else {\n        $insert_0(this$static.split_0, w, ($clinit_DockLayoutPanel$Direction() , CENTER_0), 0, null);\n      }\n      w.setWidth_0('100%');\n      ++i;\n    }\n    for (w$iterator2 = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator2.i < w$iterator2.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator2), Q$Widget);\n      instanceOf(w, Q$VerticalMultiSplitElement) && dynamicCast(w, Q$VerticalMultiSplitElement);\n    }\n    if (height > 0) {\n      for (w$iterator3 = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator3.i < w$iterator3.this$0_0.size_1();) {\n        w = dynamicCast($next_3(w$iterator3), Q$Widget);\n        if (instanceOf(w, Q$VerticalMultiSplitElement)) {\n          dynamicCast(w, Q$VerticalMultiSplitElement);\n          size_0 = ~~(height / count);\n        }\n         else {\n          size_0 = ~~(height / count);\n        }\n        $setWidgetSize(this$static.split_0, w, size_0);\n      }\n    }\n    this$static.visible = total;\n    for (w$iterator4 = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator4.i < w$iterator4.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator4), Q$Widget);\n      if (instanceOf(w, Q$EditorInterface)) {\n        e = dynamicCast(w, Q$EditorInterface);\n        $startEditor_0(e);\n      }\n    }\n    $forceLayout(this$static.split_0);\n    for (w$iterator = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator), Q$Widget);\n      if (instanceOf(w, Q$EditorInterface)) {\n        e = dynamicCast(w, Q$EditorInterface);\n        $loadInitial(e);\n      }\n    }\n  }\n   else if (!this$static.heightmissing) {\n    s = ($clinit_SchedulerImpl() , INSTANCE_0);\n    this$static.heightmissing = true;\n    s.deferredCommands = push_0(s.deferredCommands, [this$static, false]);\n    $maybeSchedulePostEventPumpCommands(s);\n  }\n  return this$static.heightmissing;\n}\n\nfunction $setName_0(this$static, newname){\n  this$static.name_0 = newname;\n}\n\nfunction $undo_0(this$static){\n  var lasteditor, lasttime, sce, w, w$iterator, editor;\n  lasttime = 0;\n  lasteditor = null;\n  for (w$iterator = new AbstractList$IteratorImpl_0(this$static.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n    w = dynamicCast($next_3(w$iterator), Q$Widget);\n    if (instanceOf(w, Q$EditorInterface)) {\n      sce = dynamicCast(w, Q$EditorInterface);\n      if ($getFocusTime(sce) > lasttime) {\n        lasttime = $getFocusTime(sce);\n        lasteditor = sce;\n      }\n    }\n  }\n  !!lasteditor && lasteditor.started && !!lasteditor.text_0 && lasteditor.changed && (editor = lasteditor.text_0.editor , editor.getSession().getUndoManager().undo(true) , undefined);\n}\n\nfunction VerticalMultiSplit_0(){\n  $$init_1(this);\n  this.split_0 = new SplitLayoutPanel_0;\n  $setPropertyImpl($getElement(this.split_0).style, 'backgroundColor', 'LightGray');\n  $setWidth_0(this.split_0, '100%');\n  $setHeight_0(this.split_0, '100%');\n  $initWidget(this, this.split_0);\n}\n\nfunction VerticalMultiSplit_1(n){\n  $$init_1(this);\n  this.name_0 = n;\n  this.split_0 = new SplitLayoutPanel_0;\n  $setPropertyImpl($getElement(this.split_0).style, 'backgroundColor', 'LightGray');\n  $setWidth_0(this.split_0, '100%');\n  $setHeight_0(this.split_0, '100%');\n  $initWidget(this, this.split_0);\n}\n\ndefineSeed(506, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget, Q$ActionListener, Q$VerticalMultiSplit]), VerticalMultiSplit_0, VerticalMultiSplit_1);\n_.actionPerformed = function actionPerformed_5(ev){\n  var e, firstLine, top_0, w, w$iterator;\n  firstLine = 1;\n  for (w$iterator = new AbstractList$IteratorImpl_0(this.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n    w = dynamicCast($next_3(w$iterator), Q$Widget);\n    if (instanceOf(w, Q$EditorInterface)) {\n      e = dynamicCast(w, Q$EditorInterface);\n      top_0 = e.lineoffset;\n      top_0 != firstLine && (e.lineoffset = firstLine , e.started && $setFirstLineNumber(e.text_0, firstLine));\n      firstLine += $getLineCount(e) - 1;\n    }\n  }\n}\n;\n_.execute_1 = function execute_17(){\n  $rethinkContent_0(this);\n}\n;\n_.iterator = function iterator_11(){\n  return new AbstractList$IteratorImpl_0(this.contents);\n}\n;\n_.onResize_1 = function onResize_9(){\n  var r, w, w$iterator;\n  this.heightmissing && $rethinkContent_0(this);\n  if (!this.heightmissing) {\n    for (w$iterator = new AbstractList$IteratorImpl_0(this.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator), Q$Widget);\n      if (instanceOf(w, Q$RequiresResize)) {\n        r = dynamicCast(w, Q$RequiresResize);\n        r.onResize_1();\n      }\n    }\n  }\n}\n;\n_.heightmissing = false;\n_.tabtype = 0;\n_.visible = 0;\nfunction IOException_0(what){\n  Exception_1.call(this, what);\n}\n\ndefineSeed(507, 91, makeCastMap([Q$Serializable, Q$Throwable, Q$IOException]), IOException_0);\n_.getLocalizedMessage = function getLocalizedMessage_0(){\n  return this.detailMessage;\n}\n;\nfunction $readLine(this$static){\n  var eol, result;\n  eol = $indexOf_0(this$static.input_0, this$static.offset);\n  if (eol >= 0) {\n    result = $substring_0(this$static.input_0, this$static.offset, eol);\n    this$static.offset = eol + 1;\n    return result;\n  }\n   else {\n    return null;\n  }\n}\n\nfunction StringReader_0(in_$){\n  this.input_0 = in_$;\n  this.offset = 0;\n  this.input_0.length;\n}\n\ndefineSeed(508, 1, {}, StringReader_0);\n_.offset = 0;\nfunction JSONException_3(msg){\n  Exception_1.call(this, msg);\n  this.localizedMessage = msg;\n}\n\ndefineSeed(509, 91, makeCastMap([Q$Serializable, Q$Throwable, Q$JSONException]), JSONException_3);\n_.getLocalizedMessage = function getLocalizedMessage_1(){\n  if (this.localizedMessage != null)\n    return this.localizedMessage;\n  return this.detailMessage;\n}\n;\nfunction getInt(jo){\n  var v, w;\n  if (!!jo && !!$get_0(jo, 'ID')) {\n    if ($get_0(jo, 'ID').isNumber()) {\n      v = $get_0(jo, 'ID').isNumber().value_0;\n      w = round_int(v);\n      if (v == w)\n        return w;\n    }\n  }\n  throw new JSONException_3('Invalid JSON syntax, key ID is not present or is not an integer');\n}\n\nfunction getJSONArray(jo){\n  var obj;\n  obj = optJSONArray(jo, 'elements');\n  if (!obj)\n    throw new JSONException_3('Invalid JSON syntax, key elements is not present as expected');\n  return obj;\n}\n\nfunction getJSONObject(ja, idx){\n  var jo;\n  jo = optJSONObject(ja, idx);\n  if (!jo)\n    throw new JSONException_3('Invalid JSON syntax, index ' + idx + ' is not present or not an object');\n  return jo;\n}\n\nfunction getJSONObject_0(jo, key){\n  var obj;\n  obj = optJSONObject_0(jo, key);\n  if (!obj)\n    throw new JSONException_3('Invalid JSON syntax, key ' + key + ' is not present as expected');\n  return obj;\n}\n\nfunction getString(jo, key){\n  var obj;\n  obj = optString_1(jo, key);\n  if (obj == null)\n    throw new JSONException_3('Invalid JSON syntax, key ' + key + ' is not present as expected');\n  return obj;\n}\n\nfunction optBoolean(jo, key, deflt){\n  if (key != null && !!jo && !!$get_0(jo, key)) {\n    if ($get_0(jo, key).isBoolean()) {\n      return $get_0(jo, key).isBoolean().value_0;\n    }\n  }\n  return deflt;\n}\n\nfunction optInt(jo, key){\n  var v, w;\n  if (key != null && !!jo && !!$get_0(jo, key)) {\n    if ($get_0(jo, key).isNumber()) {\n      v = $get_0(jo, key).isNumber().value_0;\n      w = round_int(v);\n      if (v == w)\n        return w;\n    }\n  }\n  return 0;\n}\n\nfunction optJSONArray(jo, key){\n  if (key != null && !!jo && !!$get_0(jo, key)) {\n    if ($get_0(jo, key).isArray()) {\n      return $get_0(jo, key).isArray();\n    }\n  }\n  return null;\n}\n\nfunction optJSONObject(ja, idx){\n  if (!!ja && !!$get(ja, idx)) {\n    if ($get(ja, idx).isObject()) {\n      return $get(ja, idx).isObject();\n    }\n  }\n  return null;\n}\n\nfunction optJSONObject_0(jo, key){\n  if (key != null && !!jo && !!$get_0(jo, key)) {\n    if ($get_0(jo, key).isObject()) {\n      return $get_0(jo, key).isObject();\n    }\n  }\n  return null;\n}\n\nfunction optString(ja, idx){\n  if (!!ja && !!$get(ja, idx)) {\n    if ($get(ja, idx).isString()) {\n      return $get(ja, idx).isString().value_0;\n    }\n  }\n  return null;\n}\n\nfunction optString_0(jo, key){\n  if (key != null && !!jo && !!$get_0(jo, key)) {\n    if ($get_0(jo, key).isString()) {\n      return $get_0(jo, key).isString().value_0;\n    }\n  }\n  return null;\n}\n\nfunction optString_1(jo, key){\n  var res;\n  res = optString_0(jo, key);\n  if (res == null)\n    return null;\n  return res;\n}\n\nfunction $getString(this$static, key){\n  var obj;\n  obj = dynamicCast($get_4(this$static.hash_0, key), Q$String);\n  if (obj != null) {\n    return obj;\n  }\n  throw new MissingResourceException_0;\n}\n\nfunction ListResourceBundle_0(){\n  var obj, obj$index, obj$max, strings;\n  strings = this.getContents();\n  this.hash_0 = new HashMap_1(strings.length);\n  for (obj$index = 0 , obj$max = strings.length; obj$index < obj$max; ++obj$index) {\n    obj = strings[obj$index];\n    obj.length == 2 && obj[0] != null && obj[1] != null && $put_1(this.hash_0, obj[0], obj[1]);\n  }\n}\n\ndefineSeed(511, 1, {});\nfunction $_(this$static, key){\n  try {\n    return $getString(this$static.bundle, key);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$MissingResourceException)) {\n      alert_0('The Resource key ' + key + ' has not been translated.\\n');\n      return key;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $__0(this$static, key, arg){\n  var fmt, id0;\n  try {\n    fmt = $getString(this$static.bundle, key);\n    id0 = fmt.indexOf('{0}');\n    return id0 >= 0?$substring_0(fmt, 0, id0) + arg + $substring(fmt, id0 + 3):fmt;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$MissingResourceException)) {\n      alert_0('The Resource key ' + key + ' has not been translated.\\n');\n      return key;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction Locale_0(){\n  this.bundle = getBundle(canonicalLocaleName());\n}\n\nfunction canonicalLocaleName(){\n  var idx, name_0, l_lang;\n  $clinit_LocaleInfo();\n  name_0 = 'en';\n  (name_0 == null || $equals('default', name_0)) && (name_0 = (navigator.userLanguage?(l_lang = navigator.userLanguage):navigator.language?(l_lang = navigator.language):navigator.browserLanguage?(l_lang = navigator.browserLanguage):navigator.systemLanguage?(l_lang = navigator.systemLanguage):(l_lang = 'default') , l_lang));\n  if (name_0 != null && !$equals('default', name_0)) {\n    idx = name_0.indexOf('_');\n    if (idx > 0) {\n      name_0 = $substring_0(name_0, 0, idx);\n    }\n     else {\n      idx = name_0.indexOf('-');\n      idx > 0 && (name_0 = $substring_0(name_0, 0, idx));\n    }\n    return name_0;\n  }\n  return null;\n}\n\ndefineSeed(512, 1, {}, Locale_0);\nfunction MissingResourceException_0(){\n  Exception_0.call(this);\n}\n\ndefineSeed(513, 91, makeCastMap([Q$Serializable, Q$Throwable, Q$MissingResourceException]), MissingResourceException_0);\nfunction getBundle(name_0){\n  if ($equals('de', name_0)) {\n    return new ViPResourceBundle_de_0;\n  }\n  return new ViPResourceBundle_0;\n}\n\nfunction $clinit_ViPResourceBundle(){\n  $clinit_ViPResourceBundle = nullMethod;\n  contents = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.default_unit_name', 'Source']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.default_unit_name_n', 'Source {0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.Compute', 'Start Computation']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.http_status', 'HTTP status code {0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.undo', 'Undo']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.redo', 'Redo']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.loadsave', 'Load/Save']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['RestPrimitives.service_unavailable', 'The ViPLab infrastructure is currently experiencing a downtime\\nfor maintenance. Please wait for at least a minute and then\\ntry again. Sorry!']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Request.SOP', 'no access to resource due to Same Origin Policy']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.please_wait', 'Please Wait...']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.abort', 'Abort']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.timeout', 'Timeout while waiting for the result. Computation too complex?']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.ErrorTitle', 'Error']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.WarningTitle', 'Warning']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.output', 'Message : ']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.jumpto', 'Jump to Error']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.details', 'Error Details:']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.dismiss', 'Dismiss']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.dialog_headline', 'Load & Save Source Code']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.load', 'Upload Source Code']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.save', 'Download Source Code']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.default_filename', 'code.zip']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.button_close', 'Done']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.invalidZIP', 'The selected file is not a valid ZIP file\\nand cannot be loaded.']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.not_supported', 'Loading of local files is not supported\\nby your browser, please use copy & paste in the editor.\\n']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.not_fitting', 'The selected ZIP file contains no elements\\nsuitable for this exercise.']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.title', 'ViPLab Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.extract', 'Pull Out']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.pullin', 'Close Plotter Window']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.save', 'Download Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.window_title', 'Plotter Window']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.gridplot', '2D Grid Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.box', 'Boxed 3D Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.interpolated', 'Interpolated 3D Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.title', 'Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.unsupported', 'Your browser does not support plotting, sorry!\\nupgrade to at least FireFox 2.0, Chrome 4.0,\\nIE 9.0, Safari 3.1 or Opera 9.0']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.Reset', 'Reset']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.NextPlotFrame', 'Next Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.PreviousPlotFrame', 'Previous Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.FirstPlotFrame', 'First Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.LastPlotFrame', 'Previous Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.PlayPlotFrame', 'Continuous Play']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.ResetView', 'Reset View']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.first', '|<']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.last', '>|']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.prev', '<<']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.next', '>>']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.play', '>']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.time', 'Time:{0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['GLRenderFrame.WebGLException', 'WebGL reported a problem with the function plotter and had to be aborted, sorry!\\n\\nThis means that fast animations will not be possible on your browser and your system.\\nTo be able to render plots, you MUST NOW disable WebGL for your browser.\\nFor Firefox, type in \"about:config\" in the browser URL line, search for \"webgl\" and set\\nthe item \"webgl.disabled\" to \"true\". Also make sure \"webgl.force-enabled\" is \"false\".\\nFor all other browsers: Either check their configuration or install Firefox.\\n\\nYou should also report this incidence to the ViPLab team. The detailed error description is:\\n{0}\\n'])]);\n}\n\nfunction ViPResourceBundle_0(){\n  $clinit_ViPResourceBundle();\n  ListResourceBundle_0.call(this);\n}\n\ndefineSeed(515, 511, {}, ViPResourceBundle_0);\n_.getContents = function getContents(){\n  return contents;\n}\n;\nvar contents;\nfunction $clinit_ViPResourceBundle_de(){\n  $clinit_ViPResourceBundle_de = nullMethod;\n  contents_0 = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.default_unit_name', 'Quellcode']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.default_unit_name_n', 'Quellcode {0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.Compute', 'Berechnung starten']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.http_status', 'HTTP Statuscode {0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.undo', 'R\\xFCckg\\xE4ngig']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.redo', 'Wiederholen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['StudentPanel.loadsave', 'Laden/Sichern']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['RestPrimitives.service_unavailable', 'ViPLab ist momentan wegen Wartungsarbeiten nicht erreichbar\\nBitte warten Sie f\\xFCr mindestens eine Minute und versuchen Sie\\nes dann erneut. Vielen Dank!\\n']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Request.SOP', 'Resource aufgrund von Sicherheitsbeschr\\xE4nkungen nicht verf\\xFCgbar']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.please_wait', 'Bitte warten...']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.abort', 'Abbrechen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['SolutionSender.timeout', 'Zeit\\xFCberschreitung beim Warten auf das Ergebnis.\\nIst die Berechnung zu komplex?']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.ErrorTitle', 'Fehler']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.WarningTitle', 'Warnung']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.GenericErrorMsg', 'Fehler bei der Ausf\\xFChrung']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.GenericWarningMsg', 'Warnung bei der Ausf\\xFChrung']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.output', 'Ausgabe : ']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.jumpto', 'Zum Fehler Springen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.details', 'Details \\xFCber den Fehler:']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['ErrorRequester.dismiss', 'Schlie\\xDFen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.dialog_headline', 'Quellcode Laden und Speichern']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.load', 'Quellcode hochladen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.save', 'Quellcode herunterladen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.default_filename', 'Quellcode.zip']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.button_close', 'Schlie\\xDFen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.invalidZIP', 'Die ausgew\\xE4hlte Datei ist kein g\\xFCltiges ZIP-File\\nund kann daher nicht geladen werden.']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.not_supported', 'Laden von lokalen Dateien wird von Ihrem Browser leider\\nnicht unterst\\xFCtzt, verwenden Sie bitte Copy & Paste im Editor.']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LoadSaveDialog.not_fitting', 'Das gew\\xE4hlte ZIP-File enth\\xE4lt keine f\\xFCr\\ndiese Aufgabe passenden Elemente.']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.title', 'ViPLab Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.extract', 'Herausziehen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.pullin', 'Plot-Fenster schlie\\xDFen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.save', 'Plot herunterladen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.window_title', 'Plot-Fenster']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.gridplot', '2D Gitterplot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.box', '3D K\\xE4stchen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.interpolated', '3D interpoliert']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.title', 'Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['PlotterPanel.unsupported', 'Entschuldigung, Ihr Browser unterst\\xFCtzt keine Plots!\\nInstallieren Sie mindenstens FireFox 2.0, Chrome 4.0,\\nIE 9.0, Safari 3.1 oder Opera 9.0']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.Reset', 'Zur\\xFCcksetzen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.NextPlotFrame', 'N\\xE4chster Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.PreviousPlotFrame', 'Vorheriger Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.FirstPlotFrame', 'Erster Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.LastPlotFrame', 'Letzter Plot']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.PlayPlotFrame', 'Abspielen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['LinePlot.ResetView', 'Ansicht zur\\xFCcksetzen']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.first', '|<']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.last', '>|']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.prev', '<<']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.next', '>>']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.play', '>']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['TimeControl.time', 'Zeit:{0}']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['GLRenderFrame.WebGLException', 'WebGL hat ein Problem im Funktionsplotter festgestellt und muss nun beendet werden.\\n\\nDies bedeutet, dass mit Ihrer Kombination aus Browser und Hardware keine schnellen\\nAnimationen m\\xF6glich sind. Um trotzdem den Funktionsplotter nutzen zu k\\xF6nnen, m\\xFCssen\\nSie nun WebGL in Ihrem Browser ausschalten.\\n\\nFalls Sie Firefox benutzen, tippen Sie hierzu \"about:config\" in die URL-Zeile ein,\\nsuchen Sie nach \"webgl\" und stellen Sie die Einstellung \"webgl.disabled\" auf \"true\".\\nStellen Sie auch sicher, dass \"webgl.force-enabled\" auf \"false\" steht.\\nF\\xFCr alle anderen Browser suchen Sie bitte nach einer geeigneten Einstellung, oder\\ninstallieren Sie stattdessen Firefox.\\n\\nMelden Sie bitte dieses Problem an das ViPlab team. Die Fehlerbeschreibung lautet:\\n{0}\\n'])]);\n}\n\nfunction ViPResourceBundle_de_0(){\n  $clinit_ViPResourceBundle_de();\n  ListResourceBundle_0.call(this);\n}\n\ndefineSeed(516, 511, {}, ViPResourceBundle_de_0);\n_.getContents = function getContents_0(){\n  return contents_0;\n}\n;\nvar contents_0;\nfunction Cookie_0(cookie){\n  var eq, name_0, value_0;\n  if (cookie != null) {\n    eq = cookie.indexOf('=');\n    if (eq > 0) {\n      name_0 = $substring_0(cookie, 0, eq);\n      value_0 = $substring(cookie, eq + 1);\n      if (value_0.indexOf('\"') == 0) {\n        eq = value_0.indexOf('\"', 1);\n        if (eq > 1) {\n          this.value_0 = $substring_0(value_0, 1, eq);\n          this.name_0 = name_0;\n        }\n         else {\n          throw new RestException_1('Cookie::Cookie received invalid cookie');\n        }\n      }\n       else {\n        eq = value_0.indexOf(';');\n        if (eq > 0) {\n          value_0 = $substring_0(value_0, 0, eq);\n          this.name_0 = name_0;\n          this.value_0 = value_0;\n        }\n         else {\n          throw new RestException_1('Cookie::Cookie received invalid cookie');\n        }\n      }\n    }\n  }\n   else {\n    throw new NullPointerException_1('Cookie::Cookie argument must not be null');\n  }\n}\n\ndefineSeed(517, 1, makeCastMap([Q$Cookie]), Cookie_0);\nfunction $isError(this$static){\n  if (this$static.severity != null) {\n    return $equals('error', this$static.severity);\n  }\n  return false;\n}\n\nfunction ErrorElement_0(jo){\n  var output, source;\n  source = optJSONObject_0(jo, 'source');\n  output = optJSONObject_0(jo, 'output');\n  this.message_0 = optString_0(jo, 'message');\n  this.severity = optString_0(jo, 'severity');\n  if (source) {\n    this.element_0 = optString_0(source, 'elementID');\n    this.line = optInt(source, 'line');\n    this.column = optInt(source, 'col');\n    optString_0(source, 'extract');\n  }\n  !!output && optString_0(output, 'extract');\n}\n\ndefineSeed(518, 1, makeCastMap([Q$ErrorElement]), ErrorElement_0);\n_.column = 0;\n_.line = 0;\nfunction $isError_0(this$static){\n  var ee, ee$iterator;\n  for (ee$iterator = new AbstractList$IteratorImpl_0(this$static.errors); ee$iterator.i < ee$iterator.this$0_0.size_1();) {\n    ee = dynamicCast($next_3(ee$iterator), Q$ErrorElement);\n    if ($isError(ee))\n      return true;\n  }\n  return false;\n}\n\nfunction ErrorList_0(elements){\n  var ee, error, i, length_0;\n  length_0 = elements.jsArray.length;\n  this.errors = new ArrayList_0;\n  for (i = 0; i < length_0; i++) {\n    error = optJSONObject(elements, i);\n    if (error) {\n      ee = new ErrorElement_0(error);\n      $add_5(this.errors, ee);\n    }\n  }\n}\n\ndefineSeed(519, 1, {}, ErrorList_0);\n_.iterator = function iterator_12(){\n  return new AbstractList$IteratorImpl_0(this.errors);\n}\n;\nfunction $isEnabled(this$static){\n  if (this$static.exception)\n    throw this$static.exception;\n  return this$static.enabled;\n}\n\nfunction $poll(this$static){\n  var event_0;\n  if (this$static.enabled) {\n    try {\n      $postInternal(this$static.rest, this$static, 'polling', '../sys/events/fifo/', null);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RestException)) {\n        event_0 = new ECSEvent_1;\n        $triggerEvent(this$static.listeners, event_0);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n   else if (this$static.exception) {\n    event_0 = new ECSEvent_1;\n    $triggerEvent(this$static.listeners, event_0);\n  }\n}\n\nfunction EventPoller_0(r){\n  this.rest = r;\n  this.listeners = new ECSEventSource_0;\n  $getInternal(this.rest, this, 'get_members', '../sys/memberships');\n}\n\ndefineSeed(520, 1, makeCastMap([Q$ActionListener]), EventPoller_0);\n_.actionPerformed = function actionPerformed_6(ev){\n  var event_0, i, jo, len, rawevents, re, req;\n  if ($equals('get_members', ev.command)) {\n    if (instanceOf(ev.source, Q$Request)) {\n      req = dynamicCast(ev.source, Q$Request);\n      try {\n        $getText_0(req);\n        jo = new JSONObject_0;\n        $put(jo, 'participant_events', ($clinit_JSONBoolean() , $clinit_JSONBoolean() , TRUE_0));\n        $postInternal(this.rest, this, 'enable_events', '../sys/configs', $toString_0(jo));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$RestException)) {\n          re = $e0;\n          this.exception = re;\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n  }\n   else if ($equals('enable_events', ev.command)) {\n    if (instanceOf(ev.source, Q$Request)) {\n      req = dynamicCast(ev.source, Q$Request);\n      !req.exception?(this.enabled = true):(this.exception = req.exception);\n    }\n  }\n   else if ($equals('polling', ev.command)) {\n    if (instanceOf(ev.source, Q$Request)) {\n      try {\n        req = dynamicCast(ev.source, Q$Request);\n        rawevents = $getAsArray(req);\n        if (rawevents) {\n          len = rawevents.jsArray.length;\n          for (i = 0; i < len; i++) {\n            try {\n              event_0 = new ECSEvent_0(getJSONObject(rawevents, i));\n            }\n             catch ($e1) {\n              $e1 = wrap($e1);\n              if (instanceOf($e1, Q$JSONException)) {\n                event_0 = new ECSEvent_1;\n              }\n               else \n                throw unwrap_5($e1);\n            }\n            $triggerEvent(this.listeners, event_0);\n          }\n        }\n      }\n       catch ($e2) {\n        $e2 = wrap($e2);\n        if (instanceOf($e2, Q$RestException)) {\n          event_0 = new ECSEvent_1;\n          $triggerEvent(this.listeners, event_0);\n        }\n         else \n          throw unwrap_5($e2);\n      }\n    }\n  }\n}\n;\n_.enabled = false;\nfunction $createMergeListFromElements(this$static){\n  var bodies, e, e$iterator, epilogues, havetype, id_0, merge, mergelist, preambles, prio, u, u$iterator;\n  preambles = 0;\n  bodies = 0;\n  epilogues = 0;\n  mergelist = new ArrayList_0;\n  merge = new ArrayList_0;\n  setCheck(mergelist.array, mergelist.size_0++, merge);\n  for (u$iterator = new AbstractList$IteratorImpl_0(this$static.units); u$iterator.i < u$iterator.this$0_0.size_1();) {\n    u = dynamicCast($next_3(u$iterator), Q$TranslationUnit);\n    for (e$iterator = new AbstractList$IteratorImpl_0(u.elements); e$iterator.i < e$iterator.this$0_0.size_1();) {\n      e = dynamicCast($next_3(e$iterator), Q$ExerciseElement);\n      id_0 = e.identifier;\n      prio = preambles;\n      havetype = false;\n      if (id_0.indexOf('preambel') == 0) {\n        try {\n          prio = __parseAndValidateInt($substring(id_0, 8)) - 1;\n          ++preambles;\n          havetype = true;\n        }\n         catch ($e0) {\n          $e0 = wrap($e0);\n          if (!instanceOf($e0, Q$NumberFormatException))\n            throw unwrap_5($e0);\n        }\n      }\n       else if (id_0.indexOf('epilog') == 0) {\n        try {\n          prio = __parseAndValidateInt($substring(id_0, 6)) - 1 + preambles + bodies;\n          ++epilogues;\n          havetype = true;\n        }\n         catch ($e1) {\n          $e1 = wrap($e1);\n          if (!instanceOf($e1, Q$NumberFormatException))\n            throw unwrap_5($e1);\n        }\n      }\n      if (!havetype) {\n        prio = preambles + bodies;\n        ++bodies;\n      }\n      $add_4(merge, prio, id_0);\n    }\n  }\n  return mergelist;\n}\n\nfunction $createUnitByName(this$static, unit, type_0){\n  var nu, u, u$iterator;\n  for (u$iterator = new AbstractList$IteratorImpl_0(this$static.units); u$iterator.i < u$iterator.this$0_0.size_1();) {\n    u = dynamicCast($next_3(u$iterator), Q$TranslationUnit);\n    if (unit == null) {\n      if (u.name_0 == null)\n        return u;\n    }\n     else if ($equals(unit, u.name_0)) {\n      return u;\n    }\n  }\n  nu = new TranslationUnit_0(unit, type_0);\n  $add_5(this$static.units, nu);\n  return nu;\n}\n\nfunction $findTabTypeByName(properties, name_0){\n  var props, tstring, type_0;\n  type_0 = 0;\n  if (properties) {\n    props = optJSONObject_0(properties, name_0);\n    if (props) {\n      tstring = optString_0(props, 'tabType');\n      $equals('source', tstring)?(type_0 = 0):$equals('header', tstring)?(type_0 = 1):$equals('data', tstring) && (type_0 = 2);\n    }\n  }\n  return type_0;\n}\n\nfunction $parseConfig(chain){\n  var element, j, k, len, merge, mergearray, mergelist, merging, mlen, sources, sublist;\n  mergelist = null;\n  merging = optJSONObject_0(chain, 'merging');\n  if (merging) {\n    sources = optJSONArray(merging, 'sources');\n    if (sources) {\n      len = sources.jsArray.length;\n      merge = new ArrayList_0;\n      mergelist = new ArrayList_0;\n      setCheck(mergelist.array, mergelist.size_0++, merge);\n      for (j = 0; j < len; j++) {\n        element = optString(sources, j);\n        element != null && (setCheck(merge.array, merge.size_0++, element) , true);\n      }\n    }\n  }\n   else {\n    mergearray = optJSONArray(chain, 'merging');\n    if (mergearray) {\n      mlen = mergearray.jsArray.length;\n      for (k = 0; k < mlen; k++) {\n        sublist = optJSONObject(mergearray, k);\n        if (sublist) {\n          sources = optJSONArray(sublist, 'sources');\n          if (sources) {\n            len = sources.jsArray.length;\n            merge = new ArrayList_0;\n            !mergelist && (mergelist = new ArrayList_0);\n            setCheck(mergelist.array, mergelist.size_0++, merge);\n            for (j = 0; j < len; j++) {\n              element = optString(sources, j);\n              element != null && (setCheck(merge.array, merge.size_0++, element) , true);\n            }\n          }\n        }\n      }\n    }\n  }\n  return mergelist;\n}\n\nfunction Exercise_0(jo, url_0){\n  var chain, el, ex, i, ja, je, l_0, mergelist, name_0, properties, routing, s, s$iterator, type_0, un, un$iterator, unit;\n  mergelist = null;\n  this.units = new ArrayList_0;\n  ex = getJSONObject_0(jo, 'Exercise');\n  optString_0(ex, 'description');\n  this.name_0 = optString_0(ex, 'name');\n  this.department = optString_0(ex, 'department');\n  this.config = getJSONObject_0(ex, 'config');\n  optString_0(ex, 'postTime');\n  routing = optJSONObject_0(ex, 'routing');\n  properties = optJSONObject_0(ex, 'elementProperties');\n  this.source = url_0;\n  !$get_0(ex, 'TTL');\n  for (s$iterator = new AbstractList$IteratorImpl_0(new Arrays$ArrayList_0($keySet(this.config).val$keys)); s$iterator.i < s$iterator.this$0_0.size_1();) {\n    s = dynamicCast($next_3(s$iterator), Q$String);\n    chain = optJSONObject_0(this.config, s);\n    this.chaintype = s;\n    !!chain && (mergelist = $parseConfig(chain));\n  }\n  ja = getJSONArray(ex);\n  if (ja) {\n    l_0 = ja.jsArray.length;\n    for (i = 0; i < l_0; i++) {\n      je = getJSONObject(ja, i);\n      if (je) {\n        el = new ExerciseElement_0(je);\n        if ($equals('text/plain', el.mimeType)) {\n          name_0 = el.group;\n          type_0 = $findTabTypeByName(properties, name_0);\n          unit = $createUnitByName(this, name_0, type_0);\n          $add_5(unit.elements, el);\n        }\n      }\n    }\n  }\n  !mergelist && (mergelist = $createMergeListFromElements(this));\n  for (un$iterator = new AbstractList$IteratorImpl_0(this.units); un$iterator.i < un$iterator.this$0_0.size_1();) {\n    un = dynamicCast($next_3(un$iterator), Q$TranslationUnit);\n    $sortElementsByMergeOrder(un, mergelist);\n  }\n  !!routing && (this.queue = optString_0(routing, 'solutionQueue'));\n  this.queue == null && (this.queue = 'solutions');\n}\n\ndefineSeed(521, 1, {}, Exercise_0);\n_.iterator = function iterator_13(){\n  return new AbstractList$IteratorImpl_0(this.units);\n}\n;\n_.toString$ = function toString_28(){\n  var dep;\n  this.name_0.length > 40 && (this.name_0 = $substring_0(this.name_0, 0, 37) + '...');\n  if (this.department != null && this.department.length > 0) {\n    dep = this.department;\n    dep.length > 7 && (dep = $substring_0(dep, 0, 3) + '...');\n    return '[' + dep + ':' + this.source + ']' + this.name_0;\n  }\n   else {\n    return '[' + this.source + ']' + this.name_0;\n  }\n}\n;\nfunction ExerciseElement_0(jo){\n  this.identifier = optString_0(jo, 'identifier');\n  optString_0(jo, 'name');\n  this.isEditable = optBoolean(jo, 'modifiable', false);\n  this.isVisible = optBoolean(jo, 'visible', true);\n  this.body_0 = optString_0(jo, 'value');\n  this.mimeType = optString_0(jo, 'MIMEtype');\n  this.syntax = optString_0(jo, 'syntaxHighlighting');\n  this.group = optString_0(jo, 'group');\n  this.identifier == null && (this.identifier = 'unknown');\n}\n\ndefineSeed(522, 1, makeCastMap([Q$ExerciseElement]), ExerciseElement_0);\n_.isEditable = false;\n_.isVisible = false;\nfunction $addActionListener_4(this$static, ev){\n  $addActionListener(this$static.listeners, ev);\n}\n\nfunction $getLoadedJSON(this$static){\n  if (this$static.error) {\n    throw this$static.error;\n  }\n   else {\n    return this$static.loaded;\n  }\n}\n\nfunction $loadJSON(this$static, ex){\n  if (this$static.running)\n    throw new RestException_1('Internal Error - JSONLoader is already busy');\n  this$static.running = true;\n  this$static.loaded = null;\n  this$static.error = null;\n  this$static.dir_0 = 'exercises';\n  this$static.action_0 = 'exercise';\n  this$static.url_0 = ex;\n  $schedule(this$static, 75);\n}\n\ndefineSeed(524, 10, makeCastMap([Q$ActionListener]));\n_.actionPerformed = function actionPerformed_7(ev){\n  var re, req;\n  if (instanceOf(ev.source, Q$Request)) {\n    req = dynamicCast(ev.source, Q$Request);\n    try {\n      this.loaded = $getAsObject(req);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RestException)) {\n        re = $e0;\n        this.error = re;\n      }\n       else \n        throw unwrap_5($e0);\n    }\n    $triggerActionEvent(this.listeners, new ActionEvent_0(this, 0, this.action_0));\n    this.running = false;\n  }\n}\n;\n_.run = function run_2(){\n  var re;\n  try {\n    $isEnabled(this.polling)?$getInternal(this.rest, this, 'read', this.dir_0 + '/' + this.url_0):$schedule(this, 500);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$RestException)) {\n      re = $e0;\n      this.error = re;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n;\n_.running = false;\nfunction $getLoadedExercise(this$static){\n  var je, jo;\n  if (!this$static.exercise) {\n    try {\n      jo = $getLoadedJSON(this$static);\n      if (!jo)\n        throw new RestException_1('The exercise ' + this$static.url_0 + ' does not exist on the server.');\n      this$static.exercise = new Exercise_0(jo, this$static.url_0);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$JSONException)) {\n        je = $e0;\n        throw new RestException_3(je);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  return this$static.exercise;\n}\n\nfunction $loadExercise_0(this$static, ex){\n  this$static.exercise = null;\n  $loadJSON(this$static, ex);\n}\n\nfunction ExerciseLoader_0(r, events){\n  this.listeners = new ActionEventSource_0;\n  this.polling = events;\n  this.rest = r;\n  this.running = false;\n}\n\ndefineSeed(523, 524, makeCastMap([Q$ActionListener]), ExerciseLoader_0);\nfunction $addHeader(this$static, rb){\n  $setHeader(rb, this$static.name_0, this$static.value_0);\n}\n\nfunction HTTPHeader_0(name_0, value_0){\n  this.name_0 = name_0;\n  this.value_0 = value_0;\n}\n\ndefineSeed(525, 219, makeCastMap([Q$Header, Q$HTTPHeader]), HTTPHeader_0);\nfunction $addCookie(this$static, c){\n  if (this$static.isSent)\n    throw new IllegalStateException_1('Internal - Request has already been transmitted, cannot add properties');\n  setCookie(c.name_0, c.value_0);\n}\n\nfunction $addCookies(this$static, cookies){\n  var c, c$iterator;\n  if (cookies) {\n    for (c$iterator = new AbstractList$IteratorImpl_0(cookies); c$iterator.i < c$iterator.this$0_0.size_1();) {\n      c = dynamicCast($next_3(c$iterator), Q$Cookie);\n      $addCookie(this$static, c);\n    }\n  }\n}\n\nfunction $addHeader_0(this$static, name_0, value_0){\n  if (this$static.isSent)\n    throw new IllegalStateException_1('Internal - Request has already been transmitted, cannot add properties');\n  $setHeader(this$static.builder, name_0, value_0);\n}\n\nfunction $addHeader_1(this$static, header){\n  if (this$static.isSent)\n    throw new IllegalStateException_1('Internal - Request has already been transmitted, cannot add properties');\n  $addHeader(header, this$static.builder);\n}\n\nfunction $addHeaders(this$static, headers){\n  var h_0, h$iterator;\n  if (headers) {\n    for (h$iterator = new AbstractList$IteratorImpl_0(headers); h$iterator.i < h$iterator.this$0_0.size_1();) {\n      h_0 = dynamicCast($next_3(h$iterator), Q$HTTPHeader);\n      $addHeader_1(this$static, h_0);\n    }\n  }\n}\n\nfunction $getAsArray(this$static){\n  var body_0, obj, value_0;\n  body_0 = $getText_0(this$static);\n  if (body_0.indexOf('ZIP:') == 0) {\n    try {\n      body_0 = UnzipContent(body_0);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IllegalArgumentException)) {\n        throw new RestException_1(\"Internal - Request responded with invalid ZIP'd JSON object\");\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  if (body_0.indexOf('[') == 0) {\n    value_0 = ($clinit_JSONParser() , parse_0(body_0));\n    if (value_0) {\n      obj = value_0.isArray();\n      return obj;\n    }\n  }\n  if ($equals('', body_0) || $equals('null', body_0))\n    return null;\n  throw new RestException_1('Internal - Request did not respond with a JSON array');\n}\n\nfunction $getAsObject(this$static){\n  var body_0, obj, value_0;\n  body_0 = $getText_0(this$static);\n  if (body_0.indexOf('ZIP:') == 0) {\n    try {\n      body_0 = UnzipContent(body_0);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$IllegalArgumentException)) {\n        throw new RestException_1(\"Internal - Request responded with invalid ZIP'd JSON object\");\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n  if (body_0.indexOf('{') == 0) {\n    value_0 = ($clinit_JSONParser() , parse_0(body_0));\n    if (value_0) {\n      obj = value_0.isObject();\n      return obj;\n    }\n  }\n  if ($equals('', body_0) || $equals('null', body_0))\n    return null;\n  throw new RestException_1('Internal - Request did not respond with a JSON object');\n}\n\nfunction $getText_0(this$static){\n  if (!this$static.isReceived)\n    throw new IllegalStateException_1('Internal - Request has not yet been received');\n  if (this$static.exception)\n    throw this$static.exception;\n  return this$static.response?this$static.response.getText():null;\n}\n\nfunction $onError(this$static, exception){\n  if (!this$static.isCanceled) {\n    !exception && new RestException_2(null.nullMethod(), null.nullMethod());\n    if (!this$static.isReceived) {\n      this$static.isReceived = true;\n      this$static.listener.actionPerformed(new ActionEvent_0(this$static, 500, this$static.actioncmd));\n    }\n  }\n}\n\nfunction $onResponseReceived(this$static, response){\n  var code_0, re;\n  if (!this$static.isCanceled) {\n    if (response.getStatusCode() == 0) {\n      !this$static.exception && (this$static.exception = new RestException_2('no access to resource due to Same Origin Policy', $_(this$static.locale, 'Request.SOP')));\n    }\n     else if (response.getStatusCode() >= 200 && response.getStatusCode() < 300) {\n      if (this$static.isDelete && !this$static.isCanceled) {\n        this$static.response = response;\n        try {\n          $send(this$static.builder);\n          return;\n        }\n         catch ($e0) {\n          $e0 = wrap($e0);\n          if (instanceOf($e0, Q$RequestException)) {\n            re = $e0;\n            !!this$static.exception && (this$static.exception = new RestException_3(re));\n          }\n           else \n            throw unwrap_5($e0);\n        }\n      }\n    }\n     else {\n      if (response.getStatusCode() == 500 && !this$static.isCanceled) {\n        if (this$static.retry > 0) {\n          --this$static.retry;\n          $schedule(this$static, ~~Math.floor(Math.random() * 1000) + 1000);\n          return;\n        }\n         else {\n          this$static.exception = new RestException_0(response.getStatusCode());\n        }\n      }\n       else \n        response.getStatusCode() == 404 && this$static.isDelete && !!this$static.response?(response = this$static.response):!this$static.exception && (this$static.exception = new RestException_0(response.getStatusCode()));\n    }\n    this$static.response = response;\n    if (!this$static.isReceived) {\n      this$static.isReceived = true;\n      code_0 = 200;\n      !!response && (response.getStatusCode() == 0?(code_0 = 403):(code_0 = response.getStatusCode()));\n      !!this$static.exception && (code_0 = 500);\n      this$static.listener.actionPerformed(new ActionEvent_0(this$static, code_0, this$static.actioncmd));\n    }\n  }\n}\n\nfunction $sendRequest(this$static){\n  var re;\n  if (this$static.isSent)\n    throw new IllegalStateException_1('Internal - Request has already been transmitted, cannot transmit again');\n  if (!this$static.isCanceled) {\n    this$static.isSent = true;\n    try {\n      $send(this$static.builder);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RequestException)) {\n        re = $e0;\n        throw new RestException_3(re);\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n\nfunction $setText_6(this$static, body_0){\n  if (this$static.isSent)\n    throw new IllegalStateException_1('Internal - Request has already been transmitted, cannot add a body');\n  body_0 == null?$setRequestData(this$static.builder, ''):$setRequestData(this$static.builder, body_0);\n}\n\nfunction Request_2(target, cmd, method, path){\n  this.locale = new Locale_0;\n  this.isSent = false;\n  this.isReceived = false;\n  this.isCanceled = false;\n  this.exception = null;\n  this.response = null;\n  this.isDelete = method == ($clinit_RequestBuilder() , DELETE);\n  this.actioncmd = cmd;\n  this.listener = target;\n  this.retry = 8;\n  if (!this.listener)\n    throw new NullPointerException_1('The action listener must be non-zero');\n  this.builder = new RequestBuilder_0(method, path);\n  this.builder.timeoutMillis = 20000;\n  $setCallback(this.builder, this);\n}\n\ndefineSeed(526, 10, makeCastMap([Q$Request]), Request_2);\n_.run = function run_3(){\n  var re;\n  if (!this.isCanceled) {\n    try {\n      $send(this.builder);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RequestException)) {\n        re = $e0;\n        !!this.exception && (this.exception = new RestException_3(re));\n        if (!this.isReceived) {\n          this.isReceived = true;\n          this.listener.actionPerformed(new ActionEvent_0(this, 500, this.actioncmd));\n        }\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n;\n_.isCanceled = false;\n_.isDelete = false;\n_.isReceived = false;\n_.isSent = false;\n_.retry = 0;\nfunction $getLocalizedMessage(this$static){\n  if (this$static.localizedMessage != null)\n    return this$static.localizedMessage;\n  return this$static.detailMessage;\n}\n\nfunction RestException_0(status_0){\n  Exception_1.call(this, 'HTTP Status ' + status_0);\n  this.httpCode = status_0;\n  this.localizedMessage = 'HTTP Status ' + status_0;\n}\n\nfunction RestException_1(msg){\n  Exception_1.call(this, msg);\n  this.httpCode = 0;\n  this.localizedMessage = msg;\n}\n\nfunction RestException_2(msg, localized){\n  Exception_1.call(this, msg);\n  this.httpCode = 0;\n  this.localizedMessage = localized;\n}\n\nfunction RestException_3(t){\n  Exception_1.call(this, t.getMessage());\n  this.httpCode = 0;\n  this.localizedMessage = t.getLocalizedMessage();\n}\n\nfunction RestException_4(io){\n  Exception_1.call(this, io.detailMessage);\n  this.httpCode = 0;\n  this.localizedMessage = io.detailMessage;\n}\n\ndefineSeed(527, 91, makeCastMap([Q$Serializable, Q$Throwable, Q$RestException]), RestException_0, RestException_1, RestException_2, RestException_3, RestException_4);\n_.getLocalizedMessage = function getLocalizedMessage_2(){\n  return $getLocalizedMessage(this);\n}\n;\n_.toString$ = function toString_29(){\n  return $getLocalizedMessage(this);\n}\n;\n_.httpCode = 0;\nfunction $addCookie_0(this$static, cookie){\n  var c;\n  if (cookie != null) {\n    try {\n      c = new Cookie_0(cookie);\n      $add_5(this$static.cookies, c);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (!instanceOf($e0, Q$RestException))\n        throw unwrap_5($e0);\n    }\n  }\n}\n\nfunction $clearCookies(this$static){\n  var cookie, cookie$iterator;\n  this$static.cookies = new ArrayList_0;\n  for (cookie$iterator = $iterator($keySet_0(ensureCookies())); $hasNext(cookie$iterator.val$outerIter.iter);) {\n    cookie = dynamicCast($next_4(cookie$iterator), Q$String);\n    removeCookie(cookie);\n  }\n}\n\nfunction $deleteInternal(this$static, al, url_0){\n  var il, req;\n  try {\n    req = $restartConnection(this$static, al, 'delete', ($clinit_RequestBuilder() , DELETE), url_0);\n    $sendRequest(req);\n    return req;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$IllegalStateException)) {\n      il = $e0;\n      throw new RestException_3(il);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $getInternal(this$static, al, cmd, url_0){\n  var il, req;\n  try {\n    req = $restartConnection(this$static, al, cmd, ($clinit_RequestBuilder() , GET), url_0);\n    $sendRequest(req);\n    return req;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$IllegalStateException)) {\n      il = $e0;\n      throw new RestException_3(il);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $postInternal(this$static, al, cmd, url_0, body_0){\n  var il, req;\n  try {\n    req = $restartConnection(this$static, al, cmd, ($clinit_RequestBuilder() , POST), url_0);\n    $setText_6(req, body_0);\n    if (body_0 != null) {\n      $addHeader_0(req, 'Content-Type', 'application/json; charset=utf-8');\n      $addHeader_0(req, 'Content-Length', '' + body_0.length);\n    }\n    $sendRequest(req);\n    return req;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$IllegalStateException)) {\n      il = $e0;\n      throw new RestException_3(il);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $restartConnection(this$static, al, cmd, method, path){\n  var ec, is, r, url_0;\n  if (path.indexOf('../') == 0) {\n    ec = this$static.baseURL.lastIndexOf('/');\n    if (ec <= 0)\n      throw new RestException_1('Base URL is invalid, must contain at least a path that is one level deep');\n    url_0 = $substring_0(this$static.baseURL, 0, ec) + '/' + $substring(path, 3);\n  }\n   else {\n    url_0 = this$static.baseURL + '/' + path;\n  }\n  try {\n    r = new Request_2(al, cmd, method, url_0);\n    $addHeader_0(r, 'Accept', 'application/json, text/uri-list, text/plain');\n    $addHeader_0(r, 'X-EcsReceiverMemberships', this$static.memberships);\n    $addHeaders(r, this$static.headers);\n    $addCookies(r, this$static.cookies);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$IllegalStateException)) {\n      is = $e0;\n      throw new RestException_3(is);\n    }\n     else \n      throw unwrap_5($e0);\n  }\n  return r;\n}\n\nfunction RestPrimitives_0(base, cookie, mid, hdrs){\n  var ec, i, len;\n  new Locale_0;\n  this.headers = new ArrayList_0;\n  $clearCookies(this);\n  if ($endsWith(base, '/')) {\n    ec = base.lastIndexOf('/');\n    this.baseURL = $substring_0(base, 0, ec);\n  }\n   else {\n    this.baseURL = base;\n  }\n  $addCookie_0(this, cookie);\n  if (hdrs != null) {\n    len = hdrs.length;\n    for (i = 0; i < len; i++) {\n      $add_5(this.headers, hdrs[i]);\n    }\n  }\n  this.devel = true;\n  mid == null?this.devel?(this.memberships = '1'):(this.memberships = '5'):(this.memberships = mid);\n}\n\ndefineSeed(528, 1, {}, RestPrimitives_0);\n_.devel = false;\nfunction Result_0(jo){\n  var computation, elements, i, je, length_0, re, resbody, result, solution, status_0, userinfo;\n  resbody = getJSONObject_0(jo, 'Result');\n  solution = getJSONObject_0(resbody, 'Solution');\n  computation = optJSONObject_0(resbody, 'computation');\n  status_0 = optString_0(resbody, 'status');\n  $equals('intermediate', status_0)?(this.isfinal = false):(this.isfinal = true);\n  if (computation) {\n    userinfo = optJSONObject_0(computation, 'userInfo');\n    if (userinfo) {\n      elements = optJSONArray(userinfo, 'elements');\n      !!elements && (this.errors = new ErrorList_0(elements));\n    }\n  }\n  this.id_0 = getInt(solution);\n  je = getJSONArray(resbody);\n  length_0 = je.jsArray.length;\n  this.elements = new ArrayList_0;\n  for (i = 0; i < length_0; i++) {\n    result = optJSONObject(je, i);\n    if (result) {\n      re = new ResultElement_0(result);\n      $add_5(this.elements, re);\n    }\n  }\n  this.json = jo;\n}\n\ndefineSeed(529, 1, {}, Result_0);\n_.iterator = function iterator_14(){\n  return new AbstractList$IteratorImpl_0(this.elements);\n}\n;\n_.id_0 = 0;\n_.isfinal = false;\nfunction ResultElement_0(jo){\n  this.identifier = optString_0(jo, 'identifier');\n  this.body_0 = optString_0(jo, 'value');\n  optString_0(jo, 'name');\n  this.mimeType = optString_0(jo, 'MIMEtype');\n}\n\ndefineSeed(530, 1, makeCastMap([Q$ResultElement]), ResultElement_0);\nfunction Solution_0(sourceurl, sources){\n  var body_0, bodyelements, date, entry, formatter, idx, jsonelements, sce, vms, vms$iterator, w, w$iterator;\n  new JSONObject_0;\n  jsonelements = new JSONObject_0;\n  bodyelements = new JSONArray_0;\n  date = new Date_1;\n  formatter = ($clinit_DateTimeFormat_0() , getFormat($getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance))));\n  idx = 0;\n  this.body_0 = new JSONObject_0;\n  for (vms$iterator = new AbstractList$IteratorImpl_0(sources.editors); vms$iterator.i < vms$iterator.this$0_0.size_1();) {\n    vms = dynamicCast($next_3(vms$iterator), Q$VerticalMultiSplit);\n    for (w$iterator = new AbstractList$IteratorImpl_0(vms.contents); w$iterator.i < w$iterator.this$0_0.size_1();) {\n      w = dynamicCast($next_3(w$iterator), Q$Widget);\n      if (instanceOf(w, Q$EditorInterface)) {\n        sce = dynamicCast(w, Q$EditorInterface);\n        if (sce.editable) {\n          body_0 = sce.started && !!sce.text_0?$getText(sce.text_0):sce.initial;\n          entry = new JSONObject_0;\n          if (!$endsWith(body_0, '\\n')) {\n            body_0 += '\\n';\n            sce.started && !!sce.text_0?$setText_4(sce.text_0, body_0):(sce.initial = body_0);\n          }\n          $put(entry, 'identifier', new JSONString_0(sce.identifier));\n          $put(entry, 'value', new JSONString_0(body_0));\n          $set_1(bodyelements, idx++, entry);\n        }\n      }\n    }\n  }\n  $put(jsonelements, 'elements', bodyelements);\n  $put(this.body_0, 'postTime', new JSONString_0($format(formatter, date, null)));\n  $put(this.body_0, 'exercise', new JSONString_0(sourceurl));\n  $put(this.body_0, 'ID', new JSONNumber_0(0));\n  $put(this.body_0, 'exerciseModifications', jsonelements);\n  this.solution = new JSONObject_0;\n  $put(this.solution, 'Solution', this.body_0);\n}\n\ndefineSeed(531, 1, {}, Solution_0);\n_.toString$ = function toString_30(){\n  return $toString_0(this.solution);\n}\n;\nfunction $abortRequest(this$static){\n  if (this$static.request) {\n    this$static.request.isCanceled = true;\n    this$static.request = null;\n  }\n  this$static.result_0 = null;\n  $hide_0(this$static.progress.dialog, false);\n  this$static.running = false;\n  $triggerActionEvent(this$static.listeners, new ActionEvent_0(this$static, -1, 'aborted'));\n}\n\nfunction $addActionListener_5(this$static, al){\n  $addActionListener(this$static.listeners, al);\n}\n\nfunction $getResult_0(this$static){\n  if (this$static.exception)\n    throw this$static.exception;\n  return this$static.result_0;\n}\n\nfunction $postSolution(this$static, rest, exercise, source, id_0){\n  var jo, queue, re, solution;\n  if (this$static.running)\n    throw new RestException_1('Internal Error - SolutionPoster is already busy');\n  $show_2(this$static.progress);\n  this$static.running = true;\n  this$static.busy = false;\n  this$static.request = null;\n  this$static.solid = id_0;\n  queue = exercise.queue;\n  this$static.result_0 = null;\n  this$static.rest = rest;\n  try {\n    if (!$isEnabled(this$static.eventpoller))\n      throw new RestException_1('Internal Error - Event Poller is not running');\n    solution = new Solution_0(rest.baseURL + '/exercises/' + exercise.source, source);\n    $put(solution.body_0, 'ID', new JSONNumber_0(id_0));\n    this$static.request = $postInternal(rest, this$static, 'submitted', queue, $toString_0(solution.solution));\n    $schedule(this$static, 250);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JSONException)) {\n      jo = $e0;\n      $abortRequest(this$static);\n      throw new RestException_3(jo);\n    }\n     else if (instanceOf($e0, Q$RestException)) {\n      re = $e0;\n      $abortRequest(this$static);\n      throw re;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction $receivedEvent(this$static, event_0){\n  var re;\n  if (this$static.running && !!this$static.request && !!this$static.rest) {\n    this$static.busy = true;\n    if ($equals('results', event_0.queue)) {\n      try {\n        $deleteInternal(this$static.rest, this$static, 'results/' + event_0.index_0 + '/');\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$RestException)) {\n          re = $e0;\n          this$static.exception = re;\n          $abortRequest(this$static);\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n  }\n}\n\nfunction SolutionSender_0(poller){\n  this.eventpoller = poller;\n  this.listeners = new ActionEventSource_0;\n  this.locale = new Locale_0;\n  this.request = null;\n  this.result_0 = null;\n  this.running = false;\n  this.busy = false;\n  $addECSListener(poller.listeners, this);\n  this.progress = new ProgressBar_0($_(this.locale, 'SolutionSender.please_wait'), $_(this.locale, 'SolutionSender.abort'));\n  $addActionListener_1(this.progress, this);\n}\n\ndefineSeed(532, 10, makeCastMap([Q$ActionListener, Q$ECSListener]), SolutionSender_0);\n_.actionPerformed = function actionPerformed_8(ev){\n  var cmd, je, jo, re, res, rq;\n  if (this.running && instanceOf(ev.source, Q$Request)) {\n    rq = dynamicCast(ev.source, Q$Request);\n    cmd = ev.command;\n    this.busy = true;\n    if ($equals('submitted', cmd)) {\n      if (rq.exception) {\n        this.exception = rq.exception;\n        $abortRequest(this);\n      }\n    }\n     else if ($equals('delete', cmd)) {\n      try {\n        jo = $getAsObject(rq);\n        if (jo) {\n          res = new Result_0(jo);\n          if (res.id_0 != this.solid)\n          ;\n          else {\n            if (res.isfinal) {\n              this.running = false;\n              this.request = null;\n              this.result_0 = res;\n              $hide_0(this.progress.dialog, false);\n              $triggerActionEvent(this.listeners, new ActionEvent_0(this, 0, 'completed'));\n            }\n             else {\n              this.result_0 = res;\n              $triggerActionEvent(this.listeners, new ActionEvent_0(this, 1, 'intermediate'));\n            }\n          }\n        }\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$RestException)) {\n          re = $e0;\n          this.exception = re;\n          $abortRequest(this);\n        }\n         else if (instanceOf($e0, Q$JSONException)) {\n          je = $e0;\n          this.exception = new RestException_3(je);\n          $abortRequest(this);\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n  }\n   else \n    instanceOf(ev.source, Q$ProgressBar) && $abortRequest(this);\n}\n;\n_.run = function run_4(){\n  var percent;\n  if (this.running) {\n    percent = this.progress.inner.current;\n    (!this.busy || percent < 10) && ++percent;\n    if (percent <= 100) {\n      $setProgress(this.progress, percent);\n      if ((percent & 3) == 0 || this.busy) {\n        do {\n          this.busy = false;\n          $poll(this.eventpoller);\n        }\n         while (this.busy);\n      }\n      $schedule(this, 250);\n    }\n     else {\n      !this.exception && (this.exception = new RestException_1($_(this.locale, 'SolutionSender.timeout')));\n      $abortRequest(this);\n    }\n  }\n}\n;\n_.busy = false;\n_.running = false;\n_.solid = 0;\nfunction $sortElementsByMergeOrder(this$static, mergelist){\n  var al, e, e$iterator, id_0, id$iterator, merge, merge$iterator;\n  al = new ArrayList_0;\n  for (merge$iterator = new AbstractList$IteratorImpl_0(mergelist); merge$iterator.i < merge$iterator.this$0_0.size_1();) {\n    merge = dynamicCast($next_3(merge$iterator), Q$ArrayList);\n    for (id$iterator = new AbstractList$IteratorImpl_0(merge); id$iterator.i < id$iterator.this$0_0.size_1();) {\n      id_0 = dynamicCast($next_3(id$iterator), Q$String);\n      for (e$iterator = new AbstractList$IteratorImpl_0(this$static.elements); e$iterator.i < e$iterator.this$0_0.size_1();) {\n        e = dynamicCast($next_3(e$iterator), Q$ExerciseElement);\n        if ($equals(id_0, e.identifier)) {\n          $remove_13(this$static.elements, e);\n          setCheck(al.array, al.size_0++, e);\n          break;\n        }\n      }\n    }\n  }\n  while (this$static.elements.size_0 != 0) {\n    e = dynamicCast($remove_12(this$static.elements, 0), Q$ExerciseElement);\n    setCheck(al.array, al.size_0++, e);\n  }\n  this$static.elements = al;\n}\n\nfunction TranslationUnit_0(identifier, type_0){\n  this.name_0 = identifier;\n  this.tabtype = type_0;\n  this.elements = new ArrayList_0;\n}\n\ndefineSeed(533, 1, makeCastMap([Q$TranslationUnit]), TranslationUnit_0);\n_.iterator = function iterator_15(){\n  return new AbstractList$IteratorImpl_0(this.elements);\n}\n;\n_.tabtype = 0;\nfunction $createGUI_1(this$static, c){\n  var cpanel, hpanel, vpanel;\n  vpanel = new VerticalPanel_0;\n  hpanel = new HorizontalPanel_0;\n  cpanel = new HorizontalPanel_0;\n  ($clinit_DOM() , vpanel.element_0).style['width'] = '100%';\n  vpanel.element_0.style['height'] = '100%';\n  hpanel.element_0.style['width'] = '100%';\n  hpanel.element_0.style['height'] = '100%';\n  cpanel.element_0.style['width'] = '100%';\n  cpanel.element_0.style['height'] = '100%';\n  this$static.reset_0 = new Button_2($_(this$static.locale, 'LinePlot.Reset'), 0, 'reset');\n  $setToolTipText(this$static.reset_0, $_(this$static.locale, 'LinePlot.ResetView'));\n  $addActionListener_0(this$static.reset_0, this$static);\n  this$static.frameNext = new Button_2('>>', 1, 'next');\n  $setToolTipText(this$static.frameNext, $_(this$static.locale, 'LinePlot.NextPlotFrame'));\n  $addActionListener_0(this$static.frameNext, this$static);\n  $setWidth_0(this$static.frameNext, '3em');\n  $setHeight_0(this$static.frameNext, '2em');\n  this$static.framePrev = new Button_2('<<', -1, 'prev');\n  $setToolTipText(this$static.framePrev, $_(this$static.locale, 'LinePlot.PreviousPlotFrame'));\n  $addActionListener_0(this$static.framePrev, this$static);\n  $setWidth_0(this$static.framePrev, '3em');\n  $setHeight_0(this$static.framePrev, '2em');\n  this$static.frameFirst = new Button_2('|<', -2, 'first');\n  $setToolTipText(this$static.frameFirst, $_(this$static.locale, 'LinePlot.FirstPlotFrame'));\n  $addActionListener_0(this$static.frameFirst, this$static);\n  $setWidth_0(this$static.frameFirst, '3em');\n  $setHeight_0(this$static.frameFirst, '2em');\n  this$static.frameLast = new Button_2('>|', 2, 'last');\n  $setToolTipText(this$static.frameLast, $_(this$static.locale, 'LinePlot.LastPlotFrame'));\n  $addActionListener_0(this$static.frameLast, this$static);\n  $setWidth_0(this$static.frameLast, '3em');\n  $setHeight_0(this$static.frameLast, '2em');\n  this$static.framePlay = new ToggleButton_2;\n  $setToolTipText_0(this$static.framePlay, $_(this$static.locale, 'LinePlot.PlayPlotFrame'));\n  $addActionListener_3(this$static.framePlay, this$static);\n  $setWidth_0(this$static.framePlay, '2em');\n  $setHeight_0(this$static.framePlay, '1em');\n  this$static.frameSelector = new TextBox_0;\n  $setMaxLength_0(this$static.frameSelector, 3);\n  $addDomHandler(this$static.frameSelector, this$static, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  $addDomHandler(this$static.frameSelector, this$static, ($clinit_KeyPressEvent() , $clinit_KeyPressEvent() , TYPE_1));\n  $setWidth_0(this$static.frameSelector, '5em');\n  $setHeight_0(this$static.frameSelector, '1em');\n  this$static.frameMax = new HTML_0;\n  $setWidth_0(this$static.frameMax, '3em');\n  $setHeight_0(this$static.frameMax, '1.5em');\n  hpanel.element_0.style['backgroundColor'] = 'LightGray';\n  $setVerticalAlignment(hpanel, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));\n  $add_1(hpanel, this$static.frameFirst);\n  $add_1(hpanel, this$static.framePrev);\n  $add_1(hpanel, this$static.framePlay);\n  $add_1(hpanel, this$static.frameNext);\n  $add_1(hpanel, this$static.frameLast);\n  $add_1(hpanel, this$static.frameSelector);\n  $add_1(hpanel, this$static.frameMax);\n  $add_1(hpanel, this$static.reset_0);\n  $add_1(cpanel, c);\n  $add_2(vpanel, cpanel);\n  $add_2(vpanel, hpanel);\n  $initWidget(this$static, vpanel);\n}\n\nfunction $onKeyPress(this$static, kpe){\n  var key2, keycode;\n  keycode = (kpe.nativeEvent.charCode || 0) & 65535;\n  if (keycode == 0) {\n    key2 = $eventGetKeyCode(kpe.nativeEvent);\n    (key2 == 13 || key2 == 8) && (keycode = key2);\n  }\n  if (keycode == 13 || keycode == 10) {\n    $parseFrameChange(this$static);\n  }\n   else {\n    if (keycode == 8) {\n      return;\n    }\n     else {\n      null != String.fromCharCode(keycode & 65535).match(/\\d/) || $cancelKey(this$static.frameSelector);\n    }\n  }\n}\n\nfunction $parseFrameChange(this$static){\n  var frameidx;\n  this$static.animation.running = false;\n  if (!$matches($getValue(this$static.frameSelector), '\\\\d+')) {\n    $setPropertyImpl($getElement(this$static.frameSelector).style, 'backgroundColor', 'Red');\n    return;\n  }\n  try {\n    frameidx = __parseAndValidateInt($getValue(this$static.frameSelector));\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$NumberFormatException)) {\n      $setPropertyImpl($getElement(this$static.frameSelector).style, 'backgroundColor', 'Red');\n      return;\n    }\n     else \n      throw unwrap_5($e0);\n  }\n  if (frameidx <= 0 || frameidx > this$static.plotter.frames_0.size_0) {\n    $setPropertyImpl($getElement(this$static.frameSelector).style, 'backgroundColor', 'Red');\n    return;\n  }\n  $setCurrentFrame(this$static.plotter, frameidx - 1);\n  $updateControlUI(this$static);\n}\n\nfunction $updateControlUI(this$static){\n  if (this$static.plotter.frames_0.size_0 <= 1) {\n    $setVisible_1(this$static.frameFirst, false);\n    $setVisible_1(this$static.framePrev, false);\n    $setVisible_2(this$static.framePlay, false);\n    $setVisible_1(this$static.frameNext, false);\n    $setVisible_1(this$static.frameLast, false);\n    $setVisible(this$static.frameSelector, false);\n    $setVisible(this$static.frameMax, false);\n  }\n   else {\n    $setVisible_1(this$static.frameFirst, true);\n    $setVisible_1(this$static.framePrev, true);\n    $setVisible_2(this$static.framePlay, true);\n    $setVisible_1(this$static.frameNext, true);\n    $setVisible_1(this$static.frameLast, true);\n    $setVisible(this$static.frameSelector, true);\n    $setVisible(this$static.frameMax, true);\n  }\n  $equals($getPropertyString($getElement(this$static.frameSelector), 'value'), '' + (this$static.plotter.currentframeindex + 1)) || $setText_3(this$static.frameSelector, '' + (this$static.plotter.currentframeindex + 1));\n  $setPropertyImpl($getElement(this$static.frameSelector).style, 'backgroundColor', 'White');\n  $setText_2(this$static.frameMax, '/ ' + this$static.plotter.frames_0.size_0);\n  this$static.plotter.currentframeindex + 1 < this$static.plotter.frames_0.size_0?$setEnabled_0(this$static.frameNext, true):$setEnabled_0(this$static.frameNext, false);\n  this$static.plotter.currentframeindex > 0?$setEnabled_0(this$static.framePrev, true):$setEnabled_0(this$static.framePrev, false);\n}\n\nfunction LinePlot_0(c, r){\n  this.locale = new Locale_0;\n  $createGUI_1(this, c);\n  this.plotter = new LinePlotPlotter_0(c);\n  $loadNewPlotfile(this.plotter, r);\n  this.animation = new LinePlotPlayThread_0(this, c, this.plotter, this.framePlay);\n  $updateControlUI(this);\n}\n\ndefineSeed(534, 336, makeCastMap([Q$ChangeHandler, Q$KeyPressHandler, Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ActionListener]), LinePlot_0);\n_.actionPerformed = function actionPerformed_9(ev){\n  if (maskUndefined(ev.source) === maskUndefined(this.frameNext)) {\n    this.animation.running = false;\n    $incCurrentFrame(this.plotter);\n    $updateControlUI(this);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.framePrev)) {\n    this.animation.running = false;\n    $decCurrentFrame(this.plotter);\n    $updateControlUI(this);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.frameFirst)) {\n    this.animation.running = false;\n    $setCurrentFrame(this.plotter, 0);\n    $updateControlUI(this);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.frameLast)) {\n    this.animation.running = false;\n    $setCurrentFrame(this.plotter, this.plotter.frames_0.size_0 - 1);\n    $updateControlUI(this);\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.framePlay)) {\n    this.animation.running = false;\n    if ((1 & $getCurrentFace(this.framePlay.button_0).val$faceID) > 0) {\n      this.plotter.currentframeindex + 1 == this.plotter.frames_0.size_0 && $setCurrentFrame(this.plotter, 0);\n      $startAnimation_0(this.animation);\n    }\n  }\n   else if (maskUndefined(ev.source) === maskUndefined(this.reset_0)) {\n    this.animation.running = false;\n    $resetCurrentFrame(this.plotter);\n  }\n}\n;\n_.getGUI = function getGUI_0(){\n  return this;\n}\n;\n_.getLegendWidth = function getLegendWidth_0(){\n  return 0;\n}\n;\n_.getMinimumRequiredHeight = function getMinimumRequiredHeight_0(){\n  var height;\n  if (this.reset_0) {\n    height = $getElement(this.reset_0.button_0).clientHeight | 0;\n    if (height > 0) {\n      return height;\n    }\n  }\n  return -1;\n}\n;\n_.onChange = function onChange_2(ch_0){\n  $parseFrameChange(this);\n}\n;\n_.onResize_1 = function onResize_10(){\n}\n;\n_.paintLegend = function paintLegend_0(g){\n}\n;\n_.paintPlot = function paintPlot_0(c){\n  $paint_0(this.plotter);\n}\n;\nfunction $drawHorizontalAxis(this$static, ctx, sizeX, border, visibleZeroY, niceScaleX, visibleRangeXmin, visibleRangeXmax, visibleScaleX){\n  var currentTic, ticPos;\n  $beginPath(ctx);\n  $moveTo(ctx, border, border + visibleZeroY);\n  $lineTo(ctx, sizeX - border, border + visibleZeroY);\n  $stroke(ctx);\n  $beginPath(ctx);\n  ctx.moveTo(sizeX - border + 5, border + visibleZeroY);\n  ctx.lineTo(sizeX - border - 2, border + visibleZeroY + 5);\n  $lineTo(ctx, sizeX - border, border + visibleZeroY);\n  ctx.lineTo(sizeX - border - 2, border + visibleZeroY - 5);\n  $closePath(ctx);\n  $fill(ctx);\n  $beginPath(ctx);\n  $fillText(ctx, this$static.labelX, sizeX - $measureText(ctx, this$static.labelX).width - 16, border + visibleZeroY - 2);\n  if (this$static.scale == 2 || this$static.scale == 3) {\n    for (currentTic = ceil_0(visibleRangeXmin); currentTic <= floor_0(visibleRangeXmax); currentTic += 1) {\n      ticPos = Math.floor((currentTic - visibleRangeXmin) * visibleScaleX);\n      $fillText(ctx, '10^' + round_int(currentTic), ticPos + border + 2, border + visibleZeroY - 2);\n    }\n  }\n   else {\n    for (currentTic = 1; currentTic <= toInt(fromDouble(round0((niceScaleX.niceMax - niceScaleX.niceMin) / niceScaleX.tickSpacing))) - 1; currentTic += 1) {\n      ticPos = floor_0((niceScaleX.niceMin + currentTic * niceScaleX.tickSpacing - visibleRangeXmin) * visibleScaleX);\n      $fillText(ctx, $formatNumbers(this$static, niceScaleX.niceMin + currentTic * niceScaleX.tickSpacing), ticPos + border + 2, border + visibleZeroY - 2);\n    }\n  }\n  $closePath(ctx);\n}\n\nfunction $drawLegend(this$static, ctx, border, sizeX){\n  var entries, ltx, ltx$iterator, ltx$iterator0, lwidth, width_0, xpos;\n  entries = 0;\n  lwidth = 0;\n  for (ltx$iterator0 = new AbstractList$IteratorImpl_0(this$static.graphs); ltx$iterator0.i < ltx$iterator0.this$0_0.size_1();) {\n    ltx = dynamicCast($next_3(ltx$iterator0), Q$LinePlotGraph);\n    width_0 = $paintLegend(ltx, ctx, 0, 0, false);\n    if (width_0 > 0) {\n      ++entries;\n      lwidth = lwidth > width_0?lwidth:width_0;\n    }\n  }\n  if (lwidth > 0 && entries > 0) {\n    xpos = sizeX - lwidth - border;\n    $setFillStyleWeb(ctx, 'White');\n    ctx.fillRect(xpos - 2, border + 1, lwidth, 12 * entries + 2);\n    $setStrokeStyleWeb(ctx, 'Black');\n    $beginPath(ctx);\n    ctx.rect(xpos - 2, border + 1, lwidth, 12 * entries + 2);\n    $stroke(ctx);\n    entries = 0;\n    for (ltx$iterator = new AbstractList$IteratorImpl_0(this$static.graphs); ltx$iterator.i < ltx$iterator.this$0_0.size_1();) {\n      ltx = dynamicCast($next_3(ltx$iterator), Q$LinePlotGraph);\n      width_0 = $paintLegend(ltx, ctx, xpos, border + 1 + 12 * entries, true);\n      width_0 > 0 && ++entries;\n    }\n  }\n}\n\nfunction $drawTicks(this$static, ctx, sizeX, sizeY, border, visibleRangeXmin, visibleRangeXmax, visibleRangeYmin, visibleRangeYmax, visibleScaleX, visibleScaleY){\n  var currentSmallTic, currentTic, innerX, innerY, niceScaleX, niceScaleY, ticPos, ticValue, visibleZeroX, visibleZeroY;\n  niceScaleX = new LinePlotNiceScale_0(visibleRangeXmin, visibleRangeXmax);\n  niceScaleY = new LinePlotNiceScale_0(visibleRangeYmin, visibleRangeYmax);\n  $setStrokeStyleWeb(ctx, 'LightGray');\n  $beginPath(ctx);\n  if (this$static.scale == 2 || this$static.scale == 3) {\n    for (currentTic = floor_0(visibleRangeXmin); currentTic <= ceil_0(visibleRangeXmax); currentTic += 1) {\n      for (currentSmallTic = 0; currentSmallTic <= 10; currentSmallTic += 1) {\n        ticValue = currentTic + log10(currentSmallTic * 0.1);\n        if (visibleRangeXmin < ticValue && ticValue < visibleRangeXmax) {\n          ticPos = Math.floor((ticValue - visibleRangeXmin) * visibleScaleX);\n          $moveTo(ctx, ticPos + border, border);\n          $lineTo(ctx, ticPos + border, sizeY - border);\n        }\n      }\n    }\n  }\n   else {\n    for (currentTic = 1; currentTic <= toInt(fromDouble(round0((niceScaleX.niceMax - niceScaleX.niceMin) / niceScaleX.tickSpacing))) - 1; currentTic += 1) {\n      ticPos = floor_0((niceScaleX.niceMin + currentTic * niceScaleX.tickSpacing - visibleRangeXmin) * visibleScaleX);\n      $moveTo(ctx, ticPos + border, border);\n      $lineTo(ctx, ticPos + border, sizeY - border);\n    }\n  }\n  if (this$static.scale == 1 || this$static.scale == 3) {\n    for (currentTic = floor_0(visibleRangeYmin); currentTic <= ceil_0(visibleRangeYmax); currentTic += 1) {\n      for (currentSmallTic = 0; currentSmallTic <= 10; currentSmallTic += 1) {\n        ticValue = currentTic + log10(currentSmallTic * 0.1);\n        if (visibleRangeYmin < ticValue && ticValue < visibleRangeYmax) {\n          ticPos = Math.floor((ticValue - visibleRangeYmin) * visibleScaleY);\n          $moveTo(ctx, border, sizeY - border - ticPos);\n          ctx.lineTo(sizeX - border, sizeY - border - ticPos);\n        }\n      }\n    }\n  }\n   else {\n    for (currentTic = 1; currentTic <= toInt(fromDouble(round0((niceScaleY.niceMax - niceScaleY.niceMin) / niceScaleY.tickSpacing))) - 1; currentTic += 1) {\n      ticPos = ceil_0((niceScaleY.niceMin + currentTic * niceScaleY.tickSpacing - visibleRangeYmin) * visibleScaleY);\n      $moveTo(ctx, border, sizeY - border - ticPos);\n      ctx.lineTo(sizeX - border, sizeY - border - ticPos);\n    }\n  }\n  $stroke(ctx);\n  $setStrokeStyleWeb(ctx, 'Black');\n  $setFillStyleWeb(ctx, 'Black');\n  $setFont(ctx, '10px sans-serif');\n  innerY = sizeY - 2 * border;\n  visibleZeroY = innerY - 1 - round_int(-visibleRangeYmin * visibleScaleY);\n  visibleZeroY < 0 && (visibleZeroY = 0);\n  visibleZeroY >= innerY && (visibleZeroY = innerY - 1);\n  $drawHorizontalAxis(this$static, ctx, sizeX, border, visibleZeroY, niceScaleX, visibleRangeXmin, visibleRangeXmax, visibleScaleX);\n  innerX = sizeX - 2 * border;\n  visibleZeroX = round_int(-visibleRangeXmin * visibleScaleX);\n  visibleZeroX < 0 && (visibleZeroX = 0);\n  visibleZeroX >= innerX && (visibleZeroX = innerX - 1);\n  $drawVerticalAxis(this$static, ctx, sizeY, border, visibleZeroX, niceScaleY, visibleRangeYmin, visibleRangeYmax, visibleScaleY);\n}\n\nfunction $drawVerticalAxis(this$static, ctx, sizeY, border, visibleZeroX, niceScaleY, visibleRangeYmin, visibleRangeYmax, visibleScaleY){\n  var currentTic, ticPos;\n  $beginPath(ctx);\n  $moveTo(ctx, border + visibleZeroX, border);\n  $lineTo(ctx, border + visibleZeroX, sizeY - border);\n  $stroke(ctx);\n  $beginPath(ctx);\n  $moveTo(ctx, border + visibleZeroX, border - 5);\n  ctx.lineTo(border + visibleZeroX + 4, border + 2);\n  $lineTo(ctx, border + visibleZeroX, border);\n  ctx.lineTo(border + visibleZeroX - 4, border + 2);\n  $closePath(ctx);\n  $fill(ctx);\n  $beginPath(ctx);\n  $save(ctx);\n  ctx.rotate(4.71238898038469);\n  $fillText(ctx, this$static.labelY, 0 - $measureText(ctx, this$static.labelY).width - 16, visibleZeroX + 12);\n  $restore(ctx);\n  if (this$static.scale == 1 || this$static.scale == 3) {\n    for (currentTic = ceil_0(visibleRangeYmin); currentTic <= floor_0(visibleRangeYmax); currentTic += 1) {\n      ticPos = Math.floor((currentTic - visibleRangeYmin) * visibleScaleY);\n      $fillText(ctx, '10^' + round_int(currentTic), border + visibleZeroX + 2, sizeY - border - ticPos - 2);\n    }\n  }\n   else {\n    for (currentTic = 1; currentTic <= toInt(fromDouble(round0((niceScaleY.niceMax - niceScaleY.niceMin) / niceScaleY.tickSpacing))) - 1; currentTic += 1) {\n      ticPos = ceil_0((niceScaleY.niceMin + currentTic * niceScaleY.tickSpacing - visibleRangeYmin) * visibleScaleY);\n      $fillText(ctx, $formatNumbers(this$static, niceScaleY.niceMin + currentTic * niceScaleY.tickSpacing), border + visibleZeroX + 2, sizeY - border - ticPos - 2);\n    }\n  }\n  $closePath(ctx);\n}\n\nfunction $formatNumbers(this$static, number){\n  if (number == 0)\n    return '0';\n  return 1.0E-4 >= (number <= 0?0 - number:number) || (number <= 0?0 - number:number) >= 10000?$format_0(this$static.format, number / pow_0(10, floor_0(log10(number <= 0?0 - number:number)))) + '\\u22C510^' + $format_0(this$static.format, floor_0(log10(number <= 0?0 - number:number))):$format_0(this$static.format, number);\n}\n\nfunction $paintFrame(this$static, ctx, sizeX, sizeY, border, visibleRangeXmin, visibleRangeXmax, visibleRangeYmin, visibleRangeYmax){\n  var innerX, innerY, lpg, lpg$iterator, ltx, ltx$iterator, visibleScaleX, visibleScaleY, x_0, y_0;\n  innerX = sizeX - 2 * border;\n  innerY = sizeY - 2 * border;\n  if (innerX <= 0) {\n    border = ~~((sizeX - 2) / 2);\n    innerX = sizeX - 2 * border;\n    innerY = sizeY - 2 * border;\n  }\n  if (innerY <= 0) {\n    border = ~~((sizeY - 2) / 2);\n    innerX = sizeX - 2 * border;\n    innerY = sizeY - 2 * border;\n  }\n  if (this$static.scale == 2 || this$static.scale == 3) {\n    if (visibleRangeXmin > 0) {\n      visibleRangeXmin = log10(visibleRangeXmin);\n      visibleRangeXmax = log10(visibleRangeXmax);\n    }\n     else {\n      visibleRangeXmin = 0;\n      visibleRangeXmax = 1;\n    }\n  }\n  if (this$static.scale == 1 || this$static.scale == 3) {\n    if (visibleRangeYmin > 0) {\n      visibleRangeYmin = log10(visibleRangeYmin);\n      visibleRangeYmax = log10(visibleRangeYmax);\n    }\n     else {\n      visibleRangeYmin = 0;\n      visibleRangeYmax = 1;\n    }\n  }\n  visibleScaleX = innerX / (visibleRangeXmax - visibleRangeXmin);\n  visibleScaleY = innerY / (visibleRangeYmax - visibleRangeYmin);\n  $setFillStyleWeb(ctx, 'White');\n  $fillRect(ctx, border, border, innerX, innerY);\n  $drawTicks(this$static, ctx, sizeX, sizeY, border, visibleRangeXmin, visibleRangeXmax, visibleRangeYmin, visibleRangeYmax, visibleScaleX, visibleScaleY);\n  for (lpg$iterator = new AbstractList$IteratorImpl_0(this$static.graphs); lpg$iterator.i < lpg$iterator.this$0_0.size_1();) {\n    lpg = dynamicCast($next_3(lpg$iterator), Q$LinePlotGraph);\n    $paintGraph(lpg, ctx, visibleRangeXmin, visibleRangeYmin, visibleScaleX, visibleScaleY, this$static.scale, border, innerX, innerY);\n  }\n  $setFillStyleWeb(ctx, 'Black');\n  $setFont(ctx, '10px sans-serif');\n  $beginPath(ctx);\n  for (ltx$iterator = new AbstractList$IteratorImpl_0(this$static.texts); ltx$iterator.i < ltx$iterator.this$0_0.size_1();) {\n    ltx = dynamicCast($next_3(ltx$iterator), Q$LinePlotText);\n    x_0 = ltx.x_0;\n    y_0 = ltx.y_0;\n    if (this$static.scale == 2 || this$static.scale == 3) {\n      if (x_0 > 0) {\n        x_0 = log10(x_0);\n      }\n       else \n        continue;\n    }\n    if (this$static.scale == 1 || this$static.scale == 3) {\n      if (y_0 > 0) {\n        y_0 = log10(y_0);\n      }\n       else \n        continue;\n    }\n    $fillText(ctx, ltx.text_0, round_int((x_0 - visibleRangeXmin) * visibleScaleX) + border, round_int((visibleRangeYmax - y_0) * visibleScaleY) + border);\n  }\n  $closePath(ctx);\n  $drawLegend(this$static, ctx, border, sizeX);\n  $setFillStyleWeb(ctx, 'Black');\n  $setFont(ctx, '10px sans-serif');\n  $beginPath(ctx);\n  $fillText(ctx, $formatNumbers(this$static, this$static.mouseValueX) + '|' + $formatNumbers(this$static, this$static.mouseValueY), 2, sizeY - 2);\n  $closePath(ctx);\n  $setFont(ctx, 'bold 12px sans-serif');\n  $beginPath(ctx);\n  $fillText(ctx, this$static.title_0, (sizeX - $measureText(ctx, this$static.title_0).width) / 2, 12);\n  $closePath(ctx);\n}\n\nfunction $setDuration(this$static, duration){\n  0 < duration && (this$static.duration = duration);\n}\n\nfunction $setLabelX(this$static, labelX){\n  this$static.labelX = labelX;\n}\n\nfunction $setLabelY(this$static, labelY){\n  this$static.labelY = labelY;\n}\n\nfunction $setMouseValueX(this$static, mouseValueX){\n  this$static.mouseValueX = mouseValueX;\n}\n\nfunction $setMouseValueY(this$static, mouseValueY){\n  this$static.mouseValueY = mouseValueY;\n}\n\nfunction $setRangeX(this$static, min_0, max_0){\n  this$static.rangeXmin = min_1(min_0, this$static.rangeXmin);\n  this$static.rangeXmax = max_1(max_0, this$static.rangeXmax);\n  min_0 > 0 && (this$static.rangeXpositiveMin = min_1(min_0, this$static.rangeXpositiveMin));\n}\n\nfunction $setRangeY(this$static, min_0, max_0){\n  this$static.rangeYmin = min_1(min_0, this$static.rangeYmin);\n  this$static.rangeYmax = max_1(max_0, this$static.rangeYmax);\n  min_0 > 0 && (this$static.rangeYpositiveMin = min_1(min_0, this$static.rangeYpositiveMin));\n}\n\nfunction $setScale(this$static, scale){\n  if (scale < 0 || scale > 3) {\n    throw new IllegalArgumentException_1('Argument scale out of range. Must be in [0, 4].');\n  }\n  this$static.scale = scale;\n}\n\nfunction $setTitle_1(this$static, title_0){\n  this$static.title_0 = title_0;\n}\n\nfunction LinePlotFrame_0(){\n  this.graphs = new ArrayList_0;\n  this.texts = new ArrayList_0;\n  this.format = ($clinit_NumberFormat() , new NumberFormat_1('#.####', $getDefaultNative()));\n}\n\ndefineSeed(535, 1, makeCastMap([Q$LinePlotFrame]), LinePlotFrame_0);\n_.duration = 250;\n_.labelX = '';\n_.labelY = '';\n_.mouseValueX = 0;\n_.mouseValueY = 0;\n_.rangeXmax = -Infinity;\n_.rangeXmin = Infinity;\n_.rangeXpositiveMin = Infinity;\n_.rangeXsetByUser = false;\n_.rangeYmax = -Infinity;\n_.rangeYmin = Infinity;\n_.rangeYpositiveMin = Infinity;\n_.rangeYsetByUser = false;\n_.scale = 0;\n_.title_0 = '';\nfunction $clinit_LinePlotGraph(){\n  $clinit_LinePlotGraph = nullMethod;\n  DASH_PATTERN = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [16]);\n  DOTT_PATTERN = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [4]);\n  DASH_DOT_PATTERN = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [16, 24, 28]);\n}\n\nfunction $addLine(this$static, input_0){\n  $add_5(this$static.lines, input_0);\n}\n\nfunction $drawLinePattern(this$static, ctx, x1, y1, x2, y2, pattern){\n  var deltax, deltay, i, len, linelen, phe, segsize, state, steep, sx, sy, xe, xs, ye, ys;\n  i = 0;\n  len = pattern.length;\n  state = true;\n  deltax = x1 - x2 <= 0?0 - (x1 - x2):x1 - x2;\n  deltay = y1 - y2 <= 0?0 - (y1 - y2):y1 - y2;\n  sx = x2 > x1?1:-1;\n  sy = y2 > y1?1:-1;\n  steep = deltay > deltax;\n  linelen = steep?deltay:deltax;\n  xs = x1;\n  ys = y1;\n  while (i < len && pattern[i] <= this$static.phase) {\n    ++i;\n    state = !state;\n  }\n  while (linelen >= 1) {\n    i >= len?(phe = 32):(phe = pattern[i]);\n    segsize = phe - this$static.phase;\n    if (segsize >= round_int(linelen)) {\n      segsize = round_int(linelen);\n      xe = x2;\n      ye = y2;\n    }\n     else {\n      if (steep) {\n        xe = xs + sx * segsize * deltax / deltay;\n        ye = ys + sy * segsize;\n      }\n       else {\n        xe = xs + sx * segsize;\n        ye = ys + sy * segsize * deltay / deltax;\n      }\n    }\n    state && ($moveTo(ctx, xs, ys) , $lineTo(ctx, xe, ye));\n    xs = xe;\n    ys = ye;\n    this$static.phase += segsize;\n    ++i;\n    if (this$static.phase >= 32) {\n      this$static.phase -= 32;\n      i = 0;\n    }\n    state = !state;\n    linelen -= segsize;\n  }\n}\n\nfunction $paintGraph(this$static, ctx, minX, minY, scaleX, scaleY, axisScale, border, width_0, height){\n  var line, line$iterator, line$iterator0, x1, x2, xi1, xi2, y1, y2, yi1, yi2;\n  $save(ctx);\n  $beginPath(ctx);\n  $setStrokeStyleWeb(ctx, 'White');\n  $setGlobalAlpha(ctx, 0);\n  $rect(ctx, border, border, width_0, height);\n  $stroke(ctx);\n  $closePath(ctx);\n  $clip(ctx);\n  $setGlobalAlpha(ctx, 1);\n  $beginPath(ctx);\n  this$static.phase = 0;\n  $setStrokeStyleWeb(ctx, this$static.color_0);\n  for (line$iterator0 = new AbstractList$IteratorImpl_0(this$static.lines); line$iterator0.i < line$iterator0.this$0_0.size_1();) {\n    line = dynamicCast($next_3(line$iterator0), Q$LinePlotLine);\n    x1 = line.x1;\n    y1 = line.y1;\n    x2 = line.x2;\n    y2 = line.y2;\n    if (axisScale == 2 || axisScale == 3) {\n      if (x1 > 0 && x2 > 0) {\n        x1 = log10(x1);\n        x2 = log10(x2);\n      }\n       else \n        continue;\n    }\n    if (axisScale == 1 || axisScale == 3) {\n      if (y1 > 0 && y2 > 0) {\n        y1 = log10(y1);\n        y2 = log10(y2);\n      }\n       else \n        continue;\n    }\n    xi1 = border + (x1 - minX) * scaleX;\n    yi1 = border + (height - (y1 - minY) * scaleY);\n    xi2 = border + (x2 - minX) * scaleX;\n    yi2 = border + (height - (y2 - minY) * scaleY);\n    switch (this$static.linestyle) {\n      case 1:\n        $moveTo(ctx, xi1, yi1);\n        $lineTo(ctx, xi2, yi2);\n        break;\n      case 2:\n        $drawLinePattern(this$static, ctx, xi1, yi1, xi2, yi2, DASH_PATTERN);\n        break;\n      case 3:\n        $drawLinePattern(this$static, ctx, xi1, yi1, xi2, yi2, DOTT_PATTERN);\n        break;\n      case 4:\n        $drawLinePattern(this$static, ctx, xi1, yi1, xi2, yi2, DASH_DOT_PATTERN);\n    }\n  }\n  $stroke(ctx);\n  if (this$static.symbol != 32) {\n    $beginPath(ctx);\n    for (line$iterator = new AbstractList$IteratorImpl_0(this$static.lines); line$iterator.i < line$iterator.this$0_0.size_1();) {\n      line = dynamicCast($next_3(line$iterator), Q$LinePlotLine);\n      x1 = line.x1;\n      y1 = line.y1;\n      x2 = line.x2;\n      y2 = line.y2;\n      if (axisScale == 2 || axisScale == 3) {\n        if (x1 > 0 && x2 > 0) {\n          x1 = log10(x1);\n          x2 = log10(x2);\n        }\n         else \n          continue;\n      }\n      if (axisScale == 1 || axisScale == 3) {\n        if (y1 > 0 && y2 > 0) {\n          y1 = log10(y1);\n          y2 = log10(y2);\n        }\n         else \n          continue;\n      }\n      xi1 = border + (x1 - minX) * scaleX;\n      yi1 = border + (height - (y1 - minY) * scaleY);\n      xi2 = border + (x2 - minX) * scaleX;\n      yi2 = border + (height - (y2 - minY) * scaleY);\n      drawSymbol(ctx, this$static.symbol, xi1, yi1);\n      drawSymbol(ctx, this$static.symbol, xi2, yi2);\n    }\n    $stroke(ctx);\n  }\n  $restore(ctx);\n}\n\nfunction $paintLegend(this$static, ctx, x_0, y_0, forreal){\n  var width_0;\n  width_0 = 0;\n  if (this$static.legend != null && !$equals('', this$static.legend)) {\n    width_0 = round_int(16 + $measureText(ctx, this$static.legend).width + 2);\n    if (forreal) {\n      $setStrokeStyleWeb(ctx, this$static.color_0);\n      $beginPath(ctx);\n      $moveTo(ctx, x_0 + 3, y_0 + 7);\n      $lineTo(ctx, x_0 + 13, y_0 + 7);\n      drawSymbol(ctx, this$static.symbol, x_0 + 8, y_0 + 7);\n      $stroke(ctx);\n      $closePath(ctx);\n      $setFillStyleWeb(ctx, 'Black');\n      $beginPath(ctx);\n      $fillText(ctx, this$static.legend, x_0 + 16, y_0 + 12);\n      $closePath(ctx);\n    }\n  }\n  return width_0;\n}\n\nfunction $setLegend(this$static, legend){\n  this$static.legend = legend;\n}\n\nfunction $setSymbol(this$static, symbol){\n  this$static.symbol = symbol;\n}\n\nfunction LinePlotGraph_0(){\n  $clinit_LinePlotGraph();\n  this.color_0 = 'Black';\n  this.lines = new ArrayList_0;\n  this.symbol = 46;\n  this.linestyle = 1;\n  this.legend = '';\n  this.phase = 0;\n}\n\nfunction drawSymbol(ctx, symbol, x_0, y_0){\n  switch (symbol) {\n    case 46:\n      $moveTo(ctx, x_0, y_0);\n      $lineTo(ctx, x_0, y_0);\n      break;\n    case 120:\n      $moveTo(ctx, x_0 + 3, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0 - 3);\n      $moveTo(ctx, x_0 - 3, y_0 + 3);\n      $lineTo(ctx, x_0 + 3, y_0 - 3);\n      break;\n    case 43:\n      $moveTo(ctx, x_0, y_0 + 3);\n      $lineTo(ctx, x_0, y_0 - 3);\n      $moveTo(ctx, x_0 - 3, y_0);\n      $lineTo(ctx, x_0 + 3, y_0);\n      break;\n    case 42:\n      $moveTo(ctx, x_0 + 3, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0 - 3);\n      $moveTo(ctx, x_0 - 3, y_0 + 3);\n      $lineTo(ctx, x_0 + 3, y_0 - 3);\n      $moveTo(ctx, x_0, y_0 + 3);\n      $lineTo(ctx, x_0, y_0 - 3);\n      $moveTo(ctx, x_0 - 3, y_0);\n      $lineTo(ctx, x_0 + 3, y_0);\n      break;\n    case 118:\n      $moveTo(ctx, x_0 - 3, y_0 - 3);\n      $lineTo(ctx, x_0 + 3, y_0 - 3);\n      $moveTo(ctx, x_0 + 3, y_0 - 3);\n      $lineTo(ctx, x_0, y_0 + 3);\n      $moveTo(ctx, x_0, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0 - 3);\n      break;\n    case 94:\n      $moveTo(ctx, x_0 - 3, y_0 + 3);\n      $lineTo(ctx, x_0 + 3, y_0 + 3);\n      $moveTo(ctx, x_0 + 3, y_0 + 3);\n      $lineTo(ctx, x_0, y_0 - 3);\n      $moveTo(ctx, x_0, y_0 - 3);\n      $lineTo(ctx, x_0 - 3, y_0 + 3);\n      break;\n    case 62:\n      $moveTo(ctx, x_0 - 3, y_0 - 3);\n      $lineTo(ctx, x_0 - 3, y_0 + 3);\n      $moveTo(ctx, x_0 - 3, y_0 + 3);\n      $lineTo(ctx, x_0 + 3, y_0);\n      $moveTo(ctx, x_0 + 3, y_0);\n      $lineTo(ctx, x_0 - 3, y_0 - 3);\n      break;\n    case 60:\n      $moveTo(ctx, x_0 + 3, y_0 - 3);\n      $lineTo(ctx, x_0 + 3, y_0 + 3);\n      $moveTo(ctx, x_0 + 3, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0);\n      $moveTo(ctx, x_0 - 3, y_0);\n      $lineTo(ctx, x_0 + 3, y_0 - 3);\n      break;\n    case 111:\n      $moveTo(ctx, x_0, y_0);\n      ctx.arc(x_0, y_0, 3, 0, 6.283185307179586, false);\n      break;\n    case 115:\n      $moveTo(ctx, x_0 - 3, y_0 - 3);\n      $lineTo(ctx, x_0 + 3, y_0 - 3);\n      $moveTo(ctx, x_0 + 3, y_0 - 3);\n      $lineTo(ctx, x_0 + 3, y_0 + 3);\n      $moveTo(ctx, x_0 + 3, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0 + 3);\n      $moveTo(ctx, x_0 - 3, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0 - 3);\n      break;\n    case 100:\n      $moveTo(ctx, x_0 - 3, y_0);\n      $lineTo(ctx, x_0, y_0 - 3);\n      $moveTo(ctx, x_0, y_0 - 3);\n      $lineTo(ctx, x_0 + 3, y_0);\n      $moveTo(ctx, x_0 + 3, y_0);\n      $lineTo(ctx, x_0, y_0 + 3);\n      $moveTo(ctx, x_0, y_0 + 3);\n      $lineTo(ctx, x_0 - 3, y_0);\n  }\n}\n\ndefineSeed(536, 1, makeCastMap([Q$LinePlotGraph]), LinePlotGraph_0);\n_.linestyle = 0;\n_.phase = 0;\n_.symbol = 0;\nvar DASH_DOT_PATTERN, DASH_PATTERN, DOTT_PATTERN;\nfunction LinePlotLine_0(x1, y1, x2, y2){\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n}\n\ndefineSeed(537, 1, makeCastMap([Q$LinePlotLine]), LinePlotLine_0);\n_.x1 = 0;\n_.x2 = 0;\n_.y1 = 0;\n_.y2 = 0;\nfunction $niceNum(range, round_0){\n  var exponent, fraction, niceFraction;\n  exponent = floor_0(log10(range));\n  fraction = range / pow_0(10, exponent);\n  round_0?fraction < 1.5?(niceFraction = 1):fraction < 3?(niceFraction = 2):fraction < 7?(niceFraction = 5):(niceFraction = 10):fraction <= 1?(niceFraction = 1):fraction <= 2?(niceFraction = 2):fraction <= 5?(niceFraction = 5):(niceFraction = 10);\n  return niceFraction * pow_0(10, exponent);\n}\n\nfunction LinePlotNiceScale_0(min_0, max_0){\n  this.minPoint = min_0;\n  this.maxPoint = max_0;\n  this.range = $niceNum(this.maxPoint - this.minPoint, false);\n  this.tickSpacing = $niceNum(this.range / 9, true);\n  this.niceMin = floor_0(this.minPoint / this.tickSpacing) * this.tickSpacing;\n  this.niceMax = ceil_0(this.maxPoint / this.tickSpacing) * this.tickSpacing;\n}\n\ndefineSeed(538, 1, {}, LinePlotNiceScale_0);\n_.maxPoint = 0;\n_.minPoint = 0;\n_.niceMax = 0;\n_.niceMin = 0;\n_.range = 0;\n_.tickSpacing = 0;\nfunction parsePlotInputFile(br){\n  var b, choppedLegends, choppedLine, currentFrame, currentGraph, frames_0, g, graphIndex, newColor, numberOfAddedLegends, r, strLine, text_0, textContent, x_0, x1, x2, y_0, y1, y2;\n  frames_0 = new ArrayList_0;\n  currentFrame = new LinePlotFrame_0;\n  currentGraph = new LinePlotGraph_0;\n  while ((strLine = $readLine(br)) != null) {\n    choppedLine = $split(strLine, ' ', 0);\n    if (choppedLine.length == 1 || $equals(choppedLine[0], '##'))\n      continue;\n    try {\n      if ($equals(choppedLine[0], '#')) {\n        if ($equals(choppedLine[1], 'newframe')) {\n          currentGraph.lines.size_0 > 0 && $add_5(currentFrame.graphs, currentGraph);\n          currentFrame.graphs.size_0 > 0 && (setCheck(frames_0.array, frames_0.size_0++, currentFrame) , true);\n          currentGraph = new LinePlotGraph_0;\n          currentFrame = new LinePlotFrame_0;\n          if (choppedLine.length == 3) {\n            try {\n              $setDuration(currentFrame, valueOf(__parseAndValidateInt(choppedLine[2])).value_0);\n            }\n             catch ($e0) {\n              $e0 = wrap($e0);\n              if (instanceOf($e0, Q$NumberFormatException)) {\n                throw new IOException_0('Invalid plot syntax - duration invalid - in line ' + strLine);\n              }\n               else \n                throw unwrap_5($e0);\n            }\n          }\n        }\n         else if ($equals(choppedLine[1], 'linestyle')) {\n          if (choppedLine.length < 2 || $equals(choppedLine[2], 'none')) {\n            currentGraph.linestyle = 0;\n          }\n           else if ($equals(choppedLine[2], 'solid')) {\n            currentGraph.linestyle = 1;\n          }\n           else if ($equals(choppedLine[2], 'dashed')) {\n            currentGraph.linestyle = 2;\n          }\n           else if ($equals(choppedLine[2], 'dotted')) {\n            currentGraph.linestyle = 3;\n          }\n           else if ($equals(choppedLine[2], 'dash-dot')) {\n            currentGraph.linestyle = 4;\n          }\n           else {\n            throw new IOException_0('Invalid plot syntax - line plot style invalid - in line ' + strLine);\n          }\n        }\n         else if ($equals(choppedLine[1], 'color')) {\n          newColor = 'Black';\n          if (choppedLine.length == 5) {\n            try {\n              r = valueOf(__parseAndValidateInt(choppedLine[2])).value_0;\n              g = valueOf(__parseAndValidateInt(choppedLine[3])).value_0;\n              b = valueOf(__parseAndValidateInt(choppedLine[4])).value_0;\n              newColor = 'rgb(' + r + ',' + g + ',' + b + ')';\n            }\n             catch ($e1) {\n              $e1 = wrap($e1);\n              if (instanceOf($e1, Q$NumberFormatException)) {\n                throw new IOException_0('Invalid plot syntax - color definition is invalid - in line ' + strLine);\n              }\n               else \n                throw unwrap_5($e1);\n            }\n          }\n          if (currentGraph.lines.size_0 > 0) {\n            $add_5(currentFrame.graphs, currentGraph);\n            currentGraph = new LinePlotGraph_0;\n          }\n          currentGraph.color_0 = newColor;\n        }\n         else if ($equals(choppedLine[1], 'legend')) {\n          choppedLegends = $split($substring(strLine, 9), ',', 0);\n          numberOfAddedLegends = 0;\n          for (graphIndex = 0; graphIndex < currentFrame.graphs.size_0 && numberOfAddedLegends < choppedLegends.length; graphIndex++) {\n            if ($equals(dynamicCast($get_5(currentFrame.graphs, graphIndex), Q$LinePlotGraph).legend, '')) {\n              $setLegend(dynamicCast($get_5(currentFrame.graphs, graphIndex), Q$LinePlotGraph), choppedLegends[numberOfAddedLegends]);\n              ++numberOfAddedLegends;\n            }\n          }\n          numberOfAddedLegends < choppedLegends.length && $setLegend(currentGraph, choppedLegends[numberOfAddedLegends]);\n        }\n         else if ($equals('' + choppedLine[1], 'symbol')) {\n          $equals(choppedLine[1], 'none')?(currentGraph.symbol = 0):$setSymbol(currentGraph, strLine.charCodeAt(9));\n        }\n         else if ($equals(choppedLine[1], 'text')) {\n          newColor = 'Black';\n          if (choppedLine.length >= 5) {\n            try {\n              x_0 = (new Double_0(__parseAndValidateDouble(choppedLine[2]))).value_0;\n              y_0 = (new Double_0(__parseAndValidateDouble(choppedLine[3]))).value_0;\n              textContent = $substring(strLine, 7 + choppedLine[2].length + choppedLine[3].length + 2);\n              text_0 = new LinePlotText_0(x_0, y_0, textContent);\n              $add_5(currentFrame.texts, text_0);\n            }\n             catch ($e2) {\n              $e2 = wrap($e2);\n              if (instanceOf($e2, Q$NumberFormatException)) {\n                throw new IOException_0('Invalid plot syntax - invalid position in text format for line ' + strLine);\n              }\n               else \n                throw unwrap_5($e2);\n            }\n          }\n          if (currentGraph.lines.size_0 > 0) {\n            $add_5(currentFrame.graphs, currentGraph);\n            currentGraph = new LinePlotGraph_0;\n          }\n          currentGraph.color_0 = newColor;\n        }\n         else if ($equals(choppedLine[1], 'title')) {\n          $setTitle_1(currentFrame, $substring(strLine, 8));\n        }\n         else if ($equals('' + choppedLine[1], 'x-label')) {\n          $setLabelX(currentFrame, $substring(strLine, 10));\n        }\n         else if ($equals('' + choppedLine[1], 'y-label')) {\n          $setLabelY(currentFrame, $substring(strLine, 10));\n        }\n         else if ($equals('' + choppedLine[1], 'x-range')) {\n          $setRangeX(currentFrame, (new Double_0(__parseAndValidateDouble(choppedLine[2]))).value_0, (new Double_0(__parseAndValidateDouble(choppedLine[3]))).value_0);\n          currentFrame.rangeXsetByUser = true;\n        }\n         else if ($equals('' + choppedLine[1], 'y-range')) {\n          $setRangeY(currentFrame, (new Double_0(__parseAndValidateDouble(choppedLine[2]))).value_0, (new Double_0(__parseAndValidateDouble(choppedLine[3]))).value_0);\n          currentFrame.rangeYsetByUser = true;\n        }\n         else \n          $equals('' + choppedLine[1], 'scale') && ($equals(choppedLine[2], 'lin-lin')?$setScale(currentFrame, 0):$equals(choppedLine[2], 'log-lin')?$setScale(currentFrame, 2):$equals(choppedLine[2], 'lin-log')?$setScale(currentFrame, 1):$equals(choppedLine[2], 'log-log') && $setScale(currentFrame, 3));\n      }\n       else if (choppedLine.length == 4) {\n        try {\n          x1 = (new Double_0(__parseAndValidateDouble(choppedLine[0]))).value_0;\n          y1 = (new Double_0(__parseAndValidateDouble(choppedLine[1]))).value_0;\n          x2 = (new Double_0(__parseAndValidateDouble(choppedLine[2]))).value_0;\n          y2 = (new Double_0(__parseAndValidateDouble(choppedLine[3]))).value_0;\n          currentFrame.rangeXsetByUser || $setRangeX(currentFrame, x1 < x2?x1:x2, x1 > x2?x1:x2);\n          currentFrame.rangeYsetByUser || $setRangeY(currentFrame, y1 < y2?y1:y2, y1 > y2?y1:y2);\n          $addLine(currentGraph, new LinePlotLine_0(x1, y1, x2, y2));\n        }\n         catch ($e3) {\n          $e3 = wrap($e3);\n          if (instanceOf($e3, Q$NumberFormatException)) {\n            throw new IOException_0('Invalid plot syntax - line coordinates invalid in line ' + strLine);\n          }\n           else \n            throw unwrap_5($e3);\n        }\n      }\n    }\n     catch ($e4) {\n      $e4 = wrap($e4);\n      if (instanceOf($e4, Q$IndexOutOfBoundsException)) {\n        throw new IOException_0('Invalid plot syntax - index out of bounds - in line ' + strLine);\n      }\n       else \n        throw unwrap_5($e4);\n    }\n  }\n  currentGraph.lines.size_0 > 0 && $add_5(currentFrame.graphs, currentGraph);\n  currentFrame.graphs.size_0 > 0 && (setCheck(frames_0.array, frames_0.size_0++, currentFrame) , true);\n  return frames_0;\n}\n\nfunction $startAnimation_0(this$static){\n  if (!this$static.running) {\n    this$static.running = true;\n    $schedule(this$static, $getCurrentFrameDuration(this$static.plotter));\n  }\n}\n\nfunction LinePlotPlayThread_0(p, c, plot, b){\n  Timer_0.call(this);\n  this.canvas = c;\n  this.parent_0 = p;\n  this.plotter = plot;\n  this.button_0 = b;\n  this.running = false;\n}\n\ndefineSeed(540, 10, {}, LinePlotPlayThread_0);\n_.run = function run_5(){\n  var frame_0, height, width_0;\n  if (this.running) {\n    frame_0 = this.plotter.currentframeindex + 1;\n    if (frame_0 < this.plotter.frames_0.size_0) {\n      width_0 = $getElement(this.canvas).clientWidth | 0;\n      height = $getElement(this.canvas).clientHeight | 0;\n      if (width_0 > 0 && height > 0) {\n        $setCoordinateSpaceWidth(this.canvas, width_0);\n        $setCoordinateSpaceHeight(this.canvas, height);\n        $incCurrentFrame(this.plotter);\n        $paint_0(this.plotter);\n      }\n      $schedule(this, $getCurrentFrameDuration(this.plotter));\n    }\n     else {\n      this.running = false;\n      $setDown(this.button_0.button_0);\n    }\n    $updateControlUI(this.parent_0);\n  }\n}\n;\n_.running = false;\nfunction $decCurrentFrame(this$static){\n  if (this$static.currentframeindex > 0) {\n    --this$static.currentframeindex;\n    $resetCurrentFrame(this$static);\n  }\n}\n\nfunction $getCurrentFrameDuration(this$static){\n  if (this$static.frames_0.size_0 != 0) {\n    return dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame).duration;\n  }\n  return 0;\n}\n\nfunction $incCurrentFrame(this$static){\n  if (this$static.currentframeindex + 1 < this$static.frames_0.size_0) {\n    ++this$static.currentframeindex;\n    $resetCurrentFrame(this$static);\n  }\n}\n\nfunction $loadNewPlotfile(this$static, data_0){\n  this$static.frames_0 = parsePlotInputFile(data_0);\n  $resetCurrentFrame(this$static);\n  $paint_0(this$static);\n}\n\nfunction $paint_0(this$static){\n  var ctx, frame_0, h_0, w;\n  w = $getElement(this$static.canvas).clientWidth | 0;\n  h_0 = $getElement(this$static.canvas).clientHeight | 0;\n  if (w > 0 && h_0 > 0) {\n    ctx = $getElement(this$static.canvas).getContext('2d');\n    $setCoordinateSpaceWidth(this$static.canvas, w);\n    $setCoordinateSpaceHeight(this$static.canvas, h_0);\n    this$static.width_0 = w;\n    this$static.height_0 = h_0;\n    $setFillStyleWeb(ctx, 'White');\n    $fillRect(ctx, 0, 0, this$static.width_0, this$static.height_0);\n    if (this$static.frames_0.size_0 != 0) {\n      frame_0 = dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame);\n      $setLineCap(ctx, 'butt');\n      $paintFrame(frame_0, ctx, this$static.width_0, this$static.height_0, 15, this$static.currentXmin, this$static.currentXmax, this$static.currentYmin, this$static.currentYmax);\n      if (this$static.zoomwidth > 0 && this$static.zoomheight > 0) {\n        $setStrokeStyleWeb(ctx, 'DarkGray');\n        $setLineCap(ctx, 'round');\n        $rect(ctx, this$static.zoomx, this$static.zoomy, this$static.zoomwidth, this$static.zoomheight);\n      }\n    }\n  }\n}\n\nfunction $resetCurrentFrame(this$static){\n  var frame_0;\n  if (this$static.frames_0.size_0 != 0) {\n    frame_0 = dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame);\n    this$static.currentXmin = frame_0.rangeXmin;\n    this$static.currentXmax = frame_0.rangeXmax;\n    this$static.currentYmin = frame_0.rangeYmin;\n    this$static.currentYmax = frame_0.rangeYmax;\n    (frame_0.scale == 2 || frame_0.scale == 3) && (this$static.currentXmin = frame_0.rangeXpositiveMin);\n    (frame_0.scale == 1 || frame_0.scale == 3) && (this$static.currentYmin = frame_0.rangeYpositiveMin);\n    $paint_0(this$static);\n  }\n}\n\nfunction $setCurrentFrame(this$static, idx){\n  if (idx >= 0 && idx < this$static.frames_0.size_0) {\n    this$static.currentframeindex = idx;\n    $resetCurrentFrame(this$static);\n  }\n}\n\nfunction $zoomIn(this$static, x_0, y_0){\n  var clickX, clickY, distanceLogX, distanceLogY, distanceX, distanceY, frame_0;\n  if (this$static.frames_0.size_0 != 0) {\n    frame_0 = dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame);\n    if (this$static.width_0 > 30) {\n      if (frame_0.scale == 2 || frame_0.scale == 3) {\n        clickX = (x_0 - 15) / (this$static.width_0 - 30);\n        clickX = (0 > clickX?0:clickX) < 1?0 > clickX?0:clickX:1;\n        distanceLogX = log10(this$static.currentXmax / this$static.currentXmin);\n        this$static.currentXmin *= Math.pow(10, distanceLogX * 0.5 * clickX);\n        this$static.currentXmax /= Math.pow(10, distanceLogX * 0.5 * (1 - clickX));\n      }\n       else {\n        clickX = (x_0 - 15) / (this$static.width_0 - 30);\n        clickX = (0 > clickX?0:clickX) < 1?0 > clickX?0:clickX:1;\n        distanceX = this$static.currentXmax - this$static.currentXmin;\n        this$static.currentXmin += distanceX * 0.5 * clickX;\n        this$static.currentXmax -= distanceX * 0.5 * (1 - clickX);\n      }\n    }\n    if (this$static.height_0 > 30) {\n      if (frame_0.scale == 1 || frame_0.scale == 3) {\n        clickY = (y_0 - 15) / (this$static.height_0 - 30);\n        clickY = (0 > clickY?0:clickY) < 1?0 > clickY?0:clickY:1;\n        distanceLogY = log10(this$static.currentYmax / this$static.currentYmin);\n        this$static.currentYmin *= Math.pow(10, distanceLogY * 0.5 * (1 - clickY));\n        this$static.currentYmax /= Math.pow(10, distanceLogY * 0.5 * clickY);\n      }\n       else {\n        clickY = (y_0 - 15) / (this$static.height_0 - 30);\n        clickY = (0 > clickY?0:clickY) < 1?0 > clickY?0:clickY:1;\n        distanceY = this$static.currentYmax - this$static.currentYmin;\n        this$static.currentYmin += distanceY * 0.5 * (1 - clickY);\n        this$static.currentYmax -= distanceY * 0.5 * clickY;\n      }\n    }\n  }\n}\n\nfunction $zoomOut(this$static, x_0, y_0){\n  var clickX, clickY, distanceLogX, distanceLogY, distanceX, distanceY, frame_0;\n  if (this$static.frames_0.size_0 != 0) {\n    frame_0 = dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame);\n    if (this$static.width_0 > 30) {\n      if (frame_0.scale == 2 || frame_0.scale == 3) {\n        if (log10(this$static.currentXmax) <= 30 && log10(this$static.currentXmax) - log10(this$static.currentXmin) <= 20) {\n          clickX = (x_0 - 15) / (this$static.width_0 - 30);\n          clickX = (0 > clickX?0:clickX) < 1?0 > clickX?0:clickX:1;\n          distanceLogX = log10(this$static.currentXmax) - log10(this$static.currentXmin);\n          this$static.currentXmin /= Math.pow(10, distanceLogX * clickX);\n          this$static.currentXmax *= Math.pow(10, distanceLogX * (1 - clickX));\n        }\n      }\n       else {\n        clickX = (x_0 - 15) / (this$static.width_0 - 30);\n        clickX = (0 > clickX?0:clickX) < 1?0 > clickX?0:clickX:1;\n        distanceX = this$static.currentXmax - this$static.currentXmin;\n        this$static.currentXmin -= distanceX * clickX;\n        this$static.currentXmax += distanceX * (1 - clickX);\n      }\n    }\n    if (this$static.height_0 > 30) {\n      if (frame_0.scale == 1 || frame_0.scale == 3) {\n        if (log10(this$static.currentYmax) <= 30 && log10(this$static.currentYmax) - log10(this$static.currentYmin) <= 20) {\n          clickY = (y_0 - 15) / (this$static.height_0 - 30);\n          clickY = (0 > clickY?0:clickY) < 1?0 > clickY?0:clickY:1;\n          distanceLogY = log10(this$static.currentYmax) - log10(this$static.currentYmin);\n          this$static.currentYmin /= Math.pow(10, distanceLogY * (1 - clickY));\n          this$static.currentYmax *= Math.pow(10, distanceLogY * clickY);\n        }\n      }\n       else {\n        clickY = (y_0 - 15) / (this$static.height_0 - 30);\n        clickY = (0 > clickY?0:clickY) < 1?0 > clickY?0:clickY:1;\n        distanceY = this$static.currentYmax - this$static.currentYmin;\n        this$static.currentYmin -= distanceY * (1 - clickY);\n        this$static.currentYmax += distanceY * clickY;\n      }\n    }\n  }\n}\n\nfunction $zoomToBox(this$static, x_0, y_0){\n  var distanceLogX, distanceLogY, distanceX, distanceY, frame_0, maxX, maxY, minX, minY;\n  if (this$static.frames_0.size_0 != 0) {\n    frame_0 = dynamicCast($get_5(this$static.frames_0, this$static.currentframeindex), Q$LinePlotFrame);\n    if (abs_1(x_0 - this$static.dragx) > 8 && abs_1(y_0 - this$static.dragy) > 8) {\n      if (this$static.width_0 > 30) {\n        if (frame_0.scale == 2 || frame_0.scale == 3) {\n          minX = (min_2(x_0, this$static.dragx) - 15) / (this$static.width_0 - 30);\n          minX = (0 > minX?0:minX) < 1?0 > minX?0:minX:1;\n          maxX = (max_2(x_0, this$static.dragx) - 15) / (this$static.width_0 - 30);\n          maxX = (0 > maxX?0:maxX) < 1?0 > maxX?0:maxX:1;\n          distanceLogX = log10(this$static.currentXmax / this$static.currentXmin);\n          this$static.currentXmin *= Math.pow(10, distanceLogX * minX);\n          this$static.currentXmax /= Math.pow(10, distanceLogX * (1 - maxX));\n        }\n         else {\n          minX = (min_2(x_0, this$static.dragx) - 15) / (this$static.width_0 - 30);\n          minX = (0 > minX?0:minX) < 1?0 > minX?0:minX:1;\n          maxX = (max_2(x_0, this$static.dragx) - 15) / (this$static.width_0 - 30);\n          maxX = (0 > maxX?0:maxX) < 1?0 > maxX?0:maxX:1;\n          distanceX = this$static.currentXmax - this$static.currentXmin;\n          this$static.currentXmin += distanceX * minX;\n          this$static.currentXmax -= distanceX * (1 - maxX);\n        }\n      }\n      if (this$static.height_0 > 30) {\n        if (frame_0.scale == 1 || frame_0.scale == 3) {\n          minY = (min_2(y_0, this$static.dragy) - 15) / (this$static.height_0 - 30);\n          minY = (0 > minY?0:minY) < 1?0 > minY?0:minY:1;\n          maxY = (max_2(y_0, this$static.dragy) - 15) / (this$static.height_0 - 30);\n          maxY = (0 > maxY?0:maxY) < 1?0 > maxY?0:maxY:1;\n          distanceLogY = log10(this$static.currentYmax / this$static.currentYmin);\n          this$static.currentYmin *= Math.pow(10, distanceLogY * (1 - maxY));\n          this$static.currentYmax /= Math.pow(10, distanceLogY * minY);\n        }\n         else {\n          minY = (min_2(y_0, this$static.dragy) - 15) / (this$static.height_0 - 30);\n          minY = (0 > minY?0:minY) < 1?0 > minY?0:minY:1;\n          maxY = (max_2(y_0, this$static.dragy) - 15) / (this$static.height_0 - 30);\n          maxY = (0 > maxY?0:maxY) < 1?0 > maxY?0:maxY:1;\n          distanceY = this$static.currentYmax - this$static.currentYmin;\n          this$static.currentYmin += distanceY * (1 - maxY);\n          this$static.currentYmax -= distanceY * minY;\n        }\n      }\n    }\n  }\n}\n\nfunction LinePlotPlotter_0(c){\n  this.canvas = c;\n  this.buttons = 0;\n  this.down = false;\n  this.zoomwidth = -1;\n  this.zoomheight = -1;\n  this.currentframeindex = 0;\n  this.width_0 = 0;\n  this.height_0 = 0;\n  this.frames_0 = new ArrayList_0;\n  $addDomHandler(c, this, ($clinit_MouseWheelEvent() , $clinit_MouseWheelEvent() , TYPE_7));\n  $addDomHandler(c, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_3));\n  $addDomHandler(c, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_2));\n  $addDomHandler(c, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_6));\n}\n\ndefineSeed(541, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$MouseWheelHandler, Q$EventHandler]), LinePlotPlotter_0);\n_.execute = function execute_18(timestamp){\n  $paint_0(this);\n}\n;\n_.onMouseDown = function onMouseDown_1(event_0){\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons = $eventGetButton(event_0.nativeEvent);\n  this.downx = $getX(event_0);\n  this.downy = $getY(event_0);\n  this.dragx = this.downx;\n  this.dragy = this.downy;\n  this.down = true;\n  this.travel = 0;\n}\n;\n_.onMouseMove = function onMouseMove_1(event_0){\n  var frame_0, offsetX, offsetY;\n  $eventPreventDefault(event_0.nativeEvent);\n  if (this.frames_0.size_0 != 0) {\n    frame_0 = dynamicCast($get_5(this.frames_0, this.currentframeindex), Q$LinePlotFrame);\n    if (this.down) {\n      if ((this.buttons & 4) != 0) {\n        this.zoomx = min_2($getX(event_0), this.downx);\n        this.zoomy = min_2($getY(event_0), this.downy);\n        this.zoomwidth = abs_1($getX(event_0) - this.downx);\n        this.zoomheight = abs_1($getY(event_0) - this.downy);\n      }\n       else {\n        if (this.width_0 > 30) {\n          if (frame_0.scale == 2 || frame_0.scale == 3) {\n            offsetX = pow_0(10, log10(this.currentXmax / this.currentXmin) * ($getX(event_0) - this.dragx) / (this.width_0 - 30));\n            this.currentXmin /= offsetX;\n            this.currentXmax /= offsetX;\n          }\n           else {\n            offsetX = (this.currentXmax - this.currentXmin) * ($getX(event_0) - this.dragx) / (this.width_0 - 30);\n            this.currentXmin -= offsetX;\n            this.currentXmax -= offsetX;\n          }\n        }\n        if (this.height_0 > 30) {\n          if (frame_0.scale == 1 || frame_0.scale == 3) {\n            offsetY = pow_0(10, log10(this.currentYmax / this.currentYmin) * ($getY(event_0) - this.dragy) / (this.height_0 - 30));\n            this.currentYmin *= offsetY;\n            this.currentYmax *= offsetY;\n          }\n           else {\n            offsetY = (this.currentYmax - this.currentYmin) * ($getY(event_0) - this.dragy) / (this.height_0 - 30);\n            this.currentYmin += offsetY;\n            this.currentYmax += offsetY;\n          }\n        }\n        this.travel += max_2(abs_1($getX(event_0) - this.dragx), abs_1($getY(event_0) - this.dragy));\n        this.dragx = $getX(event_0);\n        this.dragy = $getY(event_0);\n        $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n      }\n    }\n     else {\n      this.width_0 > 30 && (frame_0.scale == 2 || frame_0.scale == 3?$setMouseValueX(frame_0, this.currentXmin * pow_0(10, log10(this.currentXmax / this.currentXmin) * ($getX(event_0) - 15) / (this.width_0 - 30))):$setMouseValueX(frame_0, this.currentXmin + (this.currentXmax - this.currentXmin) * ($getX(event_0) - 15) / (this.width_0 - 30)));\n      this.height_0 > 30 && (frame_0.scale == 1 || frame_0.scale == 3?$setMouseValueY(frame_0, this.currentYmax / pow_0(10, log10(this.currentYmax / this.currentYmin) * ($getY(event_0) - 15) / (this.height_0 - 30))):$setMouseValueY(frame_0, this.currentYmax - (this.currentYmax - this.currentYmin) * ($getY(event_0) - 15) / (this.height_0 - 30)));\n      this.dragx = $getX(event_0);\n      this.dragy = $getY(event_0);\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n  }\n}\n;\n_.onMouseUp = function onMouseUp_1(event_0){\n  var up;\n  up = $eventGetButton(event_0.nativeEvent);\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons &= ~up;\n  if (this.buttons == 0) {\n    this.down = false;\n    if (this.travel < 15) {\n      if ((up & 2) != 0) {\n        $zoomOut(this, $getX(event_0), $getY(event_0));\n        $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n      }\n       else if ((up & 1) != 0) {\n        $zoomIn(this, $getX(event_0), $getY(event_0));\n        $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n      }\n    }\n    if ((this.buttons & 4) != 0) {\n      $zoomToBox(this, $getX(event_0), $getY(event_0));\n      this.zoomwidth = -1;\n      this.zoomheight = -1;\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n  }\n}\n;\n_.onMouseWheel = function onMouseWheel_0(event_0){\n  var notches;\n  $eventPreventDefault(event_0.nativeEvent);\n  if (this.frames_0.size_0 != 0) {\n    notches = getNotches(event_0.nativeEvent);\n    notches < 0?$zoomIn(this, $getX(event_0), $getY(event_0)):notches > 0 && $zoomOut(this, $getX(event_0), $getY(event_0));\n    $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n  }\n}\n;\n_.buttons = 0;\n_.currentXmax = 0;\n_.currentXmin = 0;\n_.currentYmax = 0;\n_.currentYmin = 0;\n_.currentframeindex = 0;\n_.down = false;\n_.downx = 0;\n_.downy = 0;\n_.dragx = 0;\n_.dragy = 0;\n_.height_0 = 0;\n_.travel = 0;\n_.width_0 = 0;\n_.zoomheight = 0;\n_.zoomwidth = 0;\n_.zoomx = 0;\n_.zoomy = 0;\nfunction LinePlotText_0(x_0, y_0, text_0){\n  this.x_0 = x_0;\n  this.y_0 = y_0;\n  this.text_0 = text_0;\n}\n\ndefineSeed(542, 1, makeCastMap([Q$LinePlotText]), LinePlotText_0);\n_.x_0 = 0;\n_.y_0 = 0;\nfunction $scale_0(this$static, s){\n  this$static.a *= s;\n  this$static.c *= s;\n}\n\nfunction $shift_0(this$static, dx, dy){\n  this$static.b += dx;\n  this$static.d += dy;\n}\n\nfunction AffineShift_0(){\n  this.a = this.c = 1;\n  this.b = this.d = 0;\n}\n\nfunction AffineShift_1(a, b, c, d){\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n}\n\ndefineSeed(543, 1, {}, AffineShift_0, AffineShift_1);\n_.a = 0;\n_.b = 0;\n_.c = 0;\n_.d = 0;\nfunction $setMinMax(this$static, mn, mx){\n  this$static.min_0 = mn;\n  this$static.max_0 = mx;\n}\n\nfunction $toColor(this$static, height){\n  var hash;\n  hash = 0;\n  if (this$static.max_0 > this$static.min_0) {\n    hash = round_int(256 * (height - this$static.min_0) / (this$static.max_0 - this$static.min_0));\n    hash < 0 && (hash = 0);\n    hash > 256 && (hash = 256);\n  }\n  !this$static.chash[hash] && (this$static.chash[hash] = this$static.computeColor(height));\n  return this$static.chash[hash];\n}\n\nfunction Colormap_0(){\n  this.chash = initDim(_3Lviplab_client_gui_Color_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Color, 257, 0);\n}\n\ndefineSeed(544, 1, {});\n_.max_0 = 1;\n_.min_0 = 0;\nfunction computeTicksUnit(min_0, max_0){\n  var exponent, firsttick, lasttick, numticks, unit;\n  if (max_0 > min_0) {\n    exponent = round_int(log10(max_0 - min_0));\n    unit = pow_0(10, exponent);\n    do {\n      firsttick = Math.ceil(min_0 / unit) * unit;\n      lasttick = Math.floor(max_0 / unit) * unit;\n      numticks = round_int((lasttick - firsttick) / unit);\n      if (lasttick > firsttick && numticks > 3)\n        break;\n      unit /= 10;\n    }\n     while (true);\n    return unit;\n  }\n   else {\n    return 1;\n  }\n}\n\nfunction createBoxed(xmin, xmax, ymin, ymax, zmin, zmax){\n  var i, triangles, u0, u1, v0, v1, xgo0, xgo1, ygo0, ygo1, zgo0, zgo1;\n  triangles = new ArrayList_0;\n  for (i = 0; i < 16; i++) {\n    u0 = i / 16;\n    v0 = 1 - u0;\n    u1 = (i + 1) / 16;\n    v1 = 1 - u1;\n    xgo0 = xmax * u0 + xmin * v0;\n    xgo1 = xmax * u1 + xmin * v1;\n    ygo0 = ymax * u0 + ymin * v0;\n    ygo1 = ymax * u1 + ymin * v1;\n    zgo0 = zmax * u0 + zmin * v0;\n    zgo1 = zmax * u1 + zmin * v1;\n    $add_5(triangles, new Triangle_0(xgo0, ymin, zmin, xgo1, ymin, zmin, xgo1, ymin, zmin));\n    $add_5(triangles, new Triangle_0(xgo0, ymax, zmin, xgo1, ymax, zmin, xgo1, ymax, zmin));\n    $add_5(triangles, new Triangle_0(xgo0, ymin, zmax, xgo1, ymin, zmax, xgo1, ymin, zmax));\n    $add_5(triangles, new Triangle_0(xgo0, ymax, zmax, xgo1, ymax, zmax, xgo1, ymax, zmax));\n    $add_5(triangles, new Triangle_0(xmin, ygo0, zmin, xmin, ygo0, zmin, xmin, ygo1, zmin));\n    $add_5(triangles, new Triangle_0(xmax, ygo0, zmin, xmax, ygo0, zmin, xmax, ygo1, zmin));\n    $add_5(triangles, new Triangle_0(xmin, ygo0, zmax, xmin, ygo0, zmax, xmin, ygo1, zmax));\n    $add_5(triangles, new Triangle_0(xmax, ygo0, zmax, xmax, ygo0, zmax, xmax, ygo1, zmax));\n    $add_5(triangles, new Triangle_0(xmin, ymin, zgo0, xmin, ymin, zgo0, xmin, ymin, zgo1));\n    $add_5(triangles, new Triangle_0(xmax, ymin, zgo0, xmax, ymin, zgo0, xmax, ymin, zgo1));\n    $add_5(triangles, new Triangle_0(xmin, ymax, zgo0, xmin, ymax, zgo0, xmin, ymax, zgo1));\n    $add_5(triangles, new Triangle_0(xmax, ymax, zgo0, xmax, ymax, zgo0, xmax, ymax, zgo1));\n  }\n  createTicks(triangles, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, zmin, zmin);\n  createTicks(triangles, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, zmin, zmin);\n  createTicks(triangles, 2, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymin, zmin, zmax);\n  return triangles;\n}\n\nfunction createCoordinateFrame(type_0, xmin, xmax, ymin, ymax, zmin, zmax){\n  switch (type_0) {\n    case 0:\n      return new ArrayList_0;\n    case 1:\n      return createTripod(xmin, xmax, ymin, ymax, zmin, zmax);\n    case 2:\n      return createBoxed(xmin, xmax, ymin, ymax, zmin, zmax);\n    case 3:\n      return createZofXYFrame(xmin, xmax, ymin, ymax, zmin, zmax);\n    case 4:\n      return createGridFrame(xmin, xmax, ymin, ymax);\n    default:return null;\n  }\n}\n\nfunction createCoordinateLabels(type_0, xmin, xmax, ymin, ymax, zmin, zmax){\n  var t;\n  t = new ArrayList_0;\n  switch (type_0) {\n    case 0:\n      return t;\n    case 1:\n      zmax < 0?(zmax = 0):zmin > 0 && (zmin = 0);\n      ymax < 0?(ymax = 0):ymin > 0 && (ymin = 0);\n      xmax < 0?(xmax = 0):xmin > 0 && (xmin = 0);\n      createLabels(t, 0, getTicksExtent(ymin, ymax), xmin, xmax, 0, 0, 0, 0);\n      createLabels(t, 1, getTicksExtent(xmin, xmax), 0, 0, ymin, ymax, 0, 0);\n      createLabels(t, 2, getTicksExtent(xmin, xmax), 0, 0, 0, 0, zmin, zmax);\n      return t;\n    case 3:\n      zmax < 0?(zmax = 0):zmin > 0 && (zmin = 0);\n      createLabels(t, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, 0, 0);\n      createLabels(t, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, 0, 0);\n      createLabels(t, 2, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymin, zmin, zmax);\n      return t;\n    case 4:\n      createLabels(t, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, 0, 0);\n      createLabels(t, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, 0, 0);\n      return t;\n    case 2:\n      createLabels(t, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, zmin, zmin);\n      createLabels(t, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, zmin, zmin);\n      createLabels(t, 2, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymin, zmin, zmax);\n      return t;\n    default:return null;\n  }\n}\n\nfunction createGridFrame(xmin, xmax, ymin, ymax){\n  var i, triangles, u0, u1, v0, v1, xgo0, xgo1, ygo0, ygo1;\n  triangles = new ArrayList_0;\n  for (i = 0; i < 16; i++) {\n    u0 = i / 16;\n    v0 = 1 - u0;\n    u1 = (i + 1) / 16;\n    v1 = 1 - u1;\n    xgo0 = xmax * u0 + xmin * v0;\n    xgo1 = xmax * u1 + xmin * v1;\n    ygo0 = ymax * u0 + ymin * v0;\n    ygo1 = ymax * u1 + ymin * v1;\n    $add_5(triangles, new Triangle_0(xgo0, ymin, 0, xgo1, ymin, 0, xgo1, ymin, 0));\n    $add_5(triangles, new Triangle_0(xgo0, ymax, 0, xgo1, ymax, 0, xgo1, ymax, 0));\n    $add_5(triangles, new Triangle_0(xmin, ygo0, 0, xmin, ygo0, 0, xmin, ygo1, 0));\n    $add_5(triangles, new Triangle_0(xmax, ygo0, 0, xmax, ygo0, 0, xmax, ygo1, 0));\n  }\n  createTicks(triangles, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, 0, 0);\n  createTicks(triangles, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, 0, 0);\n  return triangles;\n}\n\nfunction createLabels(t, direction, xtend, xmin, xmax, ymin, ymax, zmin, zmax){\n  var first, format, last, unit;\n  format = ($clinit_NumberFormat() , new NumberFormat_1('##.##', $getDefaultNative()));\n  switch (direction) {\n    case 0:\n      unit = computeTicksUnit(xmin, xmax);\n      first = Math.ceil(xmin / unit) * unit;\n      last = Math.floor(xmax / unit) * unit;\n      break;\n    case 1:\n      unit = computeTicksUnit(ymin, ymax);\n      first = Math.ceil(ymin / unit) * unit;\n      last = Math.floor(ymax / unit) * unit;\n      break;\n    case 2:\n      unit = computeTicksUnit(zmin, zmax);\n      first = Math.ceil(zmin / unit) * unit;\n      last = Math.floor(zmax / unit) * unit;\n      break;\n    default:return;\n  }\n  while (first <= last) {\n    switch (direction) {\n      case 0:\n        $add_5(t, new Label_2($format_0(format, first), first, ymin - xtend, zmin));\n        break;\n      case 1:\n        $add_5(t, new Label_2($format_0(format, first), xmin - xtend, first, zmin));\n        break;\n      case 2:\n        $add_5(t, new Label_2($format_0(format, first), xmin - 2 * xtend, ymin, first));\n    }\n    first += unit;\n  }\n}\n\nfunction createTicks(t, direction, xtend, xmin, xmax, ymin, ymax, zmin, zmax){\n  var first, last, unit;\n  switch (direction) {\n    case 0:\n      unit = computeTicksUnit(xmin, xmax);\n      first = Math.ceil(xmin / unit) * unit;\n      last = Math.floor(xmax / unit) * unit;\n      break;\n    case 1:\n      unit = computeTicksUnit(ymin, ymax);\n      first = Math.ceil(ymin / unit) * unit;\n      last = Math.floor(ymax / unit) * unit;\n      break;\n    case 2:\n      unit = computeTicksUnit(zmin, zmax);\n      first = Math.ceil(zmin / unit) * unit;\n      last = Math.floor(zmax / unit) * unit;\n      break;\n    default:return;\n  }\n  while (first <= last) {\n    switch (direction) {\n      case 0:\n        $add_5(t, new Triangle_0(first, ymin, zmin, first, ymin - xtend, zmin, first, ymin - xtend, zmin));\n        break;\n      case 1:\n        $add_5(t, new Triangle_0(xmin, first, zmin, xmin - xtend, first, zmin, xmin - xtend, first, zmin));\n        break;\n      case 2:\n        $add_5(t, new Triangle_0(xmin, ymin, first, xmin - xtend, ymin, first, xmin - xtend, ymin, first));\n    }\n    first += unit;\n  }\n}\n\nfunction createTripod(xmin, xmax, ymin, ymax, zmin, zmax){\n  var i, triangles, u0, u1, v0, v1, xgo0, xgo1, ygo0, ygo1, zgo0, zgo1;\n  triangles = new ArrayList_0;\n  zmax < 0?(zmax = 0):zmin > 0 && (zmin = 0);\n  ymax < 0?(ymax = 0):ymin > 0 && (ymin = 0);\n  xmax < 0?(xmax = 0):xmin > 0 && (xmin = 0);\n  for (i = 0; i < 16; i++) {\n    u0 = i / 16;\n    v0 = 1 - u0;\n    u1 = (i + 1) / 16;\n    v1 = 1 - u1;\n    xgo0 = xmax * u0 + xmin * v0;\n    xgo1 = xmax * u1 + xmin * v1;\n    ygo0 = ymax * u0 + ymin * v0;\n    ygo1 = ymax * u1 + ymin * v1;\n    zgo0 = zmax * u0 + zmin * v0;\n    zgo1 = zmax * u1 + zmin * v1;\n    $add_5(triangles, new Triangle_0(xgo0, 0, 0, xgo1, 0, 0, xgo1, 0, 0));\n    $add_5(triangles, new Triangle_0(0, ygo0, 0, 0, ygo0, 0, 0, ygo1, 0));\n    $add_5(triangles, new Triangle_0(0, 0, zgo0, 0, 0, zgo0, 0, 0, zgo1));\n  }\n  createTicks(triangles, 0, getTicksExtent(ymin, ymax), xmin, xmax, 0, 0, 0, 0);\n  createTicks(triangles, 1, getTicksExtent(xmin, xmax), 0, 0, ymin, ymax, 0, 0);\n  createTicks(triangles, 2, getTicksExtent(xmin, xmax), 0, 0, 0, 0, zmin, zmax);\n  return triangles;\n}\n\nfunction createZofXYFrame(xmin, xmax, ymin, ymax, zmin, zmax){\n  var i, triangles, u0, u1, v0, v1, xgo0, xgo1, ygo0, ygo1, zgo0, zgo1;\n  triangles = new ArrayList_0;\n  zmax < 0?(zmax = 0):zmin > 0 && (zmin = 0);\n  for (i = 0; i < 16; i++) {\n    u0 = i / 16;\n    v0 = 1 - u0;\n    u1 = (i + 1) / 16;\n    v1 = 1 - u1;\n    xgo0 = xmax * u0 + xmin * v0;\n    xgo1 = xmax * u1 + xmin * v1;\n    ygo0 = ymax * u0 + ymin * v0;\n    ygo1 = ymax * u1 + ymin * v1;\n    zgo0 = zmax * u0 + zmin * v0;\n    zgo1 = zmax * u1 + zmax * v1;\n    $add_5(triangles, new Triangle_0(xgo0, ymin, 0, xgo1, ymin, 0, xgo1, ymin, 0));\n    $add_5(triangles, new Triangle_0(xgo0, ymax, 0, xgo1, ymax, 0, xgo1, ymax, 0));\n    $add_5(triangles, new Triangle_0(xmin, ygo0, 0, xmin, ygo0, 0, xmin, ygo1, 0));\n    $add_5(triangles, new Triangle_0(xmax, ygo0, 0, xmax, ygo0, 0, xmax, ygo1, 0));\n    $add_5(triangles, new Triangle_0(xmin, ymin, zgo0, xmin, ymin, zgo0, xmin, ymin, zgo1));\n    $add_5(triangles, new Triangle_0(xmax, ymin, zgo0, xmax, ymin, zgo0, xmax, ymin, zgo1));\n    $add_5(triangles, new Triangle_0(xmin, ymax, zgo0, xmin, ymax, zgo0, xmin, ymax, zgo1));\n    $add_5(triangles, new Triangle_0(xmax, ymax, zgo0, xmax, ymax, zgo0, xmax, ymax, zgo1));\n  }\n  createTicks(triangles, 0, getTicksExtent(ymin, ymax), xmin, xmax, ymin, ymin, 0, 0);\n  createTicks(triangles, 1, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymax, 0, 0);\n  createTicks(triangles, 2, getTicksExtent(xmin, xmax), xmin, xmin, ymin, ymin, zmin, zmax);\n  return triangles;\n}\n\nfunction getTicksExtent(dmin, dmax){\n  if (dmax > dmin) {\n    return (dmax - dmin) * 0.05;\n  }\n  return 0;\n}\n\nfunction $findAtTime(this$static, current_time){\n  var d, d$iterator, min_0, minarg, time;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    time = d.time;\n    time >= current_time?(time = time - current_time):(time = current_time - time);\n    if (time < min_0) {\n      min_0 = time;\n      minarg = d;\n    }\n  }\n  return minarg;\n}\n\nfunction $getFirstSet_0(this$static){\n  var d, d$iterator, min_0, minarg;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    if (d.time < min_0) {\n      min_0 = d.time;\n      minarg = d;\n    }\n  }\n  return minarg;\n}\n\nfunction $getLastSet_0(this$static){\n  var d, d$iterator, max_0, maxarg;\n  max_0 = -1.7976931348623157E308;\n  maxarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    if (d.time > max_0) {\n      max_0 = d.time;\n      maxarg = d;\n    }\n  }\n  return maxarg;\n}\n\nfunction $getNextSet_0(this$static, current_time){\n  var d, d$iterator, min_0, minarg;\n  min_0 = 1.7976931348623157E308;\n  minarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    if (d.time < min_0 && d.time > current_time) {\n      min_0 = d.time;\n      minarg = d;\n    }\n  }\n  return minarg;\n}\n\nfunction $getPrevSet_0(this$static, current_time){\n  var d, d$iterator, max_0, maxarg;\n  max_0 = -1.7976931348623157E308;\n  maxarg = null;\n  for (d$iterator = new AbstractList$IteratorImpl_0(this$static.data_0); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    if (d.time > max_0 && d.time < current_time) {\n      max_0 = d.time;\n      maxarg = d;\n    }\n  }\n  return maxarg;\n}\n\nfunction DataSetRange_0(source, l_0){\n  var d, d$iterator, h_0, t, t$iterator;\n  this.data_0 = new ArrayList_0;\n  this.label_0 = l_0;\n  this.xmin = 1.7976931348623157E308;\n  this.xmax = -1.7976931348623157E308;\n  this.ymin = 1.7976931348623157E308;\n  this.ymax = -1.7976931348623157E308;\n  this.zmin = 1.7976931348623157E308;\n  this.zmax = -1.7976931348623157E308;\n  this.hmin = 1.7976931348623157E308;\n  this.hmax = -1.7976931348623157E308;\n  for (d$iterator = new AbstractList$IteratorImpl_0(source); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    if (this.label_0 == null || $equals(this.label_0, d.label_0)) {\n      $add_5(this.data_0, d);\n      !this.cmap && (this.cmap = d.cmap);\n      for (t$iterator = new AbstractList$IteratorImpl_0(d.triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n        t = dynamicCast($next_3(t$iterator), Q$Triangle);\n        h_0 = (t.z1 + t.z2 + t.z3) / 3;\n        t.x1 > this.xmax && (this.xmax = t.x1);\n        t.x2 > this.xmax && (this.xmax = t.x2);\n        t.x3 > this.xmax && (this.xmax = t.x3);\n        t.x1 < this.xmin && (this.xmin = t.x1);\n        t.x2 < this.xmin && (this.xmin = t.x2);\n        t.x3 < this.xmin && (this.xmin = t.x3);\n        t.y1 > this.ymax && (this.ymax = t.y1);\n        t.y2 > this.ymax && (this.ymax = t.y2);\n        t.y3 > this.ymax && (this.ymax = t.y3);\n        t.y1 < this.ymin && (this.ymin = t.y1);\n        t.y2 < this.ymin && (this.ymin = t.y2);\n        t.y3 < this.ymin && (this.ymin = t.y3);\n        t.z1 > this.zmax && (this.zmax = t.z1);\n        t.z2 > this.zmax && (this.zmax = t.z2);\n        t.z3 > this.zmax && (this.zmax = t.z3);\n        t.z1 < this.zmin && (this.zmin = t.z1);\n        t.z2 < this.zmin && (this.zmin = t.z2);\n        t.z3 < this.zmin && (this.zmin = t.z3);\n        h_0 > this.hmax && (this.hmax = h_0);\n        h_0 < this.hmin && (this.hmin = h_0);\n      }\n    }\n  }\n}\n\nfunction findRange(ranges, label_0){\n  var r, r$iterator;\n  for (r$iterator = new AbstractList$IteratorImpl_0(ranges); r$iterator.i < r$iterator.this$0_0.size_1();) {\n    r = dynamicCast($next_3(r$iterator), Q$DataSetRange);\n    if (label_0 == null || $equals(label_0, r.label_0))\n      return r;\n  }\n  return null;\n}\n\nfunction splitIntoDataSets(source){\n  var d, d$iterator, present, ranges, t, t$iterator;\n  ranges = new ArrayList_0;\n  for (d$iterator = new AbstractList$IteratorImpl_0(source); d$iterator.i < d$iterator.this$0_0.size_1();) {\n    d = dynamicCast($next_3(d$iterator), Q$DataSet_0);\n    present = false;\n    for (t$iterator = new AbstractList$IteratorImpl_0(ranges); t$iterator.i < t$iterator.this$0_0.size_1();) {\n      t = dynamicCast($next_3(t$iterator), Q$DataSetRange);\n      if ($indexOf_4(t.data_0, d, 0) != -1) {\n        present = true;\n        break;\n      }\n    }\n    present || $add_5(ranges, new DataSetRange_0(source, d.label_0));\n  }\n  return ranges;\n}\n\ndefineSeed(546, 1, makeCastMap([Q$DataSetRange]), DataSetRange_0);\n_.hmax = 0;\n_.hmin = 0;\n_.xmax = 0;\n_.xmin = 0;\n_.ymax = 0;\n_.ymin = 0;\n_.zmax = 0;\n_.zmin = 0;\nfunction Label_2(t, x_1, y_1, z_1){\n  this.x_0 = x_1;\n  this.y_0 = y_1;\n  this.z_0 = z_1;\n  this.text_0 = t;\n}\n\ndefineSeed(547, 1, makeCastMap([Q$Label]), Label_2);\n_.toString$ = function toString_31(){\n  return this.text_0 + '@(' + this.x_0 + ',' + this.y_0 + ',' + this.z_0 + ')';\n}\n;\n_.x_0 = 0;\n_.y_0 = 0;\n_.z_0 = 0;\nfunction $diagonalInverse(this$static){\n  var m_0;\n  m_0 = new Matrix_0;\n  m_0.m11 = 1 / this$static.m11;\n  m_0.m22 = 1 / this$static.m22;\n  m_0.m33 = 1 / this$static.m33;\n  m_0.m44 = 1 / this$static.m44;\n  return m_0;\n}\n\nfunction $projectPoint(this$static, pt){\n  var s, x_0, y_0, z_0;\n  x_0 = this$static.m11 * pt[0] + this$static.m12 * pt[1] + this$static.m13 * pt[2] + this$static.m14;\n  y_0 = this$static.m21 * pt[0] + this$static.m22 * pt[1] + this$static.m23 * pt[2] + this$static.m24;\n  z_0 = this$static.m31 * pt[0] + this$static.m32 * pt[1] + this$static.m33 * pt[2] + this$static.m34;\n  s = this$static.m41 * pt[0] + this$static.m42 * pt[1] + this$static.m43 * pt[2] + this$static.m44;\n  pt[0] = x_0 / s;\n  pt[1] = y_0 / s;\n  pt[2] = z_0 / s;\n}\n\nfunction Matrix_0(){\n}\n\nfunction diag(m1, m2, m3){\n  var m_0;\n  m_0 = new Matrix_0;\n  m_0.m11 = m1;\n  m_0.m22 = m2;\n  m_0.m33 = m3;\n  m_0.m44 = 1;\n  return m_0;\n}\n\nfunction multiply(l_0, r){\n  var m_0;\n  m_0 = new Matrix_0;\n  m_0.m11 = l_0.m11 * r.m11 + l_0.m12 * r.m21 + l_0.m13 * r.m31 + l_0.m14 * r.m41;\n  m_0.m12 = l_0.m11 * r.m12 + l_0.m12 * r.m22 + l_0.m13 * r.m32 + l_0.m14 * r.m42;\n  m_0.m13 = l_0.m11 * r.m13 + l_0.m12 * r.m23 + l_0.m13 * r.m33 + l_0.m14 * r.m43;\n  m_0.m14 = l_0.m11 * r.m14 + l_0.m12 * r.m24 + l_0.m13 * r.m34 + l_0.m14 * r.m44;\n  m_0.m21 = l_0.m21 * r.m11 + l_0.m22 * r.m21 + l_0.m23 * r.m31 + l_0.m24 * r.m41;\n  m_0.m22 = l_0.m21 * r.m12 + l_0.m22 * r.m22 + l_0.m23 * r.m32 + l_0.m24 * r.m42;\n  m_0.m23 = l_0.m21 * r.m13 + l_0.m22 * r.m23 + l_0.m23 * r.m33 + l_0.m24 * r.m43;\n  m_0.m24 = l_0.m21 * r.m14 + l_0.m22 * r.m24 + l_0.m23 * r.m34 + l_0.m24 * r.m44;\n  m_0.m31 = l_0.m31 * r.m11 + l_0.m32 * r.m21 + l_0.m33 * r.m31 + l_0.m34 * r.m41;\n  m_0.m32 = l_0.m31 * r.m12 + l_0.m32 * r.m22 + l_0.m33 * r.m32 + l_0.m34 * r.m42;\n  m_0.m33 = l_0.m31 * r.m13 + l_0.m32 * r.m23 + l_0.m33 * r.m33 + l_0.m34 * r.m43;\n  m_0.m34 = l_0.m31 * r.m14 + l_0.m32 * r.m24 + l_0.m33 * r.m34 + l_0.m34 * r.m44;\n  m_0.m41 = l_0.m41 * r.m11 + l_0.m42 * r.m21 + l_0.m43 * r.m31 + l_0.m44 * r.m41;\n  m_0.m42 = l_0.m41 * r.m12 + l_0.m42 * r.m22 + l_0.m43 * r.m32 + l_0.m44 * r.m42;\n  m_0.m43 = l_0.m41 * r.m13 + l_0.m42 * r.m23 + l_0.m43 * r.m33 + l_0.m44 * r.m43;\n  m_0.m44 = l_0.m41 * r.m14 + l_0.m42 * r.m24 + l_0.m43 * r.m34 + l_0.m44 * r.m44;\n  return m_0;\n}\n\nfunction rotX(phi){\n  var c, m_0, s;\n  c = cos_0(phi);\n  s = sin_0(phi);\n  m_0 = new Matrix_0;\n  m_0.m11 = 1;\n  m_0.m22 = c;\n  m_0.m33 = c;\n  m_0.m23 = s;\n  m_0.m32 = -s;\n  m_0.m44 = 1;\n  return m_0;\n}\n\nfunction rotY(phi){\n  var c, m_0, s;\n  c = cos_0(phi);\n  s = sin_0(phi);\n  m_0 = new Matrix_0;\n  m_0.m22 = 1;\n  m_0.m11 = c;\n  m_0.m33 = c;\n  m_0.m13 = -s;\n  m_0.m31 = s;\n  m_0.m44 = 1;\n  return m_0;\n}\n\nfunction shiftMatrix(as){\n  var m_0;\n  m_0 = new Matrix_0;\n  m_0.m11 = as.a;\n  m_0.m14 = as.b;\n  m_0.m22 = as.c;\n  m_0.m24 = as.d;\n  m_0.m33 = 1;\n  m_0.m44 = 1;\n  return m_0;\n}\n\nfunction shiftMatrix_0(shift_0){\n  var m_0;\n  m_0 = new Matrix_0;\n  m_0.m11 = 1;\n  m_0.m14 = -shift_0[0];\n  m_0.m22 = 1;\n  m_0.m24 = -shift_0[1];\n  m_0.m33 = 1;\n  m_0.m34 = -shift_0[2];\n  m_0.m44 = 1;\n  return m_0;\n}\n\ndefineSeed(548, 1, {}, Matrix_0);\n_.m11 = 0;\n_.m12 = 0;\n_.m13 = 0;\n_.m14 = 0;\n_.m21 = 0;\n_.m22 = 0;\n_.m23 = 0;\n_.m24 = 0;\n_.m31 = 0;\n_.m32 = 0;\n_.m33 = 0;\n_.m34 = 0;\n_.m41 = 0;\n_.m42 = 0;\n_.m43 = 0;\n_.m44 = 0;\nfunction $fitInto_0(this$static, width_0, height, range){\n  var bounds, data_0, dx, dy, mx, my, p, s, shiftandscale, sx, sy, t, t$iterator, time, transform;\n  bounds = initValues(_3D_classLit, makeCastMap([Q$double_$1, Q$Serializable]), -1, [1.7976931348623157E308, 1.7976931348623157E308, -1.7976931348623157E308, -1.7976931348623157E308]);\n  data_0 = $getFirstSet_0(range);\n  shiftandscale = multiply(this$static.scale, shiftMatrix_0(this$static.inner_shift));\n  transform = multiply(this$static.view, shiftandscale);\n  p = new ZBufferEntry_0;\n  while (data_0) {\n    time = data_0.time;\n    for (t$iterator = new AbstractList$IteratorImpl_0(data_0.triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n      t = dynamicCast($next_3(t$iterator), Q$Triangle);\n      $createProjectedTriangle(p, transform, t, false);\n      $updateBounds(p, bounds);\n    }\n    data_0 = $getNextSet_0(range, time);\n  }\n  if (bounds[2] > bounds[0] && bounds[3] > bounds[1]) {\n    sx = width_0 / (bounds[2] - bounds[0]);\n    sy = height / (bounds[3] - bounds[1]);\n    s = sx > sy?sy:sx;\n    dx = -s * bounds[0];\n    dy = -s * bounds[1];\n    mx = width_0 - 1 - (bounds[2] - bounds[0]) * s;\n    my = height - 1 - (bounds[3] - bounds[1]) * s;\n    mx < 0 && (mx = 0);\n    my < 0 && (my = 0);\n    this$static.shift_0 = new AffineShift_1(s, dx + mx / 2, -s, height - 1 - (dy + my / 2));\n  }\n   else {\n    this$static.shift_0 = new AffineShift_1(1, 0, 1, 0);\n  }\n  this$static.requiresupdate = true;\n}\n\nfunction $render_1(this$static, ctx){\n  var i;\n  this$static.requiresupdate && $updateProjection(this$static);\n  for (i = 0; i < this$static.elements; i++) {\n    $draw(this$static.projection[i], ctx, this$static.filledcoloring, this$static.framecolor);\n  }\n}\n\nfunction $resetView(this$static){\n  this$static.view = diag(1, 1, 1);\n  this$static.scale = diag(this$static.xmax > this$static.xmin?1 / (this$static.xmax - this$static.xmin):1, this$static.ymax > this$static.ymin?1 / (this$static.ymax - this$static.ymin):1, this$static.zmax > this$static.zmin?1 / (this$static.zmax - this$static.zmin):1);\n  this$static.inner_shift[0] = 0.5 * (this$static.xmin + this$static.xmax);\n  this$static.inner_shift[1] = 0.5 * (this$static.ymin + this$static.ymax);\n  this$static.inner_shift[2] = 0.5 * (this$static.zmin + this$static.zmax);\n  this$static.requiresupdate = true;\n}\n\nfunction $rotateView(this$static, m_0){\n  this$static.view = multiply(m_0, this$static.view);\n  this$static.requiresupdate = true;\n}\n\nfunction $scale_1(this$static, s){\n  $scale_0(this$static.shift_0, s);\n  this$static.requiresupdate = true;\n}\n\nfunction $setDataSet(this$static, set_0){\n  this$static.triangles = set_0.triangles;\n  this$static.requiresupdate = true;\n}\n\nfunction $setDataSetRange(this$static, range){\n  this$static.xmin = range.xmin;\n  this$static.ymin = range.ymin;\n  this$static.zmin = range.zmin;\n  this$static.xmax = range.xmax;\n  this$static.ymax = range.ymax;\n  this$static.zmax = range.zmax;\n  this$static.filledcoloring = range.cmap;\n  this$static.triangles = $getFirstSet_0(range).triangles;\n  $setMinMax(this$static.filledcoloring, range.hmin, range.hmax);\n  this$static.inner_shift[0] = 0.5 * (this$static.xmin + this$static.xmax);\n  this$static.inner_shift[1] = 0.5 * (this$static.ymin + this$static.ymax);\n  this$static.inner_shift[2] = 0.5 * (this$static.zmin + this$static.zmax);\n  this$static.scale = diag(this$static.xmax > this$static.xmin?1 / (this$static.xmax - this$static.xmin):1, this$static.ymax > this$static.ymin?1 / (this$static.ymax - this$static.ymin):1, this$static.zmax > this$static.zmin?1 / (this$static.zmax - this$static.zmin):1);\n  this$static.requiresupdate = true;\n  this$static.frame_0 = createCoordinateFrame(this$static.coords, this$static.xmin, this$static.xmax, this$static.ymin, this$static.ymax, this$static.zmin, this$static.zmax);\n  this$static.labels = createCoordinateLabels(this$static.coords, this$static.xmin, this$static.xmax, this$static.ymin, this$static.ymax, this$static.zmin, this$static.zmax);\n}\n\nfunction $shift_1(this$static, dx, dy){\n  $shift_0(this$static.shift_0, dx, dy);\n  this$static.requiresupdate = true;\n}\n\nfunction $updateProjection(this$static){\n  var i, j, l_0, l$iterator, shiftandscale, t, t$iterator, t$iterator0, transform, viewscaled;\n  shiftandscale = multiply(this$static.scale, shiftMatrix_0(this$static.inner_shift));\n  viewscaled = multiply(this$static.view, shiftandscale);\n  transform = multiply(shiftMatrix(this$static.shift_0), viewscaled);\n  i = 0;\n  this$static.elements = this$static.triangles.size_0 + (this$static.frame_0?this$static.frame_0.size_0:0) + (this$static.labels?this$static.labels.size_0:0);\n  if (this$static.projection == null || this$static.projection.length < this$static.elements) {\n    this$static.projection = initDim(_3Lviplab_client_plot3d_geometry_ZBufferEntry_2_classLit, makeCastMap([Q$Serializable, Q$Comparable_$1, Q$Object_$1]), Q$ZBufferEntry, this$static.elements, 0);\n    for (j = 0; j < this$static.elements; j++)\n      this$static.projection[j] = new ZBufferEntry_0;\n  }\n  for (t$iterator0 = new AbstractList$IteratorImpl_0(this$static.triangles); t$iterator0.i < t$iterator0.this$0_0.size_1();) {\n    t = dynamicCast($next_3(t$iterator0), Q$Triangle);\n    $createProjectedTriangle(this$static.projection[i++], transform, t, true);\n  }\n  if (this$static.frame_0) {\n    for (t$iterator = new AbstractList$IteratorImpl_0(this$static.frame_0); t$iterator.i < t$iterator.this$0_0.size_1();) {\n      t = dynamicCast($next_3(t$iterator), Q$Triangle);\n      $createProjectedTriangle(this$static.projection[i++], transform, t, true);\n    }\n  }\n  if (this$static.labels) {\n    for (l$iterator = new AbstractList$IteratorImpl_0(this$static.labels); l$iterator.i < l$iterator.this$0_0.size_1();) {\n      l_0 = dynamicCast($next_3(l$iterator), Q$Label);\n      $createProjectedLabel(this$static.projection[i++], transform, l_0);\n    }\n  }\n  mergeSort(this$static.projection, 0, this$static.elements);\n  this$static.requiresupdate = false;\n}\n\nfunction Scene_0(range, coordinate_type){\n  this.inner_shift = initDim(_3D_classLit, makeCastMap([Q$double_$1, Q$Serializable]), -1, 3, 1);\n  this.coords = coordinate_type;\n  this.framecolor = new Color_0(0, 0, 0);\n  this.shift_0 = new AffineShift_0;\n  $resetView(this);\n  $setDataSetRange(this, range);\n  $resetView(this);\n}\n\ndefineSeed(549, 1, {}, Scene_0);\n_.coords = 0;\n_.elements = 0;\n_.requiresupdate = false;\n_.xmax = 0;\n_.xmin = 0;\n_.ymax = 0;\n_.ymin = 0;\n_.zmax = 0;\n_.zmin = 0;\nfunction $toLines(this$static, mesh, offset){\n  mesh[offset++] = this$static.x1;\n  mesh[offset++] = this$static.y1;\n  mesh[offset++] = this$static.z1;\n  mesh[offset++] = this$static.x2;\n  mesh[offset++] = this$static.y2;\n  mesh[offset++] = this$static.z2;\n  mesh[offset++] = this$static.x2;\n  mesh[offset++] = this$static.y2;\n  mesh[offset++] = this$static.z2;\n  mesh[offset++] = this$static.x3;\n  mesh[offset++] = this$static.y3;\n  mesh[offset++] = this$static.z3;\n  mesh[offset++] = this$static.x3;\n  mesh[offset++] = this$static.y3;\n  mesh[offset++] = this$static.z3;\n  mesh[offset++] = this$static.x1;\n  mesh[offset++] = this$static.y1;\n  mesh[offset++] = this$static.z1;\n}\n\nfunction $toMesh(this$static, mesh, offset){\n  mesh[offset++] = this$static.x1;\n  mesh[offset++] = this$static.y1;\n  mesh[offset++] = this$static.z1;\n  mesh[offset++] = this$static.x2;\n  mesh[offset++] = this$static.y2;\n  mesh[offset++] = this$static.z2;\n  mesh[offset++] = this$static.x3;\n  mesh[offset++] = this$static.y3;\n  mesh[offset++] = this$static.z3;\n}\n\nfunction Triangle_0(x_1, y_1, z_1, x_2, y_2, z_2, x_3, y_3, z_3){\n  this.x1 = x_1;\n  this.x2 = x_2;\n  this.x3 = x_3;\n  this.y1 = y_1;\n  this.y2 = y_2;\n  this.y3 = y_3;\n  this.z1 = z_1;\n  this.z2 = z_2;\n  this.z3 = z_3;\n}\n\ndefineSeed(550, 1, makeCastMap([Q$Triangle]), Triangle_0);\n_.toString$ = function toString_32(){\n  return '(' + this.x1 + ',' + this.y1 + ',' + this.z2 + ')-(' + this.x2 + ',' + this.y2 + ',' + this.z2 + ')-(' + this.x3 + ',' + this.y3 + ',' + this.z3 + ')';\n}\n;\n_.x1 = 0;\n_.x2 = 0;\n_.x3 = 0;\n_.y1 = 0;\n_.y2 = 0;\n_.y3 = 0;\n_.z1 = 0;\n_.z2 = 0;\n_.z3 = 0;\nfunction $createProjectedLabel(this$static, view, l_0){\n  var s1, tx, ty, tz, z1;\n  tx = l_0.x_0;\n  ty = l_0.y_0;\n  tz = l_0.z_0;\n  this$static.x1 = view.m11 * tx + view.m12 * ty + view.m13 * tz + view.m14;\n  this$static.y1 = view.m21 * tx + view.m22 * ty + view.m23 * tz + view.m24;\n  z1 = view.m31 * tx + view.m32 * ty + view.m33 * tz + view.m34;\n  s1 = view.m41 * tx + view.m42 * ty + view.m43 * tz + view.m44;\n  this$static.x1 /= s1;\n  this$static.y1 /= s1;\n  z1 /= s1;\n  this$static.depth = z1;\n  this$static.text_0 = l_0.text_0;\n  this$static.istext = true;\n}\n\nfunction $createProjectedTriangle(this$static, view, t, frame_0){\n  var s1, s2, s3, tx1, tx2, tx3, ty1, ty2, ty3, tz1, tz2, tz3, z1, z2, z3;\n  tx1 = t.x1;\n  tx2 = t.x2;\n  tx3 = t.x3;\n  ty1 = t.y1;\n  ty2 = t.y2;\n  ty3 = t.y3;\n  tz1 = t.z1;\n  tz2 = t.z2;\n  tz3 = t.z3;\n  this$static.height_0 = (t.z1 + t.z2 + t.z3) / 3;\n  this$static.outline = frame_0;\n  this$static.x1 = view.m11 * tx1 + view.m12 * ty1 + view.m13 * tz1 + view.m14;\n  this$static.y1 = view.m21 * tx1 + view.m22 * ty1 + view.m23 * tz1 + view.m24;\n  z1 = view.m31 * tx1 + view.m32 * ty1 + view.m33 * tz1 + view.m34;\n  s1 = view.m41 * tx1 + view.m42 * ty1 + view.m43 * tz1 + view.m44;\n  this$static.x2 = view.m11 * tx2 + view.m12 * ty2 + view.m13 * tz2 + view.m14;\n  this$static.y2 = view.m21 * tx2 + view.m22 * ty2 + view.m23 * tz2 + view.m24;\n  z2 = view.m31 * tx2 + view.m32 * ty2 + view.m33 * tz2 + view.m34;\n  s2 = view.m41 * tx2 + view.m42 * ty2 + view.m43 * tz2 + view.m44;\n  this$static.x3 = view.m11 * tx3 + view.m12 * ty3 + view.m13 * tz3 + view.m14;\n  this$static.y3 = view.m21 * tx3 + view.m22 * ty3 + view.m23 * tz3 + view.m24;\n  z3 = view.m31 * tx3 + view.m32 * ty3 + view.m33 * tz3 + view.m34;\n  s3 = view.m41 * tx3 + view.m42 * ty3 + view.m43 * tz3 + view.m44;\n  this$static.x1 /= s1;\n  this$static.y1 /= s1;\n  z1 /= s1;\n  this$static.x2 /= s2;\n  this$static.y2 /= s2;\n  z2 /= s2;\n  this$static.x3 /= s3;\n  this$static.y3 /= s3;\n  z3 /= s3;\n  this$static.depth = (z1 + z2 + z3) / 3;\n  this$static.istext = false;\n}\n\nfunction $draw(this$static, ctx, cm, out){\n  if (this$static.istext) {\n    $setFillStyleWeb(ctx, out.color_0);\n    $fillText(ctx, this$static.text_0, this$static.x1, this$static.y1);\n  }\n   else {\n    $beginPath(ctx);\n    $setFillStyleWeb(ctx, $toColor(cm, this$static.height_0).color_0);\n    this$static.outline && !!out && $setStrokeStyleWeb(ctx, out.color_0);\n    $moveTo(ctx, this$static.x1, this$static.y1);\n    $lineTo(ctx, this$static.x2, this$static.y2);\n    $lineTo(ctx, this$static.x3, this$static.y3);\n    $closePath(ctx);\n    this$static.outline && !!out && $stroke(ctx);\n    $fill(ctx);\n  }\n}\n\nfunction $updateBounds(this$static, bounds){\n  if (!this$static.istext) {\n    bounds[0] = this$static.x1 < bounds[0]?this$static.x1:bounds[0];\n    bounds[0] = this$static.x2 < bounds[0]?this$static.x2:bounds[0];\n    bounds[0] = this$static.x3 < bounds[0]?this$static.x3:bounds[0];\n    bounds[1] = this$static.y1 < bounds[1]?this$static.y1:bounds[1];\n    bounds[1] = this$static.y2 < bounds[1]?this$static.y2:bounds[1];\n    bounds[1] = this$static.y3 < bounds[1]?this$static.y3:bounds[1];\n    bounds[2] = this$static.x1 > bounds[2]?this$static.x1:bounds[2];\n    bounds[2] = this$static.x2 > bounds[2]?this$static.x2:bounds[2];\n    bounds[2] = this$static.x3 > bounds[2]?this$static.x3:bounds[2];\n    bounds[3] = this$static.y1 > bounds[3]?this$static.y1:bounds[3];\n    bounds[3] = this$static.y2 > bounds[3]?this$static.y2:bounds[3];\n    bounds[3] = this$static.y3 > bounds[3]?this$static.y3:bounds[3];\n  }\n}\n\nfunction ZBufferEntry_0(){\n}\n\ndefineSeed(551, 1, makeCastMap([Q$Comparable, Q$ZBufferEntry]), ZBufferEntry_0);\n_.compareTo$ = function compareTo_6(t){\n  return this.depth - t.depth;\n}\n;\n_.depth = 0;\n_.height_0 = 0;\n_.istext = false;\n_.outline = false;\n_.x1 = 0;\n_.x2 = 0;\n_.x3 = 0;\n_.y1 = 0;\n_.y2 = 0;\n_.y3 = 0;\nfunction $startAnimation_1(this$static){\n  if (!this$static.running) {\n    this$static.running = true;\n    $schedule(this$static, 1000);\n  }\n}\n\nfunction Animation_3(p){\n  this.parent_0 = p;\n  this.running = false;\n}\n\ndefineSeed(552, 10, {}, Animation_3);\n_.run = function run_6(){\n  this.running && $setDataSet_1(this.parent_0, $getNextSet_0(this.parent_0.current_range, this.parent_0.current_time));\n}\n;\n_.running = false;\nfunction $render_2(this$static, ctx, width_0, height, deltax){\n  var ch_0, count, cw, digits, i, max_0, min_0, scale, v, y_0;\n  min_0 = 0;\n  max_0 = 1;\n  count = 1;\n  if (this$static.fillmap) {\n    min_0 = this$static.fillmap.min_0;\n    max_0 = this$static.fillmap.max_0;\n  }\n  scale = max_0 - min_0;\n  if (scale > 0) {\n    digits = round_int(floor_0(log10(max_0 - min_0) - 0.5));\n    scale = pow_0(10, digits);\n    scale > 0.5 && (scale = toDouble(fromDouble(round0(scale))));\n    scale <= 0 && (scale = 1);\n    max_0 = scale * Math.ceil(max_0 / scale);\n    min_0 = scale * Math.floor(min_0 / scale);\n    count = round_int(Math.ceil((max_0 - min_0) / scale));\n    count <= 0 && (count = 1);\n  }\n   else {\n    scale = 1;\n  }\n  ch_0 = round_int(Math.floor(~~((height - 10) / count)));\n  cw = ~~((width_0 - 20) / 2);\n  if (!!this$static.fillmap && ch_0 > 3 && cw > 3) {\n    for (i = 0; i < count; i++) {\n      y_0 = height - 6 - (i + 1) * ch_0;\n      v = scale * toDouble(fromDouble(Math.round(min_0 / scale + i)));\n      if (y_0 >= 0) {\n        if (this$static.fillmap) {\n          $setFillStyleWeb(ctx, $toColor(this$static.fillmap, v).color_0);\n          $fillRect(ctx, deltax, y_0, cw, ch_0);\n        }\n        $beginPath(ctx);\n        $setStrokeStyleWeb(ctx, this$static.frame_0.color_0);\n        $rect(ctx, deltax, y_0, cw, ch_0);\n        $stroke(ctx);\n        $closePath(ctx);\n      }\n      $setFillStyleWeb(ctx, this$static.foreground.color_0);\n      $fillText(ctx, $format_0(this$static.format, v), deltax + cw + 5, y_0 + ch_0 - 3);\n    }\n  }\n}\n\nfunction $setOutlineColormap(this$static, m_0){\n  this$static.fillmap = m_0;\n}\n\nfunction ColorLabelPanel_0(){\n  this.fillmap = new ColorLabelPanel$1_0;\n  this.frame_0 = new Color_0(0, 0, 0);\n  this.foreground = new Color_0(0, 0, 0);\n  this.format = ($clinit_NumberFormat() , new NumberFormat_1('##.##', $getDefaultNative()));\n}\n\ndefineSeed(553, 1, {}, ColorLabelPanel_0);\nfunction ColorLabelPanel$1_0(){\n  Colormap_0.call(this);\n}\n\ndefineSeed(554, 544, {}, ColorLabelPanel$1_0);\n_.computeColor = function computeColor(height){\n  return new Color_0(128, 128, 128);\n}\n;\nfunction DefaultMap_0(){\n  Colormap_0.call(this);\n}\n\ndefineSeed(555, 544, {}, DefaultMap_0);\n_.computeColor = function computeColor_0(height){\n  var b, f, g, hi, q, r, t;\n  hi = round_int(height * 6);\n  f = 6 * height - hi;\n  q = 0.5 * (1 - 0.5 * f);\n  t = 0.5 * (1 - 0.5 * (1 - f));\n  switch (hi) {\n    default:r = 0.5;\n      g = t;\n      b = 0.25;\n      break;\n    case 1:\n      r = q;\n      g = 0.5;\n      b = 0.25;\n      break;\n    case 2:\n      r = 0.25;\n      g = 0.5;\n      b = t;\n      break;\n    case 3:\n      r = 0.25;\n      g = q;\n      b = 0.5;\n      break;\n    case 4:\n      r = t;\n      g = 0.25;\n      b = 0.5;\n      break;\n    case 5:\n      r = 0.5;\n      g = 0.25;\n      b = q;\n  }\n  return new Color_0(round_int(r * 255), round_int(g * 255), round_int(b * 255));\n}\n;\nfunction $onResize_3(this$static){\n  this$static.resize_0 = true;\n  $paint_1(this$static);\n}\n\nfunction $paint_1(this$static){\n  var ctx;\n  if (this$static.resize_0) {\n    this$static.width_0 = $getElement(this$static.canvas).clientWidth | 0;\n    this$static.height_0 = $getElement(this$static.canvas).clientHeight | 0;\n    if (this$static.width_0 > 0 && this$static.height_0 > 0 && !!this$static.data_0) {\n      $setCoordinateSpaceWidth(this$static.canvas, this$static.width_0);\n      $setCoordinateSpaceHeight(this$static.canvas, this$static.height_0);\n      if (this$static.colors) {\n        this$static.lwidth = 64;\n        this$static.width_0 < 256 && (this$static.lwidth = ~~(this$static.width_0 / 8));\n      }\n       else {\n        this$static.lwidth = 0;\n      }\n      $fitInto_0(this$static.scene, this$static.width_0 - this$static.lwidth, this$static.height_0, this$static.data_0);\n      this$static.resize_0 = false;\n    }\n  }\n  if (this$static.width_0 > 0 && this$static.height_0 > 0 && !!this$static.data_0) {\n    ctx = $getElement(this$static.canvas).getContext('2d');\n    $setFillStyleWeb(ctx, 'White');\n    $fillRect(ctx, 0, 0, this$static.width_0, this$static.height_0);\n    !!this$static.colors && this$static.lwidth > 8 && $render_2(this$static.colors, ctx, this$static.lwidth - 4, this$static.height_0, this$static.width_0 - this$static.lwidth + 4);\n    $save(ctx);\n    $beginPath(ctx);\n    $setStrokeStyleWeb(ctx, 'White');\n    $setGlobalAlpha(ctx, 0);\n    $rect(ctx, 0, 0, this$static.width_0 - this$static.lwidth, this$static.height_0);\n    $stroke(ctx);\n    $closePath(ctx);\n    $clip(ctx);\n    $setGlobalAlpha(ctx, 1);\n    $render_1(this$static.scene, ctx);\n    $restore(ctx);\n  }\n}\n\nfunction $setDataSet_0(this$static, data_0){\n  $setDataSet(this$static.scene, data_0);\n  $paint_1(this$static);\n}\n\nfunction $setDataSetRange_0(this$static, data_0){\n  this$static.resize_0 = true;\n  this$static.data_0 = data_0;\n  $setOutlineColormap(this$static.colors, data_0.cmap);\n  $setDataSetRange(this$static.scene, data_0);\n  $paint_1(this$static);\n}\n\nfunction InteractivePanel_0(c, triangles, boxing){\n  this.canvas = c;\n  this.data_0 = triangles;\n  this.scene = new Scene_0(triangles, boxing);\n  this.resize_0 = true;\n  this.colors = new ColorLabelPanel_0;\n  $setOutlineColormap(this.colors, triangles.cmap);\n  $addDomHandler(c, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_2));\n  $addDomHandler(c, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_6));\n  $addDomHandler(c, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_3));\n  $addDomHandler(c, this, ($clinit_MouseWheelEvent() , $clinit_MouseWheelEvent() , TYPE_7));\n}\n\ndefineSeed(556, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$MouseWheelHandler, Q$EventHandler]), InteractivePanel_0);\n_.execute = function execute_19(timestamp){\n  $paint_1(this);\n}\n;\n_.onMouseDown = function onMouseDown_2(event_0){\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons = $eventGetButton(event_0.nativeEvent);\n  this.sx = $getX(event_0);\n  this.sy = $getY(event_0);\n}\n;\n_.onMouseMove = function onMouseMove_2(event_0){\n  var mxfrac, myfrac, nx, ny, xrot, yrot;\n  nx = $getX(event_0);\n  ny = $getY(event_0);\n  $eventPreventDefault(event_0.nativeEvent);\n  if (nx != this.sx || ny != this.sy) {\n    if ((this.buttons & 2) != 0) {\n      $shift_1(this.scene, nx - this.sx, ny - this.sy);\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n     else if ((this.buttons & 1) != 0 && this.width_0 > 0 && this.height_0 > 0) {\n      mxfrac = 3.141592653589793 * (nx - this.sx) / this.width_0;\n      myfrac = 3.141592653589793 * (ny - this.sy) / this.height_0;\n      xrot = rotY(-mxfrac);\n      yrot = rotX(-myfrac);\n      $rotateView(this.scene, multiply(yrot, xrot));\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n    this.sx = nx;\n    this.sy = ny;\n  }\n}\n;\n_.onMouseUp = function onMouseUp_2(event_0){\n  var up;\n  up = $eventGetButton(event_0.nativeEvent);\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons &= ~up;\n}\n;\n_.onMouseWheel = function onMouseWheel_1(event_0){\n  var notches;\n  $eventPreventDefault(event_0.nativeEvent);\n  notches = getNotches(event_0.nativeEvent);\n  if (notches > 0) {\n    while (notches > 0) {\n      $scale_1(this.scene, 1.1);\n      --notches;\n    }\n  }\n   else {\n    while (notches < 0) {\n      $scale_1(this.scene, 0.9090909090909091);\n      ++notches;\n    }\n  }\n  $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n}\n;\n_.buttons = 0;\n_.height_0 = 0;\n_.lwidth = 0;\n_.resize_0 = false;\n_.sx = 0;\n_.sy = 0;\n_.width_0 = 0;\nfunction RGBInterpolatingMap_0(start_0, end){\n  Colormap_0.call(this);\n  this.r1 = start_0.r;\n  this.g1 = start_0.g;\n  this.b1 = start_0.b;\n  this.r2 = end.r;\n  this.g2 = end.g;\n  this.b2 = end.b;\n}\n\ndefineSeed(557, 544, {}, RGBInterpolatingMap_0);\n_.computeColor = function computeColor_1(height){\n  return new Color_0(round_int(this.r1 * (1 - height) + this.r2 * height), round_int(this.g1 * (1 - height) + this.g2 * height), round_int(this.b1 * (1 - height) + this.b2 * height));\n}\n;\n_.b1 = 0;\n_.b2 = 0;\n_.g1 = 0;\n_.g2 = 0;\n_.r1 = 0;\n_.r2 = 0;\nfunction $createControlPanel(this$static, triangles){\n  var count, r, r$iterator, showtimer;\n  showtimer = false;\n  count = 0;\n  this$static.vpanel = new VerticalPanel_0;\n  $setWidth_0(this$static.vpanel, '100%');\n  $setHeight_0(this$static.vpanel, '100%');\n  $setPropertyImpl($getElement(this$static.vpanel).style, 'backgroundColor', 'LightGray');\n  $add_2(this$static.vpanel, this$static.canvas);\n  this$static.labelbox = new ListBox_0;\n  for (r$iterator = new AbstractList$IteratorImpl_0(triangles); r$iterator.i < r$iterator.this$0_0.size_1();) {\n    r = dynamicCast($next_3(r$iterator), Q$DataSetRange);\n    $addItem(this$static.labelbox, r.label_0);\n    r.data_0.size_0 > 1 && (showtimer = true);\n    ++count;\n  }\n  $setVisibleItemCount(this$static.labelbox, 1);\n  $addDomHandler(this$static.labelbox, this$static, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  $add_2(this$static.vpanel, this$static.labelbox);\n  this$static.current_time = $getFirstSet_0(this$static.current_range).time;\n  if (showtimer) {\n    this$static.timebox = new TimeControl_0(this$static.current_time);\n    $add_2(this$static.vpanel, this$static.timebox);\n    $addActionListener_6(this$static.timebox, this$static);\n  }\n   else {\n    this$static.timebox = null;\n  }\n}\n\nfunction $setDataSet_1(this$static, dt){\n  if (dt) {\n    $setDataSet_0(this$static.scene, dt);\n    this$static.current_time = dt.time;\n    $setTime(this$static.timebox, this$static.current_time);\n  }\n}\n\nfunction RenderFrame_0(c, triangles, boxing){\n  this.data_0 = triangles;\n  this.canvas = c;\n  this.current_range = (checkIndex(0, triangles.size_0) , dynamicCast(triangles.array[0], Q$DataSetRange));\n  this.scene = new InteractivePanel_0(c, this.current_range, boxing);\n  this.animation = new Animation_3(this);\n  $createControlPanel(this, triangles);\n}\n\ndefineSeed(558, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler, Q$ActionListener]), RenderFrame_0);\n_.actionPerformed = function actionPerformed_10(e){\n  if ($equals('play', e.command)) {\n    this.animation.running?(this.animation.running = false):$startAnimation_1(this.animation);\n  }\n   else {\n    this.animation.running = false;\n    $equals('first', e.command)?$setDataSet_1(this, $getFirstSet_0(this.current_range)):$equals('prev', e.command)?$setDataSet_1(this, $getPrevSet_0(this.current_range, this.current_time)):$equals('next', e.command)?$setDataSet_1(this, $getNextSet_0(this.current_range, this.current_time)):$equals('last', e.command) && $setDataSet_1(this, $getLastSet_0(this.current_range));\n  }\n}\n;\n_.getGUI = function getGUI_1(){\n  return this.vpanel;\n}\n;\n_.getLegendWidth = function getLegendWidth_1(){\n  return 0;\n}\n;\n_.getMinimumRequiredHeight = function getMinimumRequiredHeight_1(){\n  var h_0, height;\n  if (this.vpanel) {\n    height = 0;\n    if (this.labelbox) {\n      h_0 = $getElement(this.labelbox).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    if (this.timebox) {\n      h_0 = $getElement(this.timebox).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    return height;\n  }\n  return -1;\n}\n;\n_.onChange = function onChange_3(ch_0){\n  var dat, idx, newlbl, newrange;\n  idx = $getElement(this.labelbox).selectedIndex;\n  newlbl = dynamicCast($get_5(this.data_0, idx), Q$DataSetRange).label_0;\n  newrange = findRange(this.data_0, newlbl);\n  if (newrange) {\n    dat = $findAtTime(newrange, this.current_time);\n    if (dat) {\n      this.current_range = newrange;\n      $setDataSetRange_0(this.scene, newrange);\n      $setDataSet_0(this.scene, dat);\n    }\n  }\n}\n;\n_.onResize_1 = function onResize_11(){\n  $onResize_3(this.scene);\n}\n;\n_.paintLegend = function paintLegend_1(g){\n}\n;\n_.paintPlot = function paintPlot_1(c){\n  $paint_1(this.scene);\n}\n;\n_.current_time = 0;\nfunction $addActionListener_6(this$static, al){\n  $addActionListener(this$static.listeners, al);\n}\n\nfunction $setTime(this$static, t){\n  $setHTML_0(this$static.time, $__0(this$static.locale, 'TimeControl.time', '' + t));\n}\n\nfunction TimeControl_0(t){\n  var hpanel;\n  this.listeners = new ActionEventSource_0;\n  this.locale = new Locale_0;\n  hpanel = new HorizontalPanel_0;\n  ($clinit_DOM() , hpanel.element_0).style['width'] = '100%';\n  hpanel.element_0.style['height'] = '100%';\n  hpanel.element_0.style['backgroundColor'] = 'LightGray';\n  this.first = new Button_2($_(this.locale, 'TimeControl.first'), -2, 'first');\n  $addActionListener_0(this.first, this);\n  $setWidth_0(this.first, '3em');\n  $setHeight_0(this.first, '2em');\n  $add_1(hpanel, this.first);\n  this.prev = new Button_2($_(this.locale, 'TimeControl.prev'), -1, 'prev');\n  $addActionListener_0(this.prev, this);\n  $setWidth_0(this.prev, '3em');\n  $setHeight_0(this.prev, '2em');\n  $add_1(hpanel, this.prev);\n  this.play = new Button_2($_(this.locale, 'TimeControl.play'), 0, 'play');\n  $addActionListener_0(this.play, this);\n  $setWidth_0(this.play, '3em');\n  $setHeight_0(this.play, '2em');\n  $add_1(hpanel, this.play);\n  this.next = new Button_2($_(this.locale, 'TimeControl.next'), 1, 'next');\n  $addActionListener_0(this.next, this);\n  $setWidth_0(this.next, '3em');\n  $setHeight_0(this.next, '2em');\n  $add_1(hpanel, this.next);\n  this.last = new Button_2($_(this.locale, 'TimeControl.last'), 2, 'last');\n  $addActionListener_0(this.last, this);\n  $setWidth_0(this.last, '3em');\n  $setHeight_0(this.last, '2em');\n  $add_1(hpanel, this.last);\n  this.time = new HTML_1($__0(this.locale, 'TimeControl.time', '' + t));\n  $setHeight_0(this.time, '2em');\n  $add_1(hpanel, this.time);\n  $initWidget(this, this.time);\n}\n\ndefineSeed(559, 336, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ActionListener]), TimeControl_0);\n_.actionPerformed = function actionPerformed_11(ev){\n  var fwd;\n  fwd = new ActionEvent_0(this, ev.id_0, ev.command);\n  $triggerActionEvent(this.listeners, fwd);\n}\n;\nfunction $parseFile_0(this$static, reader){\n  var args, b, blank, d, data_0, dx, dy, g, height, idx, label_0, map_0, max_0, min_0, r, raw, s, time, v, width_0, x_0, x1, x2, xmax, xmin, xscale, y_0, y1, y2, ymax, ymin, yscale, z_0, zscale;\n  width_0 = 0;\n  height = 0;\n  x_0 = 0;\n  y_0 = 0;\n  xmin = 0;\n  ymin = 0;\n  xmax = 0;\n  ymax = 0;\n  xscale = 1;\n  yscale = 1;\n  zscale = 1;\n  min_0 = null;\n  max_0 = null;\n  data_0 = new ArrayList_0;\n  d = null;\n  label_0 = null;\n  time = 0;\n  this$static.coordinate_type = 3;\n  do {\n    s = $readLine(reader);\n    if (s != null && !$equals(s, '\\n') && s.indexOf('##') != 0) {\n      if (s.indexOf('#') == 0) {\n        s = $trim($substring(s, 1));\n        blank = s.indexOf(' ');\n        if (blank >= 0) {\n          raw = $trim($substring(s, blank + 1));\n          args = $split(raw, '\\\\s', 0);\n          s = $substring_0(s, 0, blank);\n        }\n         else {\n          raw = '';\n          args = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0);\n        }\n        d = null;\n        x_0 = 0;\n        y_0 = 0;\n        if ($equalsIgnoreCase(s, 'x-range')) {\n          xmin = __parseAndValidateDouble(args[0]);\n          xmax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-range')) {\n          ymin = __parseAndValidateDouble(args[0]);\n          ymax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'x-count')) {\n          width_0 = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-count')) {\n          height = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'min-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          min_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'max-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          max_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'scale')) {\n          xscale = __parseAndValidateDouble(args[0]);\n          yscale = __parseAndValidateDouble(args[1]);\n          zscale = __parseAndValidateDouble(args[2]);\n        }\n         else if ($equalsIgnoreCase(s, 'time')) {\n          time = __parseAndValidateDouble(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'label')) {\n          label_0 = raw;\n        }\n         else if ($equalsIgnoreCase(s, 'frametype')) {\n          if ($equals('tripod', args[0])) {\n            this$static.coordinate_type = 1;\n          }\n           else if ($equals('none', args[0])) {\n            this$static.coordinate_type = 0;\n          }\n           else if ($equals('boxed', args[0])) {\n            this$static.coordinate_type = 2;\n          }\n           else if ($equals('zofxy', args[0])) {\n            this$static.coordinate_type = 3;\n          }\n           else \n            throw new IOException_0('Invalid frame type ' + args[0] + 'requested for plotting data');\n        }\n      }\n       else {\n        v = $split(s, '\\\\s', 0);\n        if (width_0 <= 1 || height <= 1)\n          throw new IOException_0('invalid input format, width and height of the array are missing');\n        if (xmax <= xmin || ymax <= ymin)\n          throw new IOException_0('invalid input format, plot range is zero or negative');\n        if (!d) {\n          !!min_0 && !!max_0?(map_0 = new RGBInterpolatingMap_0(min_0, max_0)):(map_0 = new DefaultMap_0);\n          d = new DataSet_2(label_0, time, map_0);\n          setCheck(data_0.array, data_0.size_0++, d);\n        }\n        for (idx = 0; idx < v.length; idx++) {\n          dx = (xmax - xmin) / width_0;\n          dy = (ymax - ymin) / height;\n          z_0 = __parseAndValidateDouble(v[idx]);\n          x1 = x_0 * dx + xmin - 0.5 * dx;\n          x2 = x1 + dx;\n          y1 = y_0 * dy + ymin - 0.5 * dy;\n          y2 = y1 + dy;\n          x1 *= xscale;\n          x2 *= xscale;\n          y1 *= yscale;\n          y2 *= yscale;\n          z_0 *= zscale;\n          $add_8(d, new Triangle_0(x1, y1, z_0, x2, y1, z_0, x1, y2, z_0));\n          $add_8(d, new Triangle_0(x2, y2, z_0, x2, y1, z_0, x1, y2, z_0));\n          ++x_0;\n          if (x_0 >= width_0) {\n            x_0 = 0;\n            ++y_0;\n          }\n        }\n      }\n    }\n  }\n   while (s != null);\n  return splitIntoDataSets(data_0);\n}\n\nfunction BoxTriangleScanner_0(){\n}\n\ndefineSeed(560, 1, {}, BoxTriangleScanner_0);\n_.coordinate_type = 0;\nfunction $add_8(this$static, t){\n  $add_5(this$static.triangles, t);\n}\n\nfunction DataSet_2(l_0, t, m_0){\n  this.triangles = new ArrayList_0;\n  this.label_0 = l_0;\n  this.time = t;\n  this.cmap = m_0;\n}\n\ndefineSeed(561, 1, makeCastMap([Q$DataSet_0]), DataSet_2);\n_.time = 0;\nfunction $convertToDataSet(z_0, width_0, height, label_0, time, xmin, ymin, xmax, ymax, min_0, max_0, xscale, yscale){\n  var d, dx, dy, map_0, x_0, x1, x2, y_0, y1, y2;\n  !!min_0 && !!max_0?(map_0 = new RGBInterpolatingMap_0(min_0, max_0)):(map_0 = new DefaultMap_0);\n  d = new DataSet_2(label_0, time, map_0);\n  for (y_0 = 0; y_0 < height - 1; y_0++) {\n    for (x_0 = 0; x_0 < width_0 - 1; x_0++) {\n      dx = (xmax - xmin) / width_0;\n      dy = (ymax - ymin) / height;\n      x1 = x_0 * dx + xmin;\n      x2 = x1 + dx;\n      y1 = y_0 * dy + ymin;\n      y2 = y1 + dy;\n      x1 *= xscale;\n      x2 *= xscale;\n      y1 *= yscale;\n      y2 *= yscale;\n      $add_8(d, new Triangle_0(x1, y1, z_0[x_0][y_0], x2, y1, z_0[x_0 + 1][y_0], x1, y2, z_0[x_0][y_0 + 1]));\n      $add_8(d, new Triangle_0(x2, y2, z_0[x_0 + 1][y_0 + 1], x2, y1, z_0[x_0 + 1][y_0], x1, y2, z_0[x_0][y_0 + 1]));\n    }\n  }\n  return d;\n}\n\nfunction $parseFile_1(this$static, reader){\n  var args, b, blank, data_0, g, height, idx, label_0, max_0, min_0, r, raw, s, time, v, width_0, x_0, xmax, xmin, xscale, y_0, ymax, ymin, yscale, z_0, zscale;\n  width_0 = 0;\n  height = 0;\n  x_0 = 0;\n  y_0 = 0;\n  xmin = 0;\n  ymin = 0;\n  xmax = 0;\n  ymax = 0;\n  xscale = 1;\n  yscale = 1;\n  zscale = 1;\n  min_0 = null;\n  max_0 = null;\n  new ArrayList_0;\n  z_0 = null;\n  label_0 = null;\n  time = 0;\n  data_0 = new ArrayList_0;\n  this$static.coordinate_type = 3;\n  do {\n    s = $readLine(reader);\n    if (s != null && !$equals(s, '\\n') && s.indexOf('##') != 0) {\n      if (s.indexOf('#') == 0) {\n        s = $trim($substring(s, 1));\n        blank = s.indexOf(' ');\n        if (blank >= 0) {\n          raw = $trim($substring(s, blank + 1));\n          args = $split(raw, '\\\\s', 0);\n          s = $substring_0(s, 0, blank);\n        }\n         else {\n          raw = '';\n          args = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0);\n        }\n        z_0 != null && $add_5(data_0, $convertToDataSet(z_0, width_0, height, label_0, time, xmin, ymin, xmax, ymax, min_0, max_0, xscale, yscale));\n        z_0 = null;\n        x_0 = 0;\n        y_0 = 0;\n        if ($equalsIgnoreCase(s, 'x-range')) {\n          xmin = __parseAndValidateDouble(args[0]);\n          xmax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-range')) {\n          ymin = __parseAndValidateDouble(args[0]);\n          ymax = __parseAndValidateDouble(args[1]);\n        }\n         else if ($equalsIgnoreCase(s, 'x-count')) {\n          width_0 = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'y-count')) {\n          height = __parseAndValidateInt(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'min-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          min_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'max-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          max_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'scale')) {\n          xscale = __parseAndValidateDouble(args[0]);\n          yscale = __parseAndValidateDouble(args[1]);\n          zscale = __parseAndValidateDouble(args[2]);\n        }\n         else if ($equalsIgnoreCase(s, 'time')) {\n          time = __parseAndValidateDouble(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'label')) {\n          label_0 = raw;\n        }\n         else if ($equalsIgnoreCase(s, 'frametype')) {\n          if ($equals('tripod', args[0])) {\n            this$static.coordinate_type = 1;\n          }\n           else if ($equals('none', args[0])) {\n            this$static.coordinate_type = 0;\n          }\n           else if ($equals('boxed', args[0])) {\n            this$static.coordinate_type = 2;\n          }\n           else if ($equals('zofxy', args[0])) {\n            this$static.coordinate_type = 3;\n          }\n           else \n            throw new IOException_0('Invalid frame type ' + args[0] + 'requested for plotting data');\n        }\n      }\n       else {\n        v = $split(s, '\\\\s', 0);\n        if (width_0 <= 1 || height <= 1)\n          throw new IOException_0('invalid input format, width and height of the array are missing');\n        if (xmax <= xmin || ymax <= ymin)\n          throw new IOException_0('invalid input format, plot range is zero or negative');\n        z_0 == null && (z_0 = initDims([_3_3D_classLit, _3D_classLit], [makeCastMap([Q$Serializable, Q$Object_$1]), makeCastMap([Q$double_$1, Q$Serializable])], [Q$double_$1, -1], [width_0, height], 2, 1));\n        for (idx = 0; idx < v.length; idx++) {\n          z_0[x_0][y_0] = __parseAndValidateDouble(v[idx]) * zscale;\n          ++x_0;\n          if (x_0 >= width_0) {\n            x_0 = 0;\n            ++y_0;\n          }\n        }\n      }\n    }\n  }\n   while (s != null);\n  z_0 != null && $add_5(data_0, $convertToDataSet(z_0, width_0, height, label_0, time, xmin, ymin, xmax, ymax, min_0, max_0, xscale, yscale));\n  return splitIntoDataSets(data_0);\n}\n\nfunction InterpolatedTriangleScanner_0(){\n}\n\ndefineSeed(562, 1, {}, InterpolatedTriangleScanner_0);\n_.coordinate_type = 0;\nfunction $parseFile_2(this$static, reader){\n  var args, b, blank, d, data_0, g, label_0, map_0, max_0, min_0, r, raw, s, time, v, x1, x2, x3, xscale, y1, y2, y3, yscale, z1, z2, z3, zscale;\n  data_0 = new ArrayList_0;\n  label_0 = null;\n  d = null;\n  min_0 = null;\n  max_0 = null;\n  xscale = 1;\n  yscale = 1;\n  zscale = 1;\n  time = 0;\n  this$static.coordinate_type = 1;\n  do {\n    s = $readLine(reader);\n    if (s != null && !$equals(s, '\\n') && s.indexOf('##') != 0) {\n      if (s.indexOf('#') == 0) {\n        s = $trim($substring(s, 1));\n        blank = s.indexOf(' ');\n        if (blank >= 0) {\n          raw = $trim($substring(s, blank + 1));\n          args = $split(raw, '\\\\s', 0);\n          s = $substring_0(s, 0, blank);\n        }\n         else {\n          args = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0);\n          raw = '';\n        }\n        d = null;\n        if ($equalsIgnoreCase(s, 'min-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          min_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'max-color')) {\n          r = __parseAndValidateInt(args[0]);\n          g = __parseAndValidateInt(args[1]);\n          b = __parseAndValidateInt(args[2]);\n          max_0 = new Color_0(r, g, b);\n        }\n         else if ($equalsIgnoreCase(s, 'scale')) {\n          xscale = __parseAndValidateDouble(args[0]);\n          yscale = __parseAndValidateDouble(args[1]);\n          zscale = __parseAndValidateDouble(args[2]);\n        }\n         else if ($equalsIgnoreCase(s, 'time')) {\n          time = __parseAndValidateDouble(args[0]);\n        }\n         else if ($equalsIgnoreCase(s, 'label')) {\n          label_0 = raw;\n        }\n         else if ($equalsIgnoreCase(s, 'frametype')) {\n          if ($equals('tripod', args[0])) {\n            this$static.coordinate_type = 1;\n          }\n           else if ($equals('none', args[0])) {\n            this$static.coordinate_type = 0;\n          }\n           else if ($equals('boxed', args[0])) {\n            this$static.coordinate_type = 2;\n          }\n           else if ($equals('zofxy', args[0])) {\n            this$static.coordinate_type = 3;\n          }\n           else \n            throw new IOException_0('Invalid frame type ' + args[0] + 'requested for plotting data');\n        }\n      }\n       else if (!$equals('', s)) {\n        v = $split(s, '\\\\s', 0);\n        if (v.length != 9)\n          throw new IOException_0('Detected invalid line ' + s + ' in the input file, requires exactly nine doubles');\n        if (!d) {\n          !!min_0 && !!max_0?(map_0 = new RGBInterpolatingMap_0(min_0, max_0)):(map_0 = new DefaultMap_0);\n          d = new DataSet_2(label_0, time, map_0);\n          setCheck(data_0.array, data_0.size_0++, d);\n        }\n        x1 = __parseAndValidateDouble(v[0]) * xscale;\n        y1 = __parseAndValidateDouble(v[1]) * yscale;\n        z1 = __parseAndValidateDouble(v[2]) * zscale;\n        x2 = __parseAndValidateDouble(v[3]) * xscale;\n        y2 = __parseAndValidateDouble(v[4]) * yscale;\n        z2 = __parseAndValidateDouble(v[5]) * zscale;\n        x3 = __parseAndValidateDouble(v[6]) * xscale;\n        y3 = __parseAndValidateDouble(v[7]) * yscale;\n        z3 = __parseAndValidateDouble(v[8]) * zscale;\n        $add_8(d, new Triangle_0(x1, y1, z1, x2, y2, z2, x3, y3, z3));\n      }\n    }\n  }\n   while (s != null);\n  return splitIntoDataSets(data_0);\n}\n\nfunction TriangleScanner_0(){\n}\n\ndefineSeed(563, 1, {}, TriangleScanner_0);\n_.coordinate_type = 0;\nfunction isSupported_0(){\n  if (window.File && window.FileReader && window.FileList && window.Blob) {\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n\nfunction loadFile(al, up, upload){\n  var zipFileToLoad = up.files[0];\n  var trigger = $entry(triggerEvent);\n  var fileReader = new FileReader;\n  var object = upload;\n  fileReader.onloadend = function(fileLoadedEvent){\n    var array = fileLoadedEvent.target.result;\n    trigger(al, array, object);\n  }\n  ;\n  fileReader.readAsDataURL(zipFileToLoad);\n}\n\nfunction loadFile_0(al, upload){\n  loadFile(al, ($clinit_DOM() , upload.element_0), upload);\n}\n\nfunction triggerEvent(al, cmd, trigger){\n  var ae;\n  ae = new ActionEvent_0(trigger, 0, cmd);\n  al.actionPerformed(ae);\n}\n\nfunction $saveURLAsInternal(this$static, dataurl, filename){\n  var a = this$static.link_0;\n  a.href = dataurl;\n  a.download = filename;\n  a.click();\n  window.URL.revokeObjectURL(dataurl);\n}\n\nfunction FileSaver_0(){\n  this.link_0 = document.createElement('a');\n  document.body.appendChild(this.link_0);\n  this.link_0.style = 'display: none';\n}\n\nfunction isBlobSupported(){\n  if (navigator.msSaveBlob || window.saveAs)\n    return true;\n  return false;\n}\n\nfunction isSupported_1(){\n  if (window.ActiveXObject)\n    return false;\n  if (window.chrome)\n    return true;\n  if (navigator.userAgent.toLowerCase().indexOf('safari') > -1)\n    return true;\n  if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)\n    return true;\n  return false;\n}\n\nfunction saveURLAs(dataurl, filename){\n  if (isSupported_1()) {\n    !instance_2 && (instance_2 = new FileSaver_0);\n    $saveURLAsInternal(instance_2, dataurl, filename);\n  }\n   else {\n    $wnd.open(dataurl, '_self', '');\n  }\n}\n\ndefineSeed(565, 1, {}, FileSaver_0);\nvar instance_2;\nfunction $createNewJsZip(this$static){\n  this$static.jszip = new $wnd.JSZip;\n}\n\nfunction $internalFile(this$static, name_0, content_0){\n  return this$static.jszip.file(name_0, content_0);\n}\n\nfunction $internalGenerate(this$static){\n  return this$static.jszip.generate({type:'base64'});\n}\n\nfunction $openFile(this$static, name_0){\n  var js;\n  js = this$static.jszip.file(name_0);\n  return js?new ZIPObject_0(js):null;\n}\n\nfunction UnzipContent(zipped){\n  var zip, zo;\n  if (zipped == null)\n    throw new IllegalArgumentException_1('ZIP argument for unzipper cannot be null');\n  if (zipped.indexOf('ZIP:') != 0)\n    throw new IllegalArgumentException_1('Argument is not a zipped file');\n  zip = new ZIP_1($substring(zipped, 4));\n  zo = $openFile(zip, 'json');\n  if (!zo)\n    throw new IllegalArgumentException_1('Argument does not contain ZIPed json strings');\n  return $getTextContent(zo);\n}\n\nfunction ZIP_0(){\n  $createNewJsZip(this);\n}\n\nfunction ZIP_1(encoded){\n  $createNewJsZip(this);\n  try {\n    this.jszip.load(encoded, {base64:true, checkCRC32:true});\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      throw new IllegalArgumentException_1('Invalid ZIP file');\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction ZipContent(content_0){\n  var zip;\n  zip = new ZIP_0;\n  new ZIPObject_0(zip.jszip.file('json', content_0));\n  return 'ZIP:' + $internalGenerate(zip);\n}\n\ndefineSeed(566, 1, {}, ZIP_0, ZIP_1);\nfunction $getTextContent(this$static){\n  return this$static.zipobject.asText();\n}\n\nfunction ZIPObject_0(js){\n  this.zipobject = js;\n}\n\ndefineSeed(567, 1, {}, ZIPObject_0);\nfunction $createBoxMesh(this$static, ctx, triangles){\n  var error, i, j, mesh, of, t, t$iterator, temp, xmax, xmin, ymax, ymin, zmax, zmin;\n  xmin = ymin = zmin = 3.4028234663852886E38;\n  xmax = ymax = zmax = 1.401298464324817E-45;\n  this$static.lineBuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, this$static.lineBuffer);\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 24 * ~~(triangles.size_0 / 2), 1);\n  temp = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 36, 1);\n  i = 0;\n  this$static.lineCount = 0;\n  of = 0;\n  for (t$iterator = new AbstractList$IteratorImpl_0(triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n    t = dynamicCast($next_3(t$iterator), Q$Triangle);\n    $toLines(t, temp, of);\n    if (of == 18) {\n      for (j = 0; j < 36; j += 3) {\n        temp[j] < xmin && (xmin = temp[j]);\n        temp[j] > xmax && (xmax = temp[j]);\n        temp[j + 1] < ymin && (ymin = temp[j + 1]);\n        temp[j + 1] > ymax && (ymax = temp[j + 1]);\n        temp[j + 2] < zmin && (zmin = temp[j + 2]);\n        temp[j + 2] > zmax && (zmax = temp[j + 2]);\n      }\n      zmax += 0.5;\n      mesh[i++] = xmin;\n      mesh[i++] = ymin;\n      mesh[i++] = zmax;\n      mesh[i++] = xmax;\n      mesh[i++] = ymin;\n      mesh[i++] = zmax;\n      mesh[i++] = xmax;\n      mesh[i++] = ymin;\n      mesh[i++] = zmax;\n      mesh[i++] = xmax;\n      mesh[i++] = ymax;\n      mesh[i++] = zmax;\n      mesh[i++] = xmax;\n      mesh[i++] = ymax;\n      mesh[i++] = zmax;\n      mesh[i++] = xmin;\n      mesh[i++] = ymax;\n      mesh[i++] = zmax;\n      mesh[i++] = xmin;\n      mesh[i++] = ymax;\n      mesh[i++] = zmax;\n      mesh[i++] = xmin;\n      mesh[i++] = ymin;\n      mesh[i++] = zmax;\n      of = 0;\n      this$static.lineCount += 8;\n      xmin = ymin = zmin = 3.4028234663852886E38;\n      xmax = ymax = zmax = 1.401298464324817E-45;\n    }\n     else {\n      of = 18;\n    }\n  }\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the line buffer : ' + error);\n}\n\nfunction $createCoordinateMesh(this$static, ctx){\n  var error, frame_0, i, mesh, t, t$iterator;\n  frame_0 = createCoordinateFrame(this$static.coords, this$static.xmin, this$static.xmax, this$static.ymin, this$static.ymax, this$static.zmin, this$static.zmax);\n  this$static.frameBuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, this$static.frameBuffer);\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 18 * frame_0.size_0, 1);\n  i = 0;\n  this$static.frameCount = 0;\n  for (t$iterator = new AbstractList$IteratorImpl_0(frame_0); t$iterator.i < t$iterator.this$0_0.size_1();) {\n    t = dynamicCast($next_3(t$iterator), Q$Triangle);\n    $toLines(t, mesh, i);\n    this$static.frameCount += 6;\n    i += 18;\n  }\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the frame buffer : ' + error);\n}\n\nfunction $createLineMesh(this$static, ctx, triangles){\n  var error, i, mesh, t, t$iterator;\n  this$static.lineBuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, this$static.lineBuffer);\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 18 * triangles.size_0, 1);\n  i = 0;\n  this$static.lineCount = 0;\n  for (t$iterator = new AbstractList$IteratorImpl_0(triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n    t = dynamicCast($next_3(t$iterator), Q$Triangle);\n    $toLines(t, mesh, i);\n    this$static.lineCount += 6;\n    i += 18;\n  }\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the line buffer : ' + error);\n}\n\nfunction $createTriangleMesh(this$static, ctx, triangles){\n  var error, i, mesh, t, t$iterator;\n  this$static.vertexBuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, this$static.vertexBuffer);\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 9 * triangles.size_0, 1);\n  i = 0;\n  this$static.vertexCount = 0;\n  for (t$iterator = new AbstractList$IteratorImpl_0(triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n    t = dynamicCast($next_3(t$iterator), Q$Triangle);\n    $toMesh(t, mesh, i);\n    this$static.vertexCount += 3;\n    i += 9;\n  }\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the triangle buffer : ' + error);\n}\n\nfunction $defineColormap(this$static){\n  var c, height, hmax, hmin, i;\n  this$static.colorMap = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 512, 1);\n  if (this$static.filledcoloring) {\n    hmin = this$static.filledcoloring.min_0;\n    hmax = this$static.filledcoloring.max_0;\n    for (i = 0; i < 128; i++) {\n      height = i * (hmax - hmin) / 127 + hmin;\n      c = $toColor(this$static.filledcoloring, height);\n      this$static.colorMap[i * 4] = c.r / 255;\n      this$static.colorMap[i * 4 + 1] = c.g / 255;\n      this$static.colorMap[i * 4 + 2] = c.b / 255;\n      this$static.colorMap[i * 4 + 3] = 1;\n    }\n  }\n   else {\n    for (i = 0; i < 128; i++) {\n      this$static.colorMap[i * 4] = 0.5;\n      this$static.colorMap[i * 4 + 1] = 0.5;\n      this$static.colorMap[i * 4 + 2] = 0.5;\n      this$static.colorMap[i * 4 + 3] = 1;\n    }\n  }\n}\n\nfunction $defineLabelProgram(this$static, ctx){\n  var labelShader, log_0, textureShader;\n  labelShader = $getShader(ctx, 35633, 'precision mediump float;\\nattribute vec3 vertexPosition;\\nattribute vec2 texPosition;\\nuniform mat4 perspectiveMatrix;\\nvarying vec2 texCoord;\\nvoid main() {\\ngl_Position = perspectiveMatrix * vec4(vertexPosition, 1.0);\\ntexCoord    = texPosition;\\n}\\n');\n  if (!labelShader)\n    throw new WebGLException_0('unable to create the label vertex shader');\n  textureShader = $getShader(ctx, 35632, 'precision mediump float;\\nuniform sampler2D tex;\\nvarying vec2 texCoord;\\nvoid main() {\\ngl_FragColor = texture2D(tex, texCoord);\\n}\\n');\n  if (!textureShader)\n    throw new WebGLException_0('unable to create the label fragment shader');\n  this$static.labelProgram = ctx.createProgram();\n  if (!this$static.labelProgram)\n    throw new WebGLException_0('unable to create the label shader program');\n  $attachShader(ctx, this$static.labelProgram, labelShader);\n  $attachShader(ctx, this$static.labelProgram, textureShader);\n  $bindAttribLocation(ctx, this$static.labelProgram, 0, 'vertexPosition');\n  $bindAttribLocation(ctx, this$static.labelProgram, 1, 'texPosition');\n  $linkProgram(ctx, this$static.labelProgram);\n  if (!$getProgramParameterb(ctx, this$static.labelProgram, 35714)) {\n    log_0 = $getProgramInfoLog(ctx, this$static.labelProgram);\n    (log_0 == null || $equals('', log_0)) && (log_0 = 'Unknown error');\n    throw new WebGLException_0('unable to link the label shader programs : ' + log_0);\n  }\n  this$static.labelPositionAttribute = $getAttribLocation(ctx, this$static.labelProgram, 'vertexPosition');\n  this$static.labelMatrix = $getUniformLocation(ctx, this$static.labelProgram, 'perspectiveMatrix');\n  if (!this$static.labelMatrix)\n    throw new WebGLException_0('unable to find the location of the perspectiveMatrix');\n  this$static.textureCoordAttribute = $getAttribLocation(ctx, this$static.labelProgram, 'texPosition');\n  this$static.textureLocation = $getUniformLocation(ctx, this$static.labelProgram, 'tex');\n  if (!this$static.textureLocation)\n    throw new WebGLException_0('unable to find the location of the texture');\n}\n\nfunction $defineLineProgram(this$static, ctx){\n  var lineShader, log_0, simpleShader;\n  simpleShader = $getShader(ctx, 35633, 'precision mediump float;\\nattribute vec3 vertexPosition;\\nuniform mat4 perspectiveMatrix;\\nvoid main(void)\\n{\\n gl_Position = perspectiveMatrix * vec4(vertexPosition, 1.0);\\n}\\n');\n  if (!simpleShader)\n    throw new WebGLException_0('unable to create the line vertex shader');\n  lineShader = $getShader(ctx, 35632, 'precision mediump float;\\nuniform vec4 linecolor;\\nvoid main(void)\\n{gl_FragColor = linecolor;}\\n');\n  if (!lineShader)\n    throw new WebGLException_0('unable to create the line fragment shader');\n  this$static.lineProgram = ctx.createProgram();\n  if (!this$static.lineProgram)\n    throw new WebGLException_0('unable to create the line shader program');\n  $attachShader(ctx, this$static.lineProgram, simpleShader);\n  $attachShader(ctx, this$static.lineProgram, lineShader);\n  $bindAttribLocation(ctx, this$static.lineProgram, 0, 'vertexPosition');\n  $linkProgram(ctx, this$static.lineProgram);\n  if (!$getProgramParameterb(ctx, this$static.lineProgram, 35714)) {\n    log_0 = $getProgramInfoLog(ctx, this$static.lineProgram);\n    (log_0 == null || $equals('', log_0)) && (log_0 = 'Unknown error');\n    throw new WebGLException_0('unable to link the line shader programs : ' + log_0);\n  }\n  this$static.linePositionAttribute = $getAttribLocation(ctx, this$static.lineProgram, 'vertexPosition');\n  this$static.linecolorParameter = $getUniformLocation(ctx, this$static.lineProgram, 'linecolor');\n  if (!this$static.linecolorParameter)\n    throw new WebGLException_0('unable to find the location of the linecolor parameter');\n  this$static.lineMatrix = $getUniformLocation(ctx, this$static.lineProgram, 'perspectiveMatrix');\n  if (!this$static.lineMatrix)\n    throw new WebGLException_0('unable to find the location of the perspectiveMatrix');\n}\n\nfunction $defineShaderProgram(this$static, ctx){\n  var fragmentShader, log_0, vertexShader;\n  vertexShader = $getShader(ctx, 35633, 'precision mediump float;\\nattribute vec3 vertexPosition;\\nuniform mat4 perspectiveMatrix;\\nuniform float hmin;\\nuniform float hmax;\\nuniform vec4 colormap[128];\\nvarying vec4 vColor;\\nvoid main(void)\\n{\\n int cidx    = int(127.0 * clamp((vertexPosition.z - hmin)/(hmax-hmin),0.0,1.0));\\n vColor      = colormap[cidx];\\n gl_Position = perspectiveMatrix * vec4(vertexPosition, 1.0);\\n}\\n');\n  if (!vertexShader)\n    throw new WebGLException_0('unable to create the vertex shader');\n  fragmentShader = $getShader(ctx, 35632, 'precision mediump float;\\nvarying vec4 vColor;\\nvoid main(void)\\n{gl_FragColor = vColor;}\\n');\n  if (!fragmentShader)\n    throw new WebGLException_0('unable to create the triangle fragment shader');\n  this$static.shaderProgram = ctx.createProgram();\n  if (!this$static.shaderProgram)\n    throw new WebGLException_0('unable to create the triangle shader program');\n  $attachShader(ctx, this$static.shaderProgram, vertexShader);\n  $attachShader(ctx, this$static.shaderProgram, fragmentShader);\n  $bindAttribLocation(ctx, this$static.shaderProgram, 0, 'vertexPosition');\n  $linkProgram(ctx, this$static.shaderProgram);\n  if (!$getProgramParameterb(ctx, this$static.shaderProgram, 35714)) {\n    log_0 = $getProgramInfoLog(ctx, this$static.shaderProgram);\n    (log_0 == null || $equals('', log_0)) && (log_0 = 'Unknown error');\n    throw new WebGLException_0('unable to link the triangle shader programs : ' + log_0);\n  }\n  this$static.vertexPositionAttribute = $getAttribLocation(ctx, this$static.shaderProgram, 'vertexPosition');\n  this$static.projectionMatrix = $getUniformLocation(ctx, this$static.shaderProgram, 'perspectiveMatrix');\n  if (!this$static.projectionMatrix)\n    throw new WebGLException_0('unable to find the location of the perspectiveMatrix');\n  this$static.hminParameter = $getUniformLocation(ctx, this$static.shaderProgram, 'hmin');\n  if (!this$static.hminParameter)\n    throw new WebGLException_0('unable to find the location of the hmin parameter');\n  this$static.hmaxParameter = $getUniformLocation(ctx, this$static.shaderProgram, 'hmax');\n  if (!this$static.hmaxParameter)\n    throw new WebGLException_0('unable to find the location of the hmax parameter');\n  this$static.colormapParameter = $getUniformLocation(ctx, this$static.shaderProgram, 'colormap');\n  if (!this$static.colormapParameter)\n    throw new WebGLException_0('unable to find the location of the colormap parameter');\n}\n\nfunction $fitInto_1(this$static, ctx, width_0, height, range){\n  var bounds, data_0, dx, dy, mx, my, p, s, shiftandscale, sx, sy, t, t$iterator, time, transform;\n  bounds = initValues(_3D_classLit, makeCastMap([Q$double_$1, Q$Serializable]), -1, [1.7976931348623157E308, 1.7976931348623157E308, -1.7976931348623157E308, -1.7976931348623157E308]);\n  data_0 = $getFirstSet_0(range);\n  shiftandscale = multiply(this$static.scale, shiftMatrix_0(this$static.inner_shift));\n  transform = multiply(this$static.view, shiftandscale);\n  p = new ZBufferEntry_0;\n  while (data_0) {\n    time = data_0.time;\n    for (t$iterator = new AbstractList$IteratorImpl_0(data_0.triangles); t$iterator.i < t$iterator.this$0_0.size_1();) {\n      t = dynamicCast($next_3(t$iterator), Q$Triangle);\n      $createProjectedTriangle(p, transform, t, false);\n      $updateBounds(p, bounds);\n    }\n    data_0 = $getNextSet_0(range, time);\n  }\n  if (bounds[2] > bounds[0] && bounds[3] > bounds[1] && width_0 > 0 && height > 0) {\n    sx = width_0 / (bounds[2] - bounds[0]);\n    sy = height / (bounds[3] - bounds[1]);\n    s = sx > sy?sy:sx;\n    dx = -s * bounds[0];\n    dy = -s * bounds[1];\n    mx = width_0 - 1 - (bounds[2] - bounds[0]) * s;\n    my = height - 1 - (bounds[3] - bounds[1]) * s;\n    mx < 0 && (mx = 0);\n    my < 0 && (my = 0);\n    this$static.shift_0 = new AffineShift_1(s * 2 / width_0, (dx + mx / 2) * 2 / width_0 - 1, s * 2 / height, (dy + my / 2) * 2 / height - 1);\n    this$static.scalemovex = 2 / width_0;\n    this$static.scalemovey = -2 / height;\n    ctx.viewport(0, 0, width_0, height);\n  }\n   else {\n    this$static.shift_0 = new AffineShift_1(1, 0, 1, 0);\n  }\n}\n\nfunction $getShader(ctx, type_0, source){\n  var log_0, shader;\n  shader = ctx.createShader(type_0);\n  ctx.shaderSource(shader, source);\n  ctx.compileShader(shader);\n  if (!ctx.getShaderParameter(shader, 35713)) {\n    log_0 = ctx.getShaderInfoLog(shader);\n    (log_0 == null || $equals('', log_0)) && (log_0 = 'unknown error');\n    throw new WebGLException_0('Unable to compile the shader program: ' + log_0);\n  }\n  return shader;\n}\n\nfunction $render_3(this$static, ctx){\n  var error, labelvertices, perspectiveMatrix, shiftandscale, transform, viewscaled, ar;\n  ctx.clear(16640);\n  shiftandscale = multiply(this$static.scale, shiftMatrix_0(this$static.inner_shift));\n  viewscaled = multiply(this$static.view, shiftandscale);\n  transform = multiply(shiftMatrix(this$static.shift_0), viewscaled);\n  $useProgram(ctx, this$static.shaderProgram);\n  perspectiveMatrix = (ar = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 16, 1) , ar[0] = transform.m11 , ar[1] = transform.m21 , ar[2] = transform.m31 , ar[3] = transform.m41 , ar[4] = transform.m12 , ar[5] = transform.m22 , ar[6] = transform.m32 , ar[7] = transform.m42 , ar[8] = transform.m13 , ar[9] = transform.m23 , ar[10] = transform.m33 , ar[11] = transform.m43 , ar[12] = transform.m14 , ar[13] = transform.m24 , ar[14] = transform.m34 , ar[15] = transform.m44 , ar);\n  $uniformMatrix4fv(ctx, this$static.projectionMatrix, false, perspectiveMatrix);\n  $enableVertexAttribArray(ctx, this$static.vertexPositionAttribute);\n  this$static.colorMap == null && $defineColormap(this$static);\n  $uniform4fv(ctx, this$static.colormapParameter, (this$static.colorMap , !compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null));\n  $uniform1f(ctx, this$static.hminParameter, this$static.filledcoloring.min_0);\n  $uniform1f(ctx, this$static.hmaxParameter, this$static.filledcoloring.max_0);\n  $bindBuffer(ctx, 34962, this$static.vertexBuffer);\n  $vertexAttribPointer(ctx, this$static.vertexPositionAttribute, 3, 5126, false, 0, 0);\n  $drawArrays(ctx, 4, 0, this$static.vertexCount);\n  $flush(ctx);\n  $disableVertexAttribArray(ctx, this$static.vertexPositionAttribute);\n  $useProgram(ctx, this$static.lineProgram);\n  $uniform4f(ctx, this$static.linecolorParameter, 0, 0, 0, 1);\n  $uniformMatrix4fv(ctx, this$static.lineMatrix, false, perspectiveMatrix);\n  $enableVertexAttribArray(ctx, this$static.linePositionAttribute);\n  $bindBuffer(ctx, 34962, this$static.lineBuffer);\n  $vertexAttribPointer(ctx, this$static.linePositionAttribute, 3, 5126, false, 0, 0);\n  $drawArrays(ctx, 1, 0, this$static.lineCount);\n  $flush(ctx);\n  $disableVertexAttribArray(ctx, this$static.linePositionAttribute);\n  if (this$static.frameCount > 0) {\n    $useProgram(ctx, this$static.lineProgram);\n    $uniform4f(ctx, this$static.linecolorParameter, 0, 0, 0, 1);\n    $uniformMatrix4fv(ctx, this$static.lineMatrix, false, perspectiveMatrix);\n    $enableVertexAttribArray(ctx, this$static.linePositionAttribute);\n    $bindBuffer(ctx, 34962, this$static.frameBuffer);\n    $vertexAttribPointer(ctx, this$static.linePositionAttribute, 3, 5126, false, 0, 0);\n    $drawArrays(ctx, 1, 0, this$static.frameCount);\n    $flush(ctx);\n    $disableVertexAttribArray(ctx, this$static.linePositionAttribute);\n  }\n  if (this$static.textureCount > 0) {\n    $useProgram(ctx, this$static.labelProgram);\n    $enable(ctx, 3042);\n    ctx.blendFunc(0, 768);\n    $uniformMatrix4fv(ctx, this$static.labelMatrix, false, perspectiveMatrix);\n    $enableVertexAttribArray(ctx, this$static.labelPositionAttribute);\n    $enableVertexAttribArray(ctx, this$static.textureCoordAttribute);\n    labelvertices = $createLabelVertices(this$static.labelfactory, ctx, this$static.labels, this$static.scale, this$static.view, shiftMatrix(this$static.shift_0), this$static.scalemovex, this$static.scalemovey);\n    $bindBuffer(ctx, 34962, labelvertices);\n    $vertexAttribPointer(ctx, this$static.labelPositionAttribute, 3, 5126, false, 0, 0);\n    $bindBuffer(ctx, 34962, this$static.textureBuffer);\n    $vertexAttribPointer(ctx, this$static.textureCoordAttribute, 2, 5126, false, 0, 0);\n    ctx.activeTexture(33984);\n    $bindTexture(ctx, 3553, this$static.labelTexture);\n    $uniform1i(ctx, this$static.textureLocation, 0);\n    $drawArrays(ctx, 4, 0, this$static.labels.size_0 * 2 * 3);\n    $flush(ctx);\n    $disableVertexAttribArray(ctx, this$static.labelPositionAttribute);\n    $disableVertexAttribArray(ctx, this$static.textureCoordAttribute);\n    ctx.disable(3042);\n  }\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error drawing the scene: ' + error);\n}\n\nfunction $resetView_0(this$static){\n  this$static.view = diag(1, 1, 1);\n  this$static.scale = diag(this$static.xmax > this$static.xmin?1 / (this$static.xmax - this$static.xmin):1, this$static.ymax > this$static.ymin?1 / (this$static.ymax - this$static.ymin):1, this$static.zmax > this$static.zmin?-1 / (this$static.zmax - this$static.zmin):1);\n  this$static.inner_shift[0] = 0.5 * (this$static.xmin + this$static.xmax);\n  this$static.inner_shift[1] = 0.5 * (this$static.ymin + this$static.ymax);\n  this$static.inner_shift[2] = 0.5 * (this$static.zmin + this$static.zmax);\n}\n\nfunction $rotateView_0(this$static, m_0){\n  this$static.view = multiply(m_0, this$static.view);\n}\n\nfunction $scale_2(this$static, s){\n  $scale_0(this$static.shift_0, s);\n}\n\nfunction $setDataSetRange_1(this$static, ctx, range){\n  this$static.xmin = range.xmin;\n  this$static.ymin = range.ymin;\n  this$static.zmin = range.zmin;\n  this$static.xmax = range.xmax;\n  this$static.ymax = range.ymax;\n  this$static.zmax = range.zmax;\n  this$static.filledcoloring = range.cmap;\n  $setMinMax(this$static.filledcoloring, range.hmin, range.hmax);\n  $setTriangles(this$static, ctx, $getFirstSet_0(range).triangles);\n  $defineColormap(this$static);\n}\n\nfunction $setTriangles(this$static, ctx, triangles){\n  var error;\n  $defineShaderProgram(this$static, ctx);\n  $defineLineProgram(this$static, ctx);\n  $defineLabelProgram(this$static, ctx);\n  ctx.clearColor(1, 1, 1, 1);\n  ctx.clearDepth(1);\n  $enable(ctx, 2929);\n  ctx.depthFunc(515);\n  ctx.depthRange(-2, 2);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the viewport: ' + error);\n  $createTriangleMesh(this$static, ctx, triangles);\n  this$static.isgridplot?$createBoxMesh(this$static, ctx, triangles):$createLineMesh(this$static, ctx, triangles);\n  $createCoordinateMesh(this$static, ctx);\n  this$static.labels = createCoordinateLabels(this$static.coords, this$static.xmin, this$static.xmax, this$static.ymin, this$static.ymax, this$static.zmin, this$static.zmax);\n  this$static.labelTexture = $createTextureFromText(this$static.labelfactory, ctx, this$static.labels);\n  this$static.textureBuffer = $createTexVertices(this$static.labelfactory, ctx, this$static.labels);\n  this$static.textureCount = this$static.labels.size_0 * 3 * 2;\n  $resetView_0(this$static);\n}\n\nfunction $shift_2(this$static, dx, dy){\n  $shift_0(this$static.shift_0, dx * this$static.scalemovex, dy * this$static.scalemovey);\n}\n\nfunction GLScene_0(tc, coordinate_type){\n  this.inner_shift = initDim(_3D_classLit, makeCastMap([Q$double_$1, Q$Serializable]), -1, 3, 1);\n  this.coords = coordinate_type;\n  this.isgridplot = this.coords == 4;\n  this.labelfactory = new LabelCreator_0(tc);\n  this.shift_0 = new AffineShift_0;\n  $resetView_0(this);\n}\n\ndefineSeed(568, 1, {}, GLScene_0);\n_.coords = 0;\n_.frameCount = 0;\n_.isgridplot = false;\n_.labelPositionAttribute = 0;\n_.lineCount = 0;\n_.linePositionAttribute = 0;\n_.scalemovex = 0;\n_.scalemovey = 0;\n_.textureCoordAttribute = 0;\n_.textureCount = 0;\n_.vertexCount = 0;\n_.vertexPositionAttribute = 0;\n_.xmax = 0;\n_.xmin = 0;\n_.ymax = 0;\n_.ymin = 0;\n_.zmax = 0;\n_.zmin = 0;\nfunction $startAnimation_2(this$static){\n  if (!this$static.running) {\n    this$static.running = true;\n    $schedule(this$static, 1000);\n  }\n}\n\nfunction GLAnimation_0(p){\n  this.parent_0 = p;\n  this.running = false;\n}\n\ndefineSeed(569, 10, {}, GLAnimation_0);\n_.run = function run_7(){\n  this.running && $setDataSet_2(this.parent_0, $getNextSet_0(this.parent_0.current_range, this.parent_0.current_time));\n}\n;\n_.running = false;\nfunction $createControlPanel_0(this$static, triangles){\n  var count, hpanel, r, r$iterator, showtimer;\n  hpanel = new HorizontalPanel_0;\n  showtimer = false;\n  count = 0;\n  this$static.vpanel = new VerticalPanel_0;\n  $setWidth_0(this$static.vpanel, '100%');\n  $setHeight_0(this$static.vpanel, '100%');\n  $setPropertyImpl($getElement(this$static.vpanel).style, 'backgroundColor', 'LightGray');\n  $add_1(hpanel, this$static.canvas);\n  $add_1(hpanel, this$static.legend);\n  $add_2(this$static.vpanel, hpanel);\n  this$static.labelbox = new ListBox_0;\n  for (r$iterator = new AbstractList$IteratorImpl_0(triangles); r$iterator.i < r$iterator.this$0_0.size_1();) {\n    r = dynamicCast($next_3(r$iterator), Q$DataSetRange);\n    $addItem(this$static.labelbox, r.label_0);\n    r.data_0.size_0 > 1 && (showtimer = true);\n    ++count;\n  }\n  $setVisibleItemCount(this$static.labelbox, 1);\n  $addDomHandler(this$static.labelbox, this$static, ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  $add_2(this$static.vpanel, this$static.labelbox);\n  this$static.current_time = $getFirstSet_0(this$static.current_range).time;\n  if (showtimer) {\n    this$static.timebox = new TimeControl_0(this$static.current_time);\n    $add_2(this$static.vpanel, this$static.timebox);\n    $addActionListener_6(this$static.timebox, this$static);\n  }\n   else {\n    this$static.timebox = null;\n  }\n}\n\nfunction $paintPlot_0(this$static){\n  var webex;\n  if (this$static.resize_0) {\n    this$static.width_0 = $getElement(this$static.canvas).clientWidth | 0;\n    this$static.height_0 = $getElement(this$static.canvas).clientHeight | 0;\n    if (this$static.width_0 > 0 && this$static.height_0 > 0 && !!this$static.current_range) {\n      $setCoordinateSpaceWidth(this$static.canvas, this$static.width_0);\n      $setCoordinateSpaceHeight(this$static.canvas, this$static.height_0);\n      $fitInto_1(this$static.scene, this$static.ctx, this$static.width_0, this$static.height_0, this$static.current_range);\n      this$static.resize_0 = false;\n    }\n  }\n  if (this$static.width_0 > 0 && this$static.height_0 > 0 && !!this$static.current_range) {\n    try {\n      $render_3(this$static.scene, this$static.ctx);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$WebGLException)) {\n        webex = $e0;\n        alert_0($__0(this$static.locale, 'GLRenderFrame.WebGLException', webex.detailMessage));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n\nfunction $setDataSet_2(this$static, dt){\n  var webex;\n  if (dt) {\n    try {\n      $setTriangles(this$static.scene, this$static.ctx, dt.triangles);\n      this$static.current_time = dt.time;\n      $setTime(this$static.timebox, this$static.current_time);\n      $paintPlot_0(this$static);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$WebGLException)) {\n        webex = $e0;\n        alert_0($__0(this$static.locale, 'GLRenderFrame.WebGLException', webex.detailMessage));\n      }\n       else \n        throw unwrap_5($e0);\n    }\n  }\n}\n\nfunction $setDataSetRange_2(this$static, data_0){\n  var webex;\n  try {\n    this$static.resize_0 = true;\n    this$static.current_range = data_0;\n    $setDataSetRange_1(this$static.scene, this$static.ctx, data_0);\n    $setOutlineColormap(this$static.colors, this$static.current_range.cmap);\n    $paintPlot_0(this$static);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$WebGLException)) {\n      webex = $e0;\n      alert_0($__0(this$static.locale, 'GLRenderFrame.WebGLException', webex.detailMessage));\n    }\n     else \n      throw unwrap_5($e0);\n  }\n}\n\nfunction GLRenderFrame_0(c, l_0, triangles, boxing){\n  var wgl;\n  this.ctx = (wgl = createPreservingContext(($clinit_DOM() , c.element_0), 'webgl') , !wgl && (wgl = createPreservingContext(c.element_0, 'experimental-webgl')) , !wgl && (wgl = createPreservingContext(c.element_0, 'webkit-3d')) , !wgl && (wgl = createPreservingContext(c.element_0, 'moz-webgl')) , !!wgl && $registerContextLostEvent(c.element_0) , wgl);\n  this.textcanvas = createIfSupported();\n  if (!this.ctx || !this.textcanvas) {\n    throw new IOException_0('WebGL rendering is not supported by this browser');\n  }\n   else {\n    this.data_0 = triangles;\n    this.canvas = c;\n    this.legend = l_0;\n    this.locale = new Locale_0;\n    this.isgridplot = boxing == 4;\n    this.current_range = (checkIndex(0, triangles.size_0) , dynamicCast(triangles.array[0], Q$DataSetRange));\n    this.scene = new GLScene_0(this.textcanvas, boxing);\n    this.animation = new GLAnimation_0(this);\n    this.colors = new ColorLabelPanel_0;\n    $createControlPanel_0(this, triangles);\n    $addDomHandler(c, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_2));\n    $addDomHandler(c, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_6));\n    $addDomHandler(c, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_3));\n    $addDomHandler(c, this, ($clinit_MouseWheelEvent() , $clinit_MouseWheelEvent() , TYPE_7));\n    $setDataSetRange_2(this, this.current_range);\n    $setOutlineColormap(this.colors, this.current_range.cmap);\n  }\n}\n\ndefineSeed(570, 1, makeCastMap([Q$ChangeHandler, Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$MouseWheelHandler, Q$EventHandler, Q$ActionListener]), GLRenderFrame_0);\n_.actionPerformed = function actionPerformed_12(e){\n  if ($equals('play', e.command)) {\n    this.animation.running?(this.animation.running = false):$startAnimation_2(this.animation);\n  }\n   else {\n    this.animation.running = false;\n    $equals('first', e.command)?$setDataSet_2(this, $getFirstSet_0(this.current_range)):$equals('prev', e.command)?$setDataSet_2(this, $getPrevSet_0(this.current_range, this.current_time)):$equals('next', e.command)?$setDataSet_2(this, $getNextSet_0(this.current_range, this.current_time)):$equals('last', e.command) && $setDataSet_2(this, $getLastSet_0(this.current_range));\n  }\n}\n;\n_.execute = function execute_20(timestamp){\n  $paintPlot_0(this);\n}\n;\n_.getGUI = function getGUI_2(){\n  return this.vpanel;\n}\n;\n_.getLegendWidth = function getLegendWidth_2(){\n  return 64;\n}\n;\n_.getMinimumRequiredHeight = function getMinimumRequiredHeight_2(){\n  var h_0, height;\n  if (this.vpanel) {\n    height = 0;\n    if (this.labelbox) {\n      h_0 = $getElement(this.labelbox).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    if (this.timebox) {\n      h_0 = $getElement(this.timebox).clientHeight | 0;\n      if (h_0 <= 0)\n        return -1;\n      height += h_0;\n    }\n    return height;\n  }\n  return -1;\n}\n;\n_.onChange = function onChange_4(ch_0){\n  var dat, idx, newlbl, newrange, webex;\n  idx = $getElement(this.labelbox).selectedIndex;\n  newlbl = dynamicCast($get_5(this.data_0, idx), Q$DataSetRange).label_0;\n  newrange = findRange(this.data_0, newlbl);\n  if (newrange) {\n    dat = $findAtTime(newrange, this.current_time);\n    if (dat) {\n      this.current_range = newrange;\n      $setOutlineColormap(this.colors, this.current_range.cmap);\n      try {\n        $setDataSetRange_1(this.scene, this.ctx, newrange);\n        $setTriangles(this.scene, this.ctx, dat.triangles);\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$WebGLException)) {\n          webex = $e0;\n          alert_0($__0(this.locale, 'GLRenderFrame.WebGLException', webex.detailMessage));\n        }\n         else \n          throw unwrap_5($e0);\n      }\n    }\n  }\n}\n;\n_.onMouseDown = function onMouseDown_3(event_0){\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons = $eventGetButton(event_0.nativeEvent);\n  this.sx = $getX(event_0);\n  this.sy = $getY(event_0);\n}\n;\n_.onMouseMove = function onMouseMove_3(event_0){\n  var mxfrac, myfrac, nx, ny, xrot, yrot;\n  nx = $getX(event_0);\n  ny = $getY(event_0);\n  $eventPreventDefault(event_0.nativeEvent);\n  if (nx != this.sx || ny != this.sy) {\n    if ((this.buttons & 2) != 0 || (this.buttons & 1) != 0 && this.isgridplot) {\n      $shift_2(this.scene, nx - this.sx, ny - this.sy);\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n     else if ((this.buttons & 1) != 0 && this.width_0 > 0 && this.height_0 > 0 && !this.isgridplot) {\n      mxfrac = 3.141592653589793 * (nx - this.sx) / this.width_0;\n      myfrac = 3.141592653589793 * (ny - this.sy) / this.height_0;\n      xrot = rotY(mxfrac);\n      yrot = rotX(myfrac);\n      $rotateView_0(this.scene, multiply(yrot, xrot));\n      $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n    }\n    this.sx = nx;\n    this.sy = ny;\n  }\n}\n;\n_.onMouseUp = function onMouseUp_3(event_0){\n  var up;\n  up = $eventGetButton(event_0.nativeEvent);\n  $eventPreventDefault(event_0.nativeEvent);\n  this.buttons &= ~up;\n}\n;\n_.onMouseWheel = function onMouseWheel_2(event_0){\n  var notches;\n  $eventPreventDefault(event_0.nativeEvent);\n  notches = getNotches(event_0.nativeEvent);\n  if (notches > 0) {\n    while (notches > 0) {\n      $scale_2(this.scene, 1.1);\n      --notches;\n    }\n  }\n   else {\n    while (notches < 0) {\n      $scale_2(this.scene, 0.9090909090909091);\n      ++notches;\n    }\n  }\n  $requestAnimationFrame(($clinit_AnimationSchedulerImpl() , INSTANCE), this, $getElement(this.canvas));\n}\n;\n_.onResize_1 = function onResize_12(){\n  this.resize_0 = true;\n  $paintPlot_0(this);\n}\n;\n_.paintLegend = function paintLegend_2(l_0){\n  var ctx, height, width_0;\n  if (l_0) {\n    width_0 = ($clinit_DOM() , l_0.element_0).clientWidth | 0;\n    height = l_0.element_0.clientHeight | 0;\n    if (width_0 > 0 && height > 0) {\n      $setWidth(l_0.element_0, width_0);\n      $setHeight(l_0.element_0, height);\n      ctx = l_0.element_0.getContext('2d');\n      $setFillStyleWeb(ctx, 'White');\n      $fillRect(ctx, 0, 0, width_0, height);\n      !!this.colors && width_0 > 8 && $render_2(this.colors, ctx, width_0 - 4, height, 4);\n    }\n  }\n}\n;\n_.paintPlot = function paintPlot_2(c){\n  $paintPlot_0(this);\n}\n;\n_.buttons = 0;\n_.current_time = 0;\n_.height_0 = 0;\n_.isgridplot = false;\n_.resize_0 = false;\n_.sx = 0;\n_.sy = 0;\n_.width_0 = 0;\nfunction $createLabelVertices(this$static, ctx, labels, scale, view, shift_0, sx, sy){\n  var delta, error, inverse, label_0, label$iterator, mesh, mmovex_dx, mmovex_dy, mmovex_dz, mmovey_dx, mmovey_dy, mmovey_dz, offset, pmovex_dx, pmovex_dy, pmovex_dz, pmovey_dx, pmovey_dy, pmovey_dz, vertexbuffer, x0, y0, z0, m_0;\n  offset = 0;\n  delta = initDim(_3D_classLit, makeCastMap([Q$double_$1, Q$Serializable]), -1, 3, 1);\n  inverse = multiply($diagonalInverse(scale), multiply((m_0 = new Matrix_0 , m_0.m11 = view.m11 , m_0.m12 = view.m21 , m_0.m13 = view.m31 , m_0.m14 = view.m41 , m_0.m21 = view.m12 , m_0.m22 = view.m22 , m_0.m23 = view.m32 , m_0.m24 = view.m42 , m_0.m31 = view.m13 , m_0.m32 = view.m23 , m_0.m33 = view.m33 , m_0.m34 = view.m43 , m_0.m41 = view.m14 , m_0.m42 = view.m24 , m_0.m43 = view.m34 , m_0.m44 = view.m44 , m_0), $diagonalInverse(shift_0)));\n  sx < 0 && (sx = -sx);\n  sy < 0 && (sy = -sy);\n  delta[0] = sx * 18 / this$static.labelAspectRatio;\n  delta[1] = 0;\n  delta[2] = 0;\n  $projectPoint(inverse, delta);\n  pmovex_dx = 0.5 * delta[0];\n  pmovex_dy = 0.5 * delta[1];\n  pmovex_dz = 0.5 * delta[2];\n  mmovex_dx = -0.5 * delta[0];\n  mmovex_dy = -0.5 * delta[1];\n  mmovex_dz = -0.5 * delta[2];\n  delta[0] = 0;\n  delta[1] = sy * 18;\n  delta[2] = 0;\n  $projectPoint(inverse, delta);\n  pmovey_dx = delta[0];\n  pmovey_dy = delta[1];\n  pmovey_dz = delta[2];\n  mmovey_dx = 0 * delta[0];\n  mmovey_dy = 0 * delta[1];\n  mmovey_dz = 0 * delta[2];\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 18 * labels.size_0, 1);\n  for (label$iterator = new AbstractList$IteratorImpl_0(labels); label$iterator.i < label$iterator.this$0_0.size_1();) {\n    label_0 = dynamicCast($next_3(label$iterator), Q$Label);\n    x0 = label_0.x_0;\n    y0 = label_0.y_0;\n    z0 = label_0.z_0;\n    mesh[offset++] = x0 + mmovex_dx + mmovey_dx;\n    mesh[offset++] = y0 + mmovex_dy + mmovey_dy;\n    mesh[offset++] = z0 + mmovex_dz + mmovey_dz;\n    mesh[offset++] = x0 + pmovex_dx + mmovey_dx;\n    mesh[offset++] = y0 + pmovex_dy + mmovey_dy;\n    mesh[offset++] = z0 + pmovex_dz + mmovey_dz;\n    mesh[offset++] = x0 + pmovex_dx + pmovey_dx;\n    mesh[offset++] = y0 + pmovex_dy + pmovey_dy;\n    mesh[offset++] = z0 + pmovex_dz + pmovey_dz;\n    mesh[offset++] = x0 + mmovex_dx + mmovey_dx;\n    mesh[offset++] = y0 + mmovex_dy + mmovey_dy;\n    mesh[offset++] = z0 + mmovex_dz + mmovey_dz;\n    mesh[offset++] = x0 + mmovex_dx + pmovey_dx;\n    mesh[offset++] = y0 + mmovex_dy + pmovey_dy;\n    mesh[offset++] = z0 + mmovex_dz + pmovey_dz;\n    mesh[offset++] = x0 + pmovex_dx + pmovey_dx;\n    mesh[offset++] = y0 + pmovex_dy + pmovey_dy;\n    mesh[offset++] = z0 + pmovex_dz + pmovey_dz;\n  }\n  vertexbuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, vertexbuffer);\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the label vertices : ' + error);\n  return vertexbuffer;\n}\n\nfunction $createTexVertices(this$static, ctx, labels){\n  var error, idx, label$iterator, mesh, offset, vertexbuffer, xmax, ymax, ymin;\n  offset = 0;\n  idx = 0;\n  xmax = this$static.labelTexWidth;\n  mesh = initDim(_3F_classLit, makeCastMap([Q$Serializable]), -1, 12 * labels.size_0, 1);\n  for (label$iterator = new AbstractList$IteratorImpl_0(labels); label$iterator.i < label$iterator.this$0_0.size_1();) {\n    dynamicCast($next_3(label$iterator), Q$Label);\n    ymax = 1 - idx * this$static.labelTexAddress;\n    ymin = ymax - this$static.labelTexHeight;\n    mesh[offset++] = 0;\n    mesh[offset++] = ymin;\n    mesh[offset++] = xmax;\n    mesh[offset++] = ymin;\n    mesh[offset++] = xmax;\n    mesh[offset++] = ymax;\n    mesh[offset++] = 0;\n    mesh[offset++] = ymin;\n    mesh[offset++] = 0;\n    mesh[offset++] = ymax;\n    mesh[offset++] = xmax;\n    mesh[offset++] = ymax;\n    ++idx;\n  }\n  vertexbuffer = ctx.createBuffer();\n  $bindBuffer(ctx, 34962, vertexbuffer);\n  $bufferData(ctx, 34962, (!compileTimeSupport && (compileTimeSupport = new TypedArray$TypedArrayCompileTimeSupport_0) , null), 35044);\n  error = ctx.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error initializing the texture vertices : ' + error);\n  return vertexbuffer;\n}\n\nfunction $createTextureFromText(this$static, gl, labels){\n  var count, dx, error, height, i, label_0, label$iterator, label$iterator0, labelPxHeight, labelPxWidth, tex, thiswidth, width_0;\n  labelPxWidth = 0;\n  height = 0;\n  count = 0;\n  $setFont(this$static.ctx, 'bold 18px monospace');\n  for (label$iterator0 = new AbstractList$IteratorImpl_0(labels); label$iterator0.i < label$iterator0.this$0_0.size_1();) {\n    label_0 = dynamicCast($next_3(label$iterator0), Q$Label);\n    thiswidth = ceil_0($measureText(this$static.ctx, label_0.text_0).width);\n    thiswidth > labelPxWidth && (labelPxWidth = thiswidth);\n    height += 36;\n    ++count;\n  }\n  width_0 = $nextPow2(labelPxWidth);\n  height = $nextPow2(height);\n  $setWidth_0(this$static.canvas, width_0 + 'px');\n  $setHeight_0(this$static.canvas, height + 'px');\n  $setCoordinateSpaceWidth(this$static.canvas, width_0);\n  $setCoordinateSpaceHeight(this$static.canvas, height);\n  labelPxHeight = height / count;\n  this$static.labelTexAddress = 1 / count;\n  this$static.labelTexWidth = labelPxWidth / width_0;\n  this$static.labelTexHeight = 18 / height;\n  this$static.labelAspectRatio = 18 / labelPxWidth;\n  $setStrokeStyleWeb(this$static.ctx, 'White');\n  $setGlobalAlpha(this$static.ctx, 1);\n  $setFillStyleWeb(this$static.ctx, 'White');\n  $fillRect(this$static.ctx, 0, 0, width_0, height);\n  $setFont(this$static.ctx, '18px monospace');\n  $setTextBaseline(this$static.ctx, ($clinit_Context2d$TextBaseline() , TOP).value_0);\n  $setFillStyleWeb(this$static.ctx, 'Black');\n  i = 0;\n  for (label$iterator = new AbstractList$IteratorImpl_0(labels); label$iterator.i < label$iterator.this$0_0.size_1();) {\n    label_0 = dynamicCast($next_3(label$iterator), Q$Label);\n    thiswidth = ceil_0($measureText(this$static.ctx, label_0.text_0).width);\n    dx = (labelPxWidth - thiswidth) * 0.5;\n    $fillText(this$static.ctx, label_0.text_0, dx, i * labelPxHeight);\n    ++i;\n  }\n  tex = gl.createTexture();\n  gl.pixelStorei(37440, 1);\n  $bindTexture(gl, 3553, tex);\n  $texImage2D(gl, 3553, 0, 6408, 6408, 5121, $getElement(this$static.canvas));\n  $texParameteri(gl, 3553, 10240, 9729);\n  $texParameteri(gl, 3553, 10241, 9985);\n  gl.generateMipmap(3553);\n  $bindTexture(gl, 3553, null);\n  error = gl.getError();\n  if (error != 0)\n    throw new WebGLException_0('WebGL error creating the text labels: ' + error);\n  return tex;\n}\n\nfunction $nextPow2(v){\n  var p;\n  p = 1;\n  while (p < v) {\n    p <<= 1;\n  }\n  return p;\n}\n\nfunction LabelCreator_0(c){\n  this.canvas = c;\n  this.ctx = $getElement(this.canvas).getContext('2d');\n}\n\ndefineSeed(571, 1, {}, LabelCreator_0);\n_.labelAspectRatio = 0;\n_.labelTexAddress = 0;\n_.labelTexHeight = 0;\n_.labelTexWidth = 0;\nfunction WebGLException_0(why){\n  Exception_1.call(this, why);\n}\n\ndefineSeed(572, 91, makeCastMap([Q$Serializable, Q$Throwable, Q$WebGLException]), WebGLException_0);\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\nvar Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 98), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 82), _3I_classLit = createForArray('', '[I', 578), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 576), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 92), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 91), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 90), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 448), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 579), _3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray('[Lcom.google.gwt.lang.', 'LongLibBase$LongEmul;', 580), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 270), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 54), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 432), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 437), _3C_classLit = createForArray('', '[C', 581), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 434), _3D_classLit = createForArray('', '[D', 582), Ljava_lang_Double_2_classLit = createForClass('java.lang.', 'Double', 436), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 441), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 583), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 577), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 435), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 89), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 451), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 431), Lviplab_client_ViPLab_2_classLit = createForClass('viplab.client.', 'ViPLab', 478), Lcom_google_gwt_http_client_Header_2_classLit = createForClass('com.google.gwt.http.client.', 'Header', 219), Lviplab_client_net_HTTPHeader_2_classLit = createForClass('viplab.client.net.', 'HTTPHeader', 525), _3Lviplab_client_net_HTTPHeader_2_classLit = createForArray('[Lviplab.client.net.', 'HTTPHeader;', 584), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 445), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 438), Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang.', 'ArithmeticException', 430), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 106), Lviplab_client_net_RestException_2_classLit = createForClass('viplab.client.net.', 'RestException', 527), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 327), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 326), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 336), Lviplab_client_gui_UnitTabPane_2_classLit = createForClass('viplab.client.gui.', 'UnitTabPane', 505), Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$Collector', 105), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 107), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration', 87), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 100), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher', 101), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer', 102), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', 169, values_7), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;', 585), Lcom_google_gwt_dom_client_Style$Cursor_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor', 130, values_2), _3Lcom_google_gwt_dom_client_Style$Cursor_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Cursor;', 586), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', 149, values_3), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;', 587), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', 154, values_4), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;', 588), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', 159, values_5), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;', 589), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 164, values_6), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 590), Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility', 179, values_8), _3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Visibility;', 591), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', 170, null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', 171, null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', 172, null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', 173, null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', 174, null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', 175, null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', 176, null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', 177, null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', 178, null), Lcom_google_gwt_dom_client_Style$Cursor$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$1', 131, null), Lcom_google_gwt_dom_client_Style$Cursor$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$2', 141, null), Lcom_google_gwt_dom_client_Style$Cursor$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$3', 142, null), Lcom_google_gwt_dom_client_Style$Cursor$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$4', 143, null), Lcom_google_gwt_dom_client_Style$Cursor$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$5', 144, null), Lcom_google_gwt_dom_client_Style$Cursor$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$6', 145, null), Lcom_google_gwt_dom_client_Style$Cursor$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$7', 146, null), Lcom_google_gwt_dom_client_Style$Cursor$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$8', 147, null), Lcom_google_gwt_dom_client_Style$Cursor$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$9', 148, null), Lcom_google_gwt_dom_client_Style$Cursor$10_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$10', 132, null), Lcom_google_gwt_dom_client_Style$Cursor$11_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$11', 133, null), Lcom_google_gwt_dom_client_Style$Cursor$12_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$12', 134, null), Lcom_google_gwt_dom_client_Style$Cursor$13_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$13', 135, null), Lcom_google_gwt_dom_client_Style$Cursor$14_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$14', 136, null), Lcom_google_gwt_dom_client_Style$Cursor$15_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$15', 137, null), Lcom_google_gwt_dom_client_Style$Cursor$16_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$16', 138, null), Lcom_google_gwt_dom_client_Style$Cursor$17_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$17', 139, null), Lcom_google_gwt_dom_client_Style$Cursor$18_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Cursor$18', 140, null), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', 150, null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', 151, null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', 152, null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', 153, null), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', 155, null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', 156, null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', 157, null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', 158, null), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', 160, null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', 161, null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', 162, null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', 163, null), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 165, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 166, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 167, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 168, null), Lcom_google_gwt_dom_client_Style$Visibility$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$1', 180, null), Lcom_google_gwt_dom_client_Style$Visibility$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$2', 181, null), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 325), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 324), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel', 335), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel', 376), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 218), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 217), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 330), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 331), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 332), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 373), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 374), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 375), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 323), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 385), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 388), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 386), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 387), Lviplab_client_locale_Locale_2_classLit = createForClass('viplab.client.locale.', 'Locale', 512), Lcom_google_gwt_user_client_ui_DockLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel', 352), Lcom_google_gwt_user_client_ui_SplitLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SplitLayoutPanel', 393), Lcom_google_gwt_user_client_ui_SplitLayoutPanel$Splitter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SplitLayoutPanel$Splitter', 395), Lcom_google_gwt_user_client_ui_SplitLayoutPanel$HSplitter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SplitLayoutPanel$HSplitter', 394), Lcom_google_gwt_user_client_ui_SplitLayoutPanel$VSplitter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SplitLayoutPanel$VSplitter', 397), Lcom_google_gwt_user_client_ui_SplitLayoutPanel$Splitter$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SplitLayoutPanel$Splitter$1', 396), Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'DockLayoutPanel$Direction', 353, values_10), _3Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'DockLayoutPanel$Direction;', 592), Lcom_google_gwt_user_client_ui_DockLayoutPanel$LayoutData_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel$LayoutData', 356), Lcom_google_gwt_user_client_ui_LayoutCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutCommand', 355), Lcom_google_gwt_user_client_ui_DockLayoutPanel$DockAnimateCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel$DockAnimateCommand', 354), Lcom_google_gwt_user_client_ui_LayoutCommand$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutCommand$1', 377), Lcom_google_gwt_layout_client_Layout_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout', 273), Lcom_google_gwt_layout_client_Layout$Layer_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$Layer', 275), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 3), Lcom_google_gwt_layout_client_Layout$1_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$1', 274), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1', 4), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 5), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle', 6), Lviplab_client_gui_Button_2_classLit = createForClass('viplab.client.gui.', 'Button', 493), Lviplab_client_gui_LoadSaveDialog_2_classLit = createForClass('viplab.client.gui.', 'LoadSaveDialog', 499), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 342), Lcom_google_gwt_user_client_ui_FormPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel', 363), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 185), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 184), Lcom_google_gwt_user_client_ui_FormPanel$SubmitCompleteEvent_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$SubmitCompleteEvent', 365), Lcom_google_gwt_user_client_ui_FormPanel$SubmitEvent_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$SubmitEvent', 366), Lcom_google_gwt_user_client_ui_FormPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$1', 364), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 392), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 191), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 190), Lviplab_client_gui_VerticalMultiSplit_2_classLit = createForClass('viplab.client.gui.', 'VerticalMultiSplit', 506), Lviplab_client_gui_LanguageSelector_2_classLit = createForClass('viplab.client.gui.', 'LanguageSelector', 498), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 258), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 460), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 465), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 461), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 462), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 329), Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListBox', 378), Lviplab_client_net_RestPrimitives_2_classLit = createForClass('viplab.client.net.', 'RestPrimitives', 528), Lviplab_client_net_EventPoller_2_classLit = createForClass('viplab.client.net.', 'EventPoller', 520), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer', 10), Lviplab_client_net_JSONLoader_2_classLit = createForClass('viplab.client.net.', 'JSONLoader', 524), Lviplab_client_net_ExerciseLoader_2_classLit = createForClass('viplab.client.net.', 'ExerciseLoader', 523), Lviplab_client_net_SolutionSender_2_classLit = createForClass('viplab.client.net.', 'SolutionSender', 532), Lviplab_client_net_Exercise_2_classLit = createForClass('viplab.client.net.', 'Exercise', 521), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 308), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 212), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 309), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 215), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 214), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 213), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 417), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 418), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3', 419), Lviplab_client_locale_ListResourceBundle_2_classLit = createForClass('viplab.client.locale.', 'ListResourceBundle', 511), Lviplab_client_locale_MissingResourceException_2_classLit = createForClass('viplab.client.locale.', 'MissingResourceException', 513), Lviplab_client_event_ActionEventSource_2_classLit = createForClass('viplab.client.event.', 'ActionEventSource', 483), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 334), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 333), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel', 341), Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratedPopupPanel', 340), Lcom_google_gwt_user_client_ui_DialogBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox', 344), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 349), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 348), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML', 347), Lcom_google_gwt_user_client_ui_DialogBox$CaptionImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$CaptionImpl', 346), Lcom_google_gwt_user_client_ui_DialogBox$MouseHandler_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$MouseHandler', 350), Lcom_google_gwt_user_client_ui_DialogBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$1', 345), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation', 382), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation$1', 383), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1', 379), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3', 380), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4', 381), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent', 304), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 240, values_9), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 593), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel', 407), Lviplab_client_tools_FileSaver_2_classLit = createForClass('viplab.client.tools.', 'FileSaver', 565), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 400), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 399), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 398), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 402, values_11), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 594), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 403, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 404, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 405, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 406, null), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 231), Lcom_google_gwt_user_client_ui_FileUpload_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FileUpload', 357), Lviplab_client_event_ChangeEventSource_2_classLit = createForClass('viplab.client.event.', 'ChangeEventSource', 484), Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass('com.google.gwt.i18n.client.', 'LocaleInfo', 241), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 454), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 453), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 473), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 257), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 455), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 456), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 458), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 457), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 459), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 463), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 464), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 474), Lviplab_client_event_ECSEventSource_2_classLit = createForClass('viplab.client.event.', 'ECSEventSource', 486), Lviplab_client_net_Request_2_classLit = createForClass('viplab.client.net.', 'Request', 526), Lviplab_client_net_Result_2_classLit = createForClass('viplab.client.net.', 'Result', 529), Lviplab_client_gui_ProgressBar_2_classLit = createForClass('viplab.client.gui.', 'ProgressBar', 501), Lcom_google_gwt_user_client_impl_WindowImplIE$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplIE$1', 321), Lcom_google_gwt_user_client_impl_WindowImplIE$2_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplIE$2', 322), _3_3Ljava_lang_String_2_classLit = createForArray('[[Ljava.lang.', 'String;', 595), Lviplab_client_locale_ViPResourceBundle_1de_2_classLit = createForClass('viplab.client.locale.', 'ViPResourceBundle_de', 516), Lviplab_client_locale_ViPResourceBundle_2_classLit = createForClass('viplab.client.locale.', 'ViPResourceBundle', 515), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 452), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 408), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 596), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 409), Lcom_google_gwt_layout_client_LayoutImpl_2_classLit = createForClass('com.google.gwt.layout.client.', 'LayoutImpl', 276), _3Ljava_lang_Boolean_2_classLit = createForArray('[Ljava.lang.', 'Boolean;', 597), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 439), Lcom_google_gwt_user_client_ui_DecoratorPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratorPanel', 343), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 310), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 311), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 314), Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandardBase', 313), Lcom_google_gwt_user_client_impl_DOMImplIE9_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplIE9', 312), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 183), Lcom_google_gwt_event_dom_client_ChangeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ChangeEvent', 182), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 189), Lviplab_client_net_Cookie_2_classLit = createForClass('viplab.client.net.', 'Cookie', 517), Lviplab_client_gui_ProgressWidget_2_classLit = createForClass('viplab.client.gui.', 'ProgressWidget', 502), Lcom_google_gwt_json_client_JSONValue_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONValue', 250), Lcom_google_gwt_json_client_JSONObject_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject', 255), Lcom_google_gwt_json_client_JSONObject$1_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject$1', 256), Lviplab_client_net_Solution_2_classLit = createForClass('viplab.client.net.', 'Solution', 531), Lviplab_client_json_JSONException_2_classLit = createForClass('viplab.client.json.', 'JSONException', 509), Lviplab_client_tools_ZIP_2_classLit = createForClass('viplab.client.tools.', 'ZIP', 566), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 440), Lcom_google_gwt_layout_client_LayoutImplIE8_2_classLit = createForClass('com.google.gwt.layout.client.', 'LayoutImplIE8', 277), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 188), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 187), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 186), Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseDownEvent', 194), Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseUpEvent', 198), Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseMoveEvent', 195), Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOverEvent', 197), Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOutEvent', 196), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 351), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 209), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 450), Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'AttachEvent', 208), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 476), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 359), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 361), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 370), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 369), Lcom_google_gwt_user_client_ui_Grid_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Grid', 368), Lcom_google_gwt_user_client_ui_FlexTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable', 358), Lcom_google_gwt_user_client_ui_FlexTable$FlexCellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable$FlexCellFormatter', 360), Lcom_google_gwt_json_client_JSONArray_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONArray', 249), Ljava_util_Date_2_classLit = createForClass('java.util.', 'Date', 471), Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'DateTimeFormat', 237), Lcom_google_gwt_i18n_client_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.client.', 'DateTimeFormat', 236), Lcom_google_gwt_i18n_shared_DateTimeFormat$PatternPart_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'DateTimeFormat$PatternPart', 248), Lcom_google_gwt_json_client_JSONString_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONString', 260), Lcom_google_gwt_json_client_JSONNumber_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNumber', 254), Lviplab_client_tools_ZIPObject_2_classLit = createForClass('viplab.client.tools.', 'ZIPObject', 567), Lcom_google_gwt_aria_client_Attribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'Attribute', 17), Lcom_google_gwt_safehtml_shared_SafeHtmlString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlString', 280), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 282), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 284), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 283), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 216), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 200), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 475), Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder', 224), Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$Method', 226), Lcom_google_gwt_http_client_RequestBuilder$1_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$1', 225), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 315), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode', 316), Lcom_google_gwt_aria_client_PrimitiveValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'PrimitiveValueAttribute', 55), Lcom_google_gwt_aria_client_AriaValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'AriaValueAttribute', 16), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent', 210), Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestException', 227), Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client.', 'Request', 220), Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client.', 'Response', 223), Lcom_google_gwt_http_client_ResponseImpl_2_classLit = createForClass('com.google.gwt.http.client.', 'ResponseImpl', 222), Lcom_google_gwt_http_client_Request$RequestImplIE6To9$1_2_classLit = createForClass('com.google.gwt.http.client.', 'Request$RequestImplIE6To9$1', 221), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 318), Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'DefaultDateTimeFormatInfo', 239), Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.client.', 'DefaultDateTimeFormatInfo', 238), Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.cldr.', 'DateTimeFormatInfoImpl', 246), Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_1en_2_classLit = createForClass('com.google.gwt.i18n.client.impl.cldr.', 'DateTimeFormatInfoImpl_en', 247), Lcom_google_gwt_json_client_JSONException_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONException', 252), Lcom_google_gwt_i18n_client_TimeZone_2_classLit = createForClass('com.google.gwt.i18n.client.', 'TimeZone', 243), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 211), Lcom_google_gwt_safehtml_shared_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml', 279), Lviplab_client_event_ActionEvent_2_classLit = createForClass('viplab.client.event.', 'ActionEvent', 482), Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestPermissionException', 228), Lviplab_client_event_ECSEvent_2_classLit = createForClass('viplab.client.event.', 'ECSEvent', 485), Ljava_util_Arrays$ArrayList_2_classLit = createForClass('java.util.', 'Arrays$ArrayList', 467), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 7), Lcom_google_gwt_json_client_JSONBoolean_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONBoolean', 251), Lcom_google_gwt_json_client_JSONNull_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNull', 253), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 8), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl', 11), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;', 598), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1', 9), Lviplab_client_net_TranslationUnit_2_classLit = createForClass('viplab.client.net.', 'TranslationUnit', 533), Lviplab_client_net_ExerciseElement_2_classLit = createForClass('viplab.client.net.', 'ExerciseElement', 522), Lviplab_client_gui_InteractiveOutput_2_classLit = createForClass('viplab.client.gui.', 'InteractiveOutput', 496), Lviplab_client_gui_InteractiveOutput$ErrorCell_2_classLit = createForClass('viplab.client.gui.', 'InteractiveOutput$ErrorCell', 497), Lviplab_client_net_ResultElement_2_classLit = createForClass('viplab.client.net.', 'ResultElement', 530), Lviplab_client_gui_PlotterPanel_2_classLit = createForClass('viplab.client.gui.', 'PlotterPanel', 500), Lviplab_client_net_ErrorList_2_classLit = createForClass('viplab.client.net.', 'ErrorList', 519), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 447), Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyEvent', 192), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 469), Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollPanel', 391), Lviplab_client_gui_Canvas_2_classLit = createForClass('viplab.client.gui.', 'Canvas', 494), Lviplab_client_io_StringReader_2_classLit = createForClass('viplab.client.io.', 'StringReader', 508), Lviplab_client_net_ErrorElement_2_classLit = createForClass('viplab.client.net.', 'ErrorElement', 518), Lcom_google_gwt_user_client_ui_Anchor_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Anchor', 328), Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestTimeoutException', 229), Lviplab_client_gui_SourceCodeEditor_2_classLit = createForClass('viplab.client.gui.', 'SourceCodeEditor', 503), Lviplab_client_io_IOException_2_classLit = createForClass('viplab.client.io.', 'IOException', 507), Lviplab_client_plot2d_LinePlot_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlot', 534), Lviplab_client_plot3d_parser_TriangleScanner_2_classLit = createForClass('viplab.client.plot3d.parser.', 'TriangleScanner', 563), Lviplab_client_webgl_gui_GLRenderFrame_2_classLit = createForClass('viplab.client.webgl.gui.', 'GLRenderFrame', 570), Lviplab_client_plot3d_gui_RenderFrame_2_classLit = createForClass('viplab.client.plot3d.gui.', 'RenderFrame', 558), Lviplab_client_plot3d_parser_BoxTriangleScanner_2_classLit = createForClass('viplab.client.plot3d.parser.', 'BoxTriangleScanner', 560), Lviplab_client_gridplot_GridPlotParser_2_classLit = createForClass('viplab.client.gridplot.', 'GridPlotParser', 492), Lviplab_client_gridplot_GridPlot_2_classLit = createForClass('viplab.client.gridplot.', 'GridPlot', 490), Lviplab_client_ace_AceEditor_2_classLit = createForClass('viplab.client.ace.', 'AceEditor', 479), Lviplab_client_plot2d_LinePlotPlotter_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotPlotter', 541), Lviplab_client_plot2d_LinePlotPlayThread_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotPlayThread', 540), Lviplab_client_gui_ToggleButton_2_classLit = createForClass('viplab.client.gui.', 'ToggleButton', 504), Lviplab_client_plot3d_parser_DataSet_2_classLit = createForClass('viplab.client.plot3d.parser.', 'DataSet', 561), Lviplab_client_gui_Color_2_classLit = createForClass('viplab.client.gui.', 'Color', 495), _3Lviplab_client_gui_Color_2_classLit = createForArray('[Lviplab.client.gui.', 'Color;', 599), Lviplab_client_plot3d_geometry_Colormap_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'Colormap', 544), Lviplab_client_plot3d_gui_RGBInterpolatingMap_2_classLit = createForClass('viplab.client.plot3d.gui.', 'RGBInterpolatingMap', 557), Lviplab_client_plot3d_gui_DefaultMap_2_classLit = createForClass('viplab.client.plot3d.gui.', 'DefaultMap', 555), Lviplab_client_plot3d_geometry_Triangle_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'Triangle', 550), Lviplab_client_plot3d_geometry_DataSetRange_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'DataSetRange', 546), Lviplab_client_webgl_geometry_GLScene_2_classLit = createForClass('viplab.client.webgl.geometry.', 'GLScene', 568), _3F_classLit = createForArray('', '[F', 600), Lviplab_client_webgl_gui_GLAnimation_2_classLit = createForClass('viplab.client.webgl.gui.', 'GLAnimation', 569), Lviplab_client_plot3d_gui_ColorLabelPanel_2_classLit = createForClass('viplab.client.plot3d.gui.', 'ColorLabelPanel', 553), Lviplab_client_plot3d_gui_ColorLabelPanel$1_2_classLit = createForClass('viplab.client.plot3d.gui.', 'ColorLabelPanel$1', 554), Lviplab_client_plot3d_gui_InteractivePanel_2_classLit = createForClass('viplab.client.plot3d.gui.', 'InteractivePanel', 556), Lviplab_client_plot3d_gui_Animation_2_classLit = createForClass('viplab.client.plot3d.gui.', 'Animation', 552), Lviplab_client_gridplot_DataSet_2_classLit = createForClass('viplab.client.gridplot.', 'DataSet', 487), _3_3D_classLit = createForArray('', '[[D', 601), Lviplab_client_gridplot_GridPlotAnimation_2_classLit = createForClass('viplab.client.gridplot.', 'GridPlotAnimation', 491), Lviplab_client_gridplot_DataSetView_2_classLit = createForClass('viplab.client.gridplot.', 'DataSetView', 488), Lviplab_client_gridplot_GridPanel_2_classLit = createForClass('viplab.client.gridplot.', 'GridPanel', 489), Lviplab_client_plot3d_gui_TimeControl_2_classLit = createForClass('viplab.client.plot3d.gui.', 'TimeControl', 559), Lviplab_client_ace_AceEditorMode_2_classLit = createForEnum('viplab.client.ace.', 'AceEditorMode', 480, values_12), _3Lviplab_client_ace_AceEditorMode_2_classLit = createForArray('[Lviplab.client.ace.', 'AceEditorMode;', 602), Lviplab_client_ace_AceEditorTheme_2_classLit = createForEnum('viplab.client.ace.', 'AceEditorTheme', 481, values_13), _3Lviplab_client_ace_AceEditorTheme_2_classLit = createForArray('[Lviplab.client.ace.', 'AceEditorTheme;', 603), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel', 362), Lcom_google_gwt_user_client_ui_ScrollImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollImpl', 389), Lcom_google_gwt_user_client_ui_ScrollImpl$ScrollImplTrident_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollImpl$ScrollImplTrident', 390), Lviplab_client_webgl_util_LabelCreator_2_classLit = createForClass('viplab.client.webgl.util.', 'LabelCreator', 571), Lviplab_client_plot3d_geometry_AffineShift_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'AffineShift', 543), Lcom_google_gwt_i18n_client_NumberFormat_2_classLit = createForClass('com.google.gwt.i18n.client.', 'NumberFormat', 242), Lcom_google_gwt_event_dom_client_MouseWheelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseWheelEvent', 199), Lviplab_client_webgl_util_WebGLException_2_classLit = createForClass('viplab.client.webgl.util.', 'WebGLException', 572), Lviplab_client_plot3d_geometry_Matrix_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'Matrix', 548), Lcom_google_gwt_canvas_dom_client_Context2d$TextBaseline_2_classLit = createForEnum('com.google.gwt.canvas.dom.client.', 'Context2d$TextBaseline', 83, values_1), _3Lcom_google_gwt_canvas_dom_client_Context2d$TextBaseline_2_classLit = createForArray('[Lcom.google.gwt.canvas.dom.client.', 'Context2d$TextBaseline;', 604), Lviplab_client_plot3d_geometry_Scene_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'Scene', 549), Lviplab_client_plot3d_geometry_ZBufferEntry_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'ZBufferEntry', 551), _3Lviplab_client_plot3d_geometry_ZBufferEntry_2_classLit = createForArray('[Lviplab.client.plot3d.geometry.', 'ZBufferEntry;', 605), Lcom_google_gwt_touch_client_TouchScroller_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller', 288), Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$TemporalPoint', 298), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand', 295), Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumTouchRemovalCommand', 297), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand$1', 296), Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$1', 289), Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$2', 290), Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$3', 291), Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$4', 292), Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$5', 293), Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$6', 294), Lcom_google_gwt_user_client_ui_CustomButton_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CustomButton', 337), Lcom_google_gwt_user_client_ui_ToggleButton_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ToggleButton', 401), Lcom_google_gwt_user_client_ui_CustomButton$Face_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CustomButton$Face', 339), Lcom_google_gwt_user_client_ui_CustomButton$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CustomButton$2', 338), Lcom_google_gwt_event_dom_client_KeyPressEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyPressEvent', 193), Lviplab_client_plot2d_LinePlotFrame_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotFrame', 535), Lviplab_client_plot2d_LinePlotGraph_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotGraph', 536), Lviplab_client_plot2d_LinePlotText_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotText', 542), Lviplab_client_plot2d_LinePlotLine_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotLine', 537), Lcom_googlecode_gwtgl_array_TypedArray$TypedArrayCompileTimeSupport_2_classLit = createForClass('com.googlecode.gwtgl.array.', 'TypedArray$TypedArrayCompileTimeSupport', 423), Lviplab_client_plot3d_parser_InterpolatedTriangleScanner_2_classLit = createForClass('viplab.client.plot3d.parser.', 'InterpolatedTriangleScanner', 562), Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent', 203), Lcom_google_gwt_event_dom_client_TouchStartEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchStartEvent', 207), Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent$TouchSupportDetector', 205), Lcom_google_gwt_event_dom_client_TouchMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchMoveEvent', 206), Lcom_google_gwt_event_dom_client_TouchEndEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEndEvent', 204), Lcom_google_gwt_event_dom_client_TouchCancelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchCancelEvent', 202), Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_1en_2_classLit = createForClass('com.google.gwt.i18n.client.constants.', 'NumberConstantsImpl_en', 244), Lviplab_client_plot3d_geometry_Label_2_classLit = createForClass('viplab.client.plot3d.geometry.', 'Label', 547), Lviplab_client_plot2d_LinePlotNiceScale_2_classLit = createForClass('viplab.client.plot2d.', 'LinePlotNiceScale', 538), Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit = createForClass('com.google.gwt.touch.client.', 'DefaultMomentum', 285), Lcom_google_gwt_touch_client_Momentum$State_2_classLit = createForClass('com.google.gwt.touch.client.', 'Momentum$State', 286), Lcom_google_gwt_aria_client_RoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RoleImpl', 13), Lcom_google_gwt_aria_client_AlertdialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertdialogRoleImpl', 14), Lcom_google_gwt_aria_client_AlertRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertRoleImpl', 12), Lcom_google_gwt_aria_client_ApplicationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ApplicationRoleImpl', 15), Lcom_google_gwt_aria_client_ArticleRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ArticleRoleImpl', 18), Lcom_google_gwt_aria_client_BannerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'BannerRoleImpl', 19), Lcom_google_gwt_aria_client_ButtonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ButtonRoleImpl', 20), Lcom_google_gwt_aria_client_PressedValue_2_classLit = createForEnum('com.google.gwt.aria.client.', 'PressedValue', 53, values_0), _3Lcom_google_gwt_aria_client_PressedValue_2_classLit = createForArray('[Lcom.google.gwt.aria.client.', 'PressedValue;', 606), Lcom_google_gwt_aria_client_CheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'CheckboxRoleImpl', 21), Lcom_google_gwt_aria_client_ColumnheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ColumnheaderRoleImpl', 22), Lcom_google_gwt_aria_client_ComboboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComboboxRoleImpl', 23), Lcom_google_gwt_aria_client_ComplementaryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComplementaryRoleImpl', 24), Lcom_google_gwt_aria_client_ContentinfoRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ContentinfoRoleImpl', 25), Lcom_google_gwt_aria_client_DefinitionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DefinitionRoleImpl', 26), Lcom_google_gwt_aria_client_DialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DialogRoleImpl', 27), Lcom_google_gwt_aria_client_DirectoryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DirectoryRoleImpl', 28), Lcom_google_gwt_aria_client_DocumentRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DocumentRoleImpl', 29), Lcom_google_gwt_aria_client_FormRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'FormRoleImpl', 30), Lcom_google_gwt_aria_client_GridcellRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridcellRoleImpl', 32), Lcom_google_gwt_aria_client_GridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridRoleImpl', 31), Lcom_google_gwt_aria_client_GroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GroupRoleImpl', 33), Lcom_google_gwt_aria_client_HeadingRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'HeadingRoleImpl', 34), Lcom_google_gwt_aria_client_ImgRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ImgRoleImpl', 35), Lcom_google_gwt_aria_client_LinkRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LinkRoleImpl', 36), Lcom_google_gwt_aria_client_ListboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListboxRoleImpl', 38), Lcom_google_gwt_aria_client_ListitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListitemRoleImpl', 39), Lcom_google_gwt_aria_client_ListRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListRoleImpl', 37), Lcom_google_gwt_aria_client_LogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LogRoleImpl', 40), Lcom_google_gwt_aria_client_MainRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MainRoleImpl', 41), Lcom_google_gwt_aria_client_MarqueeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MarqueeRoleImpl', 42), Lcom_google_gwt_aria_client_MathRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MathRoleImpl', 43), Lcom_google_gwt_aria_client_MenubarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenubarRoleImpl', 45), Lcom_google_gwt_aria_client_MenuitemcheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemcheckboxRoleImpl', 47), Lcom_google_gwt_aria_client_MenuitemradioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemradioRoleImpl', 48), Lcom_google_gwt_aria_client_MenuitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemRoleImpl', 46), Lcom_google_gwt_aria_client_MenuRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuRoleImpl', 44), Lcom_google_gwt_aria_client_NavigationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NavigationRoleImpl', 49), Lcom_google_gwt_aria_client_NoteRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NoteRoleImpl', 50), Lcom_google_gwt_aria_client_OptionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'OptionRoleImpl', 51), Lcom_google_gwt_aria_client_PresentationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'PresentationRoleImpl', 52), Lcom_google_gwt_aria_client_ProgressbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ProgressbarRoleImpl', 56), Lcom_google_gwt_aria_client_RadiogroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadiogroupRoleImpl', 58), Lcom_google_gwt_aria_client_RadioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadioRoleImpl', 57), Lcom_google_gwt_aria_client_RegionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RegionRoleImpl', 59), Lcom_google_gwt_aria_client_RowgroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowgroupRoleImpl', 62), Lcom_google_gwt_aria_client_RowheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowheaderRoleImpl', 63), Lcom_google_gwt_aria_client_RowRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowRoleImpl', 61), Lcom_google_gwt_aria_client_ScrollbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ScrollbarRoleImpl', 64), Lcom_google_gwt_aria_client_SearchRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SearchRoleImpl', 65), Lcom_google_gwt_aria_client_SeparatorRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SeparatorRoleImpl', 66), Lcom_google_gwt_aria_client_SliderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SliderRoleImpl', 67), Lcom_google_gwt_aria_client_SpinbuttonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SpinbuttonRoleImpl', 68), Lcom_google_gwt_aria_client_StatusRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'StatusRoleImpl', 70), Lcom_google_gwt_aria_client_TablistRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TablistRoleImpl', 72), Lcom_google_gwt_aria_client_TabpanelRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabpanelRoleImpl', 73), Lcom_google_gwt_aria_client_TabRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabRoleImpl', 71), Lcom_google_gwt_aria_client_TextboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TextboxRoleImpl', 74), Lcom_google_gwt_aria_client_TimerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TimerRoleImpl', 75), Lcom_google_gwt_aria_client_ToolbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ToolbarRoleImpl', 76), Lcom_google_gwt_aria_client_TooltipRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TooltipRoleImpl', 77), Lcom_google_gwt_aria_client_TreegridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreegridRoleImpl', 79), Lcom_google_gwt_aria_client_TreeitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeitemRoleImpl', 80), Lcom_google_gwt_aria_client_TreeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeRoleImpl', 78), Lcom_google_gwt_touch_client_Point_2_classLit = createForClass('com.google.gwt.touch.client.', 'Point', 287);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=viplab-0.js\n"]);
